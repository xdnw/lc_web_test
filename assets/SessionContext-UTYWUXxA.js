import{r as e,j as r,u as s}from"./index-dWbV2YWN.js";import{e as n,S as t}from"./endpoints-C8SDwtyd.js";import{u as o}from"./useQuery-DQU7waJ6.js";const i=e.createContext(void 0),u=({children:u})=>{const a=(()=>{const[r,i]=e.useState(null),[u,a]=e.useState(null),l=s(),{data:d,error:c,refetch:m}=o(n(t.endpoint,{}));return{session:r||(null==d?void 0:d.data)||null,error:null!==u?u:c instanceof Error?c.message:null,setSession:e=>{i(e)},setError:e=>{a(e)},refetchSession:e.useCallback((()=>{l.removeQueries({queryKey:[t.endpoint.name]}),m()}),[l,m])}})();return r.jsx(r.Fragment,{children:r.jsx(i.Provider,{value:a,children:u})})},a=()=>{const r=e.useContext(i);if(!r)throw new Error("useSession must be used within a SessionProvider");return r};export{u as S,a as u};
