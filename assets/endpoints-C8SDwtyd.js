const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/arrow-right-to-line-yP5RVUb7.js","assets/createLucideIcon-BbV9mzym.js","assets/index-dWbV2YWN.js","assets/index-Cjq5FETw.css","assets/check-D2LjDsXs.js","assets/chevron-down-BDk-k6Dz.js","assets/chevron-left-CxJidflz.js","assets/chevron-right-ChXEAjUX.js","assets/chevron-up-B4YDzb8G.js","assets/circle-CsIUk0AZ.js","assets/clipboard-DtNtXdlY.js","assets/dot-Cxx_00Zn.js","assets/download-CYqA2Q4T.js","assets/external-link-WO11aRdI.js","assets/key-round-CkADTp9K.js","assets/mail-BzrOqghd.js","assets/moon-DLtK_R5F.js","assets/more-horizontal-uhbthekx.js","assets/plane-BlJwI_iS.js","assets/sailboat-bTgMUYnP.js","assets/settings-D5NmyQi_.js","assets/sheet-DyK31tXk.js","assets/shield-rWkbqz4F.js","assets/sun-AJAn9OY_.js","assets/x-M4l0QMK8.js","assets/git-pull-request-hBCWoVtn.js","assets/book-open-text-Da4hHOVN.js","assets/infinity-CTKmVkQ8.js","assets/github-D6B7ClRu.js","assets/message-square-text-DMBut94P.js","assets/circle-user-round-tL8hN5k-.js","assets/joystick-B3Iu73KY.js","assets/at-sign-u_guXHWT.js","assets/list-x-D6Qu2GWF.js","assets/list-checks-Bib9fSOF.js","assets/eye-off-ChSTpNJr.js","assets/bug-DkJclWoY.js"])))=>i.map(i=>d[i]);
var e,t,a,n,o,i,s,r,l,c,p,d,u,m,y,g,h,f,_,A,b,T,S,E,N,I,R=e=>{throw TypeError(e)},v=(e,t,a)=>t.has(e)||R("Cannot "+a),D=(e,t,a)=>(v(e,t,"read from private field"),a?a.call(e):t.get(e)),w=(e,t,a)=>t.has(e)?R("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,a),F=(e,t,a,n)=>(v(e,t,"write to private field"),n?n.call(e,a):t.set(e,a),a),O=(e,t,a)=>(v(e,t,"access private method"),a);import{S as C,p as M,q as L,s as k,t as B,v as x,w as G,x as P,y as U,z as W,A as j,B as V,C as q,r as H,u as Y,j as K,_ as z,d as X}from"./index-dWbV2YWN.js";import{U as J}from"./button-BYsJFizr.js";var Q=(I=class extends C{constructor(h,f){super(),w(this,g),w(this,e),w(this,t),w(this,a),w(this,n),w(this,o),w(this,i),w(this,s),w(this,r),w(this,l),w(this,c),w(this,p),w(this,d),w(this,u),w(this,m),w(this,y,new Set),this.options=f,F(this,e,h),F(this,r,null),F(this,s,M()),this.options.experimental_prefetchInRender||D(this,s).reject(new Error("experimental_prefetchInRender feature flag is not enabled")),this.bindMethods(),this.setOptions(f)}bindMethods(){this.refetch=this.refetch.bind(this)}onSubscribe(){1===this.listeners.size&&(D(this,t).addObserver(this),Z(D(this,t),this.options)?O(this,g,h).call(this):this.updateResult(),O(this,g,b).call(this))}onUnsubscribe(){this.hasListeners()||this.destroy()}shouldFetchOnReconnect(){return $(D(this,t),this.options,this.options.refetchOnReconnect)}shouldFetchOnWindowFocus(){return $(D(this,t),this.options,this.options.refetchOnWindowFocus)}destroy(){this.listeners=new Set,O(this,g,T).call(this),O(this,g,S).call(this),D(this,t).removeObserver(this)}setOptions(a,n){const o=this.options,i=D(this,t);if(this.options=D(this,e).defaultQueryOptions(a),void 0!==this.options.enabled&&"boolean"!=typeof this.options.enabled&&"function"!=typeof this.options.enabled&&"boolean"!=typeof L(this.options.enabled,D(this,t)))throw new Error("Expected enabled to be a boolean or a callback that returns a boolean");O(this,g,E).call(this),D(this,t).setOptions(this.options),o._defaulted&&!k(this.options,o)&&D(this,e).getQueryCache().notify({type:"observerOptionsUpdated",query:D(this,t),observer:this});const s=this.hasListeners();s&&ee(D(this,t),i,this.options,o)&&O(this,g,h).call(this),this.updateResult(n),!s||D(this,t)===i&&L(this.options.enabled,D(this,t))===L(o.enabled,D(this,t))&&B(this.options.staleTime,D(this,t))===B(o.staleTime,D(this,t))||O(this,g,f).call(this);const r=O(this,g,_).call(this);!s||D(this,t)===i&&L(this.options.enabled,D(this,t))===L(o.enabled,D(this,t))&&r===D(this,m)||O(this,g,A).call(this,r)}getOptimisticResult(a){const s=D(this,e).getQueryCache().build(D(this,e),a),r=this.createResult(s,a);return function(e,t){if(!k(e.getCurrentResult(),t))return!0;return!1}(this,r)&&(F(this,n,r),F(this,i,this.options),F(this,o,D(this,t).state)),r}getCurrentResult(){return D(this,n)}trackResult(e,t){const a={};return Object.keys(e).forEach((n=>{Object.defineProperty(a,n,{configurable:!1,enumerable:!0,get:()=>(this.trackProp(n),null==t||t(n),e[n])})})),a}trackProp(e){D(this,y).add(e)}getCurrentQuery(){return D(this,t)}refetch({...e}={}){return this.fetch({...e})}fetchOptimistic(t){const a=D(this,e).defaultQueryOptions(t),n=D(this,e).getQueryCache().build(D(this,e),a);return n.fetch().then((()=>this.createResult(n,a)))}fetch(e){return O(this,g,h).call(this,{...e,cancelRefetch:e.cancelRefetch??!0}).then((()=>(this.updateResult(),D(this,n))))}createResult(e,d){var u;const m=D(this,t),y=this.options,g=D(this,n),h=D(this,o),f=D(this,i),_=e!==m?e.state:D(this,a),{state:A}=e;let b,T={...A},S=!1;if(d._optimisticResults){const t=this.hasListeners(),a=!t&&Z(e,d),n=t&&ee(e,m,d,y);(a||n)&&(T={...T,...j(A.data,e.options)}),"isRestoring"===d._optimisticResults&&(T.fetchStatus="idle")}let{error:E,errorUpdatedAt:N,status:I}=T;if(d.select&&void 0!==T.data)if(g&&T.data===(null==h?void 0:h.data)&&d.select===D(this,l))b=D(this,c);else try{F(this,l,d.select),b=d.select(T.data),b=V(null==g?void 0:g.data,b,d),F(this,c,b),F(this,r,null)}catch(k){F(this,r,k)}else b=T.data;if(void 0!==d.placeholderData&&void 0===b&&"pending"===I){let e;if((null==g?void 0:g.isPlaceholderData)&&d.placeholderData===(null==f?void 0:f.placeholderData))e=g.data;else if(e="function"==typeof d.placeholderData?d.placeholderData(null==(u=D(this,p))?void 0:u.state.data,D(this,p)):d.placeholderData,d.select&&void 0!==e)try{e=d.select(e),F(this,r,null)}catch(k){F(this,r,k)}void 0!==e&&(I="success",b=V(null==g?void 0:g.data,e,d),S=!0)}D(this,r)&&(E=D(this,r),b=D(this,c),N=Date.now(),I="error");const R="fetching"===T.fetchStatus,v="pending"===I,w="error"===I,O=v&&R,C=void 0!==b,L={status:I,fetchStatus:T.fetchStatus,isPending:v,isSuccess:"success"===I,isError:w,isInitialLoading:O,isLoading:O,data:b,dataUpdatedAt:T.dataUpdatedAt,error:E,errorUpdatedAt:N,failureCount:T.fetchFailureCount,failureReason:T.fetchFailureReason,errorUpdateCount:T.errorUpdateCount,isFetched:T.dataUpdateCount>0||T.errorUpdateCount>0,isFetchedAfterMount:T.dataUpdateCount>_.dataUpdateCount||T.errorUpdateCount>_.errorUpdateCount,isFetching:R,isRefetching:R&&!v,isLoadingError:w&&!C,isPaused:"paused"===T.fetchStatus,isPlaceholderData:S,isRefetchError:w&&C,isStale:te(e,d),refetch:this.refetch,promise:D(this,s)};if(this.options.experimental_prefetchInRender){const t=e=>{"error"===L.status?e.reject(L.error):void 0!==L.data&&e.resolve(L.data)},a=()=>{const e=F(this,s,L.promise=M());t(e)},n=D(this,s);switch(n.status){case"pending":e.queryHash===m.queryHash&&t(n);break;case"fulfilled":"error"!==L.status&&L.data===n.value||a();break;case"rejected":"error"===L.status&&L.error===n.reason||a()}}return L}updateResult(e){const a=D(this,n),s=this.createResult(D(this,t),this.options);if(F(this,o,D(this,t).state),F(this,i,this.options),void 0!==D(this,o).data&&F(this,p,D(this,t)),k(s,a))return;F(this,n,s);const r={};!1!==(null==e?void 0:e.listeners)&&(()=>{if(!a)return!0;const{notifyOnChangeProps:e}=this.options,t="function"==typeof e?e():e;if("all"===t||!t&&!D(this,y).size)return!0;const o=new Set(t??D(this,y));return this.options.throwOnError&&o.add("error"),Object.keys(D(this,n)).some((e=>{const t=e;return D(this,n)[t]!==a[t]&&o.has(t)}))})()&&(r.listeners=!0),O(this,g,N).call(this,{...r,...e})}onQueryUpdate(){this.updateResult(),this.hasListeners()&&O(this,g,b).call(this)}},e=new WeakMap,t=new WeakMap,a=new WeakMap,n=new WeakMap,o=new WeakMap,i=new WeakMap,s=new WeakMap,r=new WeakMap,l=new WeakMap,c=new WeakMap,p=new WeakMap,d=new WeakMap,u=new WeakMap,m=new WeakMap,y=new WeakMap,g=new WeakSet,h=function(e){O(this,g,E).call(this);let a=D(this,t).fetch(this.options,e);return(null==e?void 0:e.throwOnError)||(a=a.catch(x)),a},f=function(){O(this,g,T).call(this);const e=B(this.options.staleTime,D(this,t));if(G||D(this,n).isStale||!P(e))return;const a=U(D(this,n).dataUpdatedAt,e);F(this,d,setTimeout((()=>{D(this,n).isStale||this.updateResult()}),a+1))},_=function(){return("function"==typeof this.options.refetchInterval?this.options.refetchInterval(D(this,t)):this.options.refetchInterval)??!1},A=function(e){O(this,g,S).call(this),F(this,m,e),!G&&!1!==L(this.options.enabled,D(this,t))&&P(D(this,m))&&0!==D(this,m)&&F(this,u,setInterval((()=>{(this.options.refetchIntervalInBackground||W.isFocused())&&O(this,g,h).call(this)}),D(this,m)))},b=function(){O(this,g,f).call(this),O(this,g,A).call(this,O(this,g,_).call(this))},T=function(){D(this,d)&&(clearTimeout(D(this,d)),F(this,d,void 0))},S=function(){D(this,u)&&(clearInterval(D(this,u)),F(this,u,void 0))},E=function(){const n=D(this,e).getQueryCache().build(D(this,e),this.options);if(n===D(this,t))return;const o=D(this,t);F(this,t,n),F(this,a,n.state),this.hasListeners()&&(null==o||o.removeObserver(this),n.addObserver(this))},N=function(a){q.batch((()=>{a.listeners&&this.listeners.forEach((e=>{e(D(this,n))})),D(this,e).getQueryCache().notify({query:D(this,t),type:"observerResultsUpdated"})}))},I);function Z(e,t){return function(e,t){return!1!==L(t.enabled,e)&&void 0===e.state.data&&!("error"===e.state.status&&!1===t.retryOnMount)}(e,t)||void 0!==e.state.data&&$(e,t,t.refetchOnMount)}function $(e,t,a){if(!1!==L(t.enabled,e)){const n="function"==typeof a?a(e):a;return"always"===n||!1!==n&&te(e,t)}return!1}function ee(e,t,a,n){return(e!==t||!1===L(n.enabled,e))&&(!a.suspense||"error"!==e.state.status)&&te(e,a)}function te(e,t){return!1!==L(t.enabled,e)&&e.isStaleByTime(B(t.staleTime,e))}var ae=H.createContext(!1);ae.Provider;var ne=H.createContext(function(){let e=!1;return{clearReset:()=>{e=!1},reset:()=>{e=!0},isReset:()=>e}}());function oe(){}var ie=(e,t)=>void 0===t.state.data,se=(e,t,a)=>t.fetchOptimistic(e).catch((()=>{a.clearReset()}));function re(e,t,a){var n,o,i,s,r;const l=Y(),c=H.useContext(ae),p=H.useContext(ne),d=l.defaultQueryOptions(e);null==(o=null==(n=l.getDefaultOptions().queries)?void 0:n._experimental_beforeQuery)||o.call(n,d),d._optimisticResults=c?"isRestoring":"optimistic",(e=>{const t=e.staleTime;e.suspense&&(e.staleTime="function"==typeof t?(...e)=>Math.max(t(...e),1e3):Math.max(t??1e3,1e3),"number"==typeof e.gcTime&&(e.gcTime=Math.max(e.gcTime,1e3)))})(d),((e,t)=>{(e.suspense||e.throwOnError||e.experimental_prefetchInRender)&&(t.isReset()||(e.retryOnMount=!1))})(d,p),(e=>{H.useEffect((()=>{e.clearReset()}),[e])})(p);const u=!l.getQueryCache().get(d.queryHash),[m]=H.useState((()=>new t(l,d))),y=m.getOptimisticResult(d),g=!c&&!1!==e.subscribed;if(H.useSyncExternalStore(H.useCallback((e=>{const t=g?m.subscribe(q.batchCalls(e)):oe;return m.updateResult(),t}),[m,g]),(()=>m.getCurrentResult()),(()=>m.getCurrentResult())),H.useEffect((()=>{m.setOptions(d,{listeners:!1})}),[d,m]),((e,t)=>(null==e?void 0:e.suspense)&&t.isPending)(d,y))throw se(d,m,p);if((({result:e,errorResetBoundary:t,throwOnError:a,query:n,suspense:o})=>{return e.isError&&!t.isReset()&&!e.isFetching&&n&&(o&&void 0===e.data||(i=a,s=[e.error,n],"function"==typeof i?i(...s):!!i));var i,s})({result:y,errorResetBoundary:p,throwOnError:d.throwOnError,query:l.getQueryCache().get(d.queryHash),suspense:d.suspense}))throw y.error;if(null==(s=null==(i=l.getDefaultOptions().queries)?void 0:i._experimental_afterQuery)||s.call(i,d,y),d.experimental_prefetchInRender&&!G&&((e,t)=>e.isLoading&&e.isFetching&&!t)(y,c)){const e=u?se(d,m,p):null==(r=l.getQueryCache().get(d.queryHash))?void 0:r.promise;null==e||e.catch(oe).finally((()=>{m.updateResult()}))}return d.notifyOnChangeProps?y:m.trackResult(y)}const le={arrowrighttoline:H.lazy((()=>z((()=>import("./arrow-right-to-line-yP5RVUb7.js")),__vite__mapDeps([0,1,2,3])))),check:H.lazy((()=>z((()=>import("./check-D2LjDsXs.js")),__vite__mapDeps([4,1,2,3])))),checkicon:H.lazy((()=>z((()=>import("./check-D2LjDsXs.js")),__vite__mapDeps([4,1,2,3])))),chevrondown:H.lazy((()=>z((()=>import("./chevron-down-BDk-k6Dz.js")),__vite__mapDeps([5,1,2,3])))),chevronleft:H.lazy((()=>z((()=>import("./chevron-left-CxJidflz.js")),__vite__mapDeps([6,1,2,3])))),chevronright:H.lazy((()=>z((()=>import("./chevron-right-ChXEAjUX.js")),__vite__mapDeps([7,1,2,3])))),chevronup:H.lazy((()=>z((()=>import("./chevron-up-B4YDzb8G.js")),__vite__mapDeps([8,1,2,3])))),circle:H.lazy((()=>z((()=>import("./circle-CsIUk0AZ.js")),__vite__mapDeps([9,1,2,3])))),clipboardicon:H.lazy((()=>z((()=>import("./clipboard-DtNtXdlY.js")),__vite__mapDeps([10,1,2,3])))),dot:H.lazy((()=>z((()=>import("./dot-Cxx_00Zn.js")),__vite__mapDeps([11,1,2,3])))),download:H.lazy((()=>z((()=>import("./download-CYqA2Q4T.js")),__vite__mapDeps([12,1,2,3])))),externallink:H.lazy((()=>z((()=>import("./external-link-WO11aRdI.js")),__vite__mapDeps([13,1,2,3])))),keyround:H.lazy((()=>z((()=>import("./key-round-CkADTp9K.js")),__vite__mapDeps([14,1,2,3])))),mail:H.lazy((()=>z((()=>import("./mail-BzrOqghd.js")),__vite__mapDeps([15,1,2,3])))),moon:H.lazy((()=>z((()=>import("./moon-DLtK_R5F.js")),__vite__mapDeps([16,1,2,3])))),morehorizontal:H.lazy((()=>z((()=>import("./more-horizontal-uhbthekx.js")),__vite__mapDeps([17,1,2,3])))),plane:H.lazy((()=>z((()=>import("./plane-BlJwI_iS.js")),__vite__mapDeps([18,1,2,3])))),sailboat:H.lazy((()=>z((()=>import("./sailboat-bTgMUYnP.js")),__vite__mapDeps([19,1,2,3])))),settings:H.lazy((()=>z((()=>import("./settings-D5NmyQi_.js")),__vite__mapDeps([20,1,2,3])))),sheet:H.lazy((()=>z((()=>import("./sheet-DyK31tXk.js")),__vite__mapDeps([21,1,2,3])))),shield:H.lazy((()=>z((()=>import("./shield-rWkbqz4F.js")),__vite__mapDeps([22,1,2,3])))),sun:H.lazy((()=>z((()=>import("./sun-AJAn9OY_.js")),__vite__mapDeps([23,1,2,3])))),x:H.lazy((()=>z((()=>import("./x-M4l0QMK8.js")),__vite__mapDeps([24,1,2,3])))),gitpullrequest:H.lazy((()=>z((()=>import("./git-pull-request-hBCWoVtn.js")),__vite__mapDeps([25,1,2,3])))),bookopentext:H.lazy((()=>z((()=>import("./book-open-text-Da4hHOVN.js")),__vite__mapDeps([26,1,2,3])))),infinity:H.lazy((()=>z((()=>import("./infinity-CTKmVkQ8.js")),__vite__mapDeps([27,1,2,3])))),github:H.lazy((()=>z((()=>import("./github-D6B7ClRu.js")),__vite__mapDeps([28,1,2,3])))),messagesquaretext:H.lazy((()=>z((()=>import("./message-square-text-DMBut94P.js")),__vite__mapDeps([29,1,2,3])))),circleuserround:H.lazy((()=>z((()=>import("./circle-user-round-tL8hN5k-.js")),__vite__mapDeps([30,1,2,3])))),joystick:H.lazy((()=>z((()=>import("./joystick-B3Iu73KY.js")),__vite__mapDeps([31,1,2,3])))),atsign:H.lazy((()=>z((()=>import("./at-sign-u_guXHWT.js")),__vite__mapDeps([32,1,2,3])))),listx:H.lazy((()=>z((()=>import("./list-x-D6Qu2GWF.js")),__vite__mapDeps([33,1,2,3])))),listchecks:H.lazy((()=>z((()=>import("./list-checks-Bib9fSOF.js")),__vite__mapDeps([34,1,2,3])))),eyeoff:H.lazy((()=>z((()=>import("./eye-off-ChSTpNJr.js")),__vite__mapDeps([35,1,2,3])))),bug:H.lazy((()=>z((()=>import("./bug-DkJclWoY.js")),__vite__mapDeps([36,1,2,3]))))},ce=K.jsx("svg",{width:22,height:22}),pe=({size:e=22,className:t})=>K.jsx("svg",{width:e,height:e,className:t}),de=H.memo((({name:e,size:t=22,className:a,fallback:n=K.jsx(pe,{size:t,className:a}),onClick:o,...i})=>{const s=e.toLowerCase(),r=le[s];return K.jsx(H.Suspense,{fallback:n,children:K.jsx(r,{size:t,className:a,onClick:o,...i})})})),ue={CSV:{delimiter:",",ext:"csv",mime:"text/csv"},TSV:{delimiter:"\t",ext:"csv",mime:"text/tab-separated-values"}};function me(e,t,a){const n=(t?"":"sep="+a.delimiter+"\n")+e.map((e=>e.join(a.delimiter))).join("\n");if(t)return navigator.clipboard.writeText(n).then((()=>{})).catch((e=>{})),["Copied to clipboard","The data for the currently selected columns has been copied to your clipboard."];{const e=new Blob([n],{type:a.mime+";charset=utf-8;"}),t=document.createElement("a"),o=URL.createObjectURL(e);return t.setAttribute("href",o),t.setAttribute("download","data."+a.ext),t.style.visibility="hidden",document.body.appendChild(t),t.click(),document.body.removeChild(t),["Download starting","The data for the currently selected columns should begin downloading. If the download does not start, please check your browser settings, or try the clipboard button instead."]}}function ye(e){switch(e){case"SI_UNIT":return ve;case"PERCENTAGE_ONE":return e=>(100*e).toFixed(2)+"%";case"PERCENTAGE_100":return e=>e.toFixed(2)+"%";case"DECIMAL_ROUNDED":return Ee}}function ge(e){return"TURN_TO_DATE"===e||"DAYS_TO_DATE"===e||"MILLIS_TO_DATE"===e||"SECONDS_TO_DATE"===e}function he(e){switch(e){case"TURN_TO_DATE":return e=>2*e*60*60*1e3;case"DAYS_TO_DATE":return e=>24*e*60*60*1e3;case"MILLIS_TO_DATE":default:return e=>e;case"SECONDS_TO_DATE":return e=>1e3*e}}function fe(e){switch(e){case"NUMERIC":return e=>e.toString();case"DECIMAL_ROUNDED":return Ee;case"SI_UNIT":return ve;case"TURN_TO_DATE":return Te;case"DAYS_TO_DATE":return be;case"MILLIS_TO_DATE":return _e;case"SECONDS_TO_DATE":return e=>_e(1e3*e)}}function _e(e){if(null==e||-1==e)return"N/A";const t=new Date(e).toISOString().slice(0,16).replace("T"," ");return t.endsWith("00:00")?t.slice(0,10):t}const Ae=12;function be(e){return Te(e*Ae)}function Te(e){const t=e/Ae*60*60*24*1e3,a=new Date;a.setTime(t);const n=(new Date).getFullYear(),o=a.toISOString().slice(0,16).replace("T"," "),i=a.getFullYear(),s=o.slice(11,16),r=o.slice(5,10);return i===n?`${r}-${i.toString().slice(-2)}${"00:00"!==s?" "+s:""}`:o.slice(0,10)+("00:00"!==s?" "+s:"")}function Se(e,t){return function(e,t,a){const n=[];let o=0,i=0,s=!1,r=null,l="",c=0;for(let p=0;p<e.length;p++){let d=e.charAt(p);"“"===d&&(d="”");const u=p===e.length-1;switch(d){case"[":case"(":case"{":i++;break;case"}":case")":case"]":i--}if(u||!(i>0))if(u){let t;t=s?{delimiter:l,offset:1,content:e.substring(o+1,e.length-1),type:c}:{delimiter:l,offset:0,content:e.substring(o),type:c},n.push(t)}else if(De(d)&&(!r||De(r)&&De(d)&&d===r)&&(s=!s,r=s?d:null),!s&&t){const i=t(e,p);if(null!==i){let s=e.substring(o,p),r=0;if(s){switch(s.charAt(0)){case"'":case'"':case"“":case"”":s=s.substring(1,s.length-1),r++}s.trim()&&(n.push({delimiter:l,offset:r,content:s,type:i[1]}),l=e.substring(p,p+i[0]),c=i[1])}o=p+i[0],p=o-1,--a<=1&&(t=null)}}}return n}(e,((e,a)=>e.charAt(a)===t?[1,0]:null),Number.MAX_SAFE_INTEGER).map((e=>e.content))}function Ee(e){const t=(""+(e<0?-e:e)).split("."),a=t[0];let n,o=n=a.length,i="";for(;o--;)i=(0===o||(n-o)%3?"":",")+a.charAt(o)+i;return(e<0?"-":"")+i+(t[1]?"."+(t[1].length>2?t[1].substring(0,2):t[1]):"")}const Ne=[{value:1e18,symbol:"E"},{value:1e15,symbol:"P"},{value:1e12,symbol:"T"},{value:1e9,symbol:"B"},{value:1e6,symbol:"M"},{value:1e3,symbol:"k"}];function Ie(e,t){const a=(Date.now()-e)/1e3;return 0===a?"just now":a>0?Re(a,t)+" ago":"in "+Re(-a,t)}function Re(e,t){const a=[{label:"y",value:31536e3},{label:"w",value:604800},{label:"d",value:86400},{label:"h",value:3600},{label:"m",value:60},{label:"s",value:1}];let n="";for(const o of a){const a=Math.floor(e/o.value);if(a>0&&(n+=a+""+o.label,e-=a*o.value),n.length>=2*t)break}return n}function ve(e){if(void 0===e)return e;const t=e<0;e=Math.abs(e);for(let n=0;n<Ne.length;n++)if(e>=Ne[n].value){const a=e/Ne[n].value,o=(a%1==0?a.toString():a.toFixed(2))+Ne[n].symbol;return t?"-"+o:o}const a=e%1==0?e.toString():e.toFixed(2);return t?"-"+a:a}function De(e){return["'",'"',"“","”"].includes(e)}function we(e){return[...e].reduce(((e,t)=>(e[t]=(e[t]||0)+1,e)),{})}function Fe(e,t,a,n){const o=n.name.toLowerCase();if(o.includes(e))return o.startsWith(e)?5:4;let i=0;for(let l=0;l<o.length;l++)if(o[l]===e[i]&&(i++,i===e.length))return 2;const s=n.getCharFrequency();let r=0;for(const[l,c]of Object.entries(t)){const e=s[l]||0;if(!(e>=c)){const e=n.getWordFrequency();for(const t of a)if(!e.has(t))return 0;return 3}r+=Math.min(c,e)}return r/e.length}const Oe={commands:{admin:{bot:{import_emojis:{help:"",desc:"Import all emojis from another guild",annotations:{role:{value:["ADMIN"]}},arguments:{guild:{name:"guild",type:"Guild"}}},import_settings:{help:"",desc:"Import api keys from the guild API_KEY setting, so they can be validated",annotations:{role:{value:["ADMIN"],root:!0}}},profile:{help:"",desc:"Set bot profile picture",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{url:{name:"url",type:"String"}}},remove_deleted_offshores:{help:"",desc:"Remove deleted alliances or guilds from a coalition\nNote: Do not remove deleted offshores or banks if you want to use their previous transactions in deposit calculations",annotations:{role:{value:["ADMIN"]}},arguments:{coalition:{name:"coalition",type:"Coalition"}}},rename:{help:"",desc:"Set bot name",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{name:{name:"name",type:"String"}}},stop:{help:"",desc:"Terminate running tasks and attempt to stop the bot",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{save:{name:"save",type:"boolean"}}},update_commands:{help:"",desc:"",annotations:{role:{value:["ADMIN"],root:!0}}}},command:{format_for_nations:{help:"",desc:"Format a command for each nation, and run it as yourself",annotations:{role:{value:["ADMIN"]}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},command:{name:"command",type:"String"}}},multiple:{help:"",desc:"Run multiple commands",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{commands:{name:"commands",type:"String[TextArea]"}}},sudo:{help:"",desc:"Run a command as another user",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{command:{name:"command",type:"String"},user:{name:"user",optional:!0,flag:"u",type:"User"},nation:{name:"nation",optional:!0,flag:"n",type:"DBNation"}}},sudo_nations:{help:"",desc:"Run a command as multiple nations",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},command:{name:"command",type:"String"}}}},debug:{api_usage:{help:"",desc:"Print the usage stats the api for your alliance to console",annotations:{role:{value:["ADMIN"],root:!0}}},guild:{help:"",desc:"View info about a guild with a given id",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{guild:{name:"guild",type:"Guild"}}},msg_info:{help:"",desc:"View a list of reactions on a message sent by or mentioning the bot",arguments:{message:{name:"message",type:"Message"},useIds:{name:"useIds",optional:!0,flag:"i",desc:"List the ids of users who reacted",type:"boolean"}}},nation_meta:{help:"",desc:"View meta information about a nation in the bot's database",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{nation:{name:"nation",type:"DBNation"},meta:{name:"meta",type:"NationMeta"}}},new_offshore:{help:"",desc:"",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{alliance:{name:"alliance",type:"DBAlliance"}}},trade_id:{help:"",desc:"View info about trades with a given id",arguments:{ids:{name:"ids",type:"Set<Integer>"}}}},dm:{help:"",desc:"Send a direct message on discord to the nations specified\nIf they are not registered, then no message will be sent",annotations:{role:{value:["MAIL"],root:!0}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},message:{name:"message",type:"String"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},leaveserver:{help:"",desc:"Make the bot leave the server with the specified ID",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{guildId:{name:"guildId",type:"long"}}},list:{authenticated:{help:"",desc:"List users in the guild that have provided login credentials to locutus",annotations:{role:{value:["ADMIN"],root:!0}}},expired_guilds:{help:"",desc:"List guilds which have not sent a recent message\nNote: Deprecated. Not reliable if message content intent is disabled",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{checkMessages:{name:"checkMessages",type:"boolean"}}},expired_offshores:{help:"",desc:"List accounts with the offshore which are inactive, as well as details about last owner/alliance activity and last transfer info",annotations:{role:{value:["ADMIN"],root:!0}}},guild_owners:{help:"",desc:"List the owners of the guilds Locutus is connected to",annotations:{role:{value:["ADMIN"],root:!0}}},login_times:{help:"",desc:"Generate a sheet of recorded login times for a set of nations within a time range",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},cutoff:{name:"cutoff",type:"long[Timestamp]"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},multis:{help:"",desc:"List players currently sharing a network or an active ban",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},listExpired:{name:"listExpired",optional:!0,flag:"e",type:"boolean"},onlySameAlliance:{name:"onlySameAlliance",optional:!0,flag:"a",type:"boolean"},onlySimilarTime:{name:"onlySimilarTime",optional:!0,flag:"t",type:"Long[Timediff]"},sortByAgeDays:{name:"sortByAgeDays",optional:!0,flag:"d",type:"boolean"},sortByLogin:{name:"sortByLogin",optional:!0,flag:"l",type:"boolean"},forceUpdate:{name:"forceUpdate",optional:!0,flag:"f",type:"boolean"}}},multis_land:{help:"",desc:"Generate a sheet of nation customization (or lack thereof), and mark specific nation ids in the sheet with the ids provided",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"},mark:{name:"mark",optional:!0,flag:"m",type:"Set<DBNation>"}}}},queue:{custom_messages:{help:"",desc:"Global toggles for conditional message settings\nsetMeta = If nation meta is set so that multiple messages cannot be sent to the same person, or to older nations\nsendMessages = If message sending is enabled\nrun = Force send the messages now to applicable nations",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{setMeta:{name:"setMeta",type:"boolean"},sendMessages:{name:"sendMessages",type:"boolean"},run:{name:"run",type:"boolean"}}},file:{help:"",desc:"Dump the URL requests to console",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{timestamp:{name:"timestamp",optional:!0,desc:"Specify a timestamp to attach a tallied log of requests over a timeframe\nInstead of just a summary of current items in the queue",type:"Long[Timestamp]"},numResults:{name:"numResults",optional:!0,flag:"r",desc:"The number of top results to include\nDefault: 25",type:"Integer"}}}},set_v2:{help:"",desc:"Set the v2 flag",arguments:{value:{name:"value",type:"boolean"}}},settings:{info_servers:{help:"",desc:"Generate a google spreadsheet for a guild setting value for a set of discord servers",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{setting:{name:"setting",type:"GuildSetting"},guilds:{name:"guilds",type:"Set<GuildDB>"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},subscribe:{help:"",desc:"Switch a channel to a subscription channel in multiple servers",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{setting:{name:"setting",type:"GuildSetting"},guilds:{name:"guilds",type:"Set<GuildDB>"},news_channel:{name:"news_channel",type:"TextChannel"},unset_on_error:{name:"unset_on_error",optional:!0,flag:"e",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},unset:{help:"",desc:"Bulk unset a guild setting in multiple servers which are invalid based on the provided options",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{settings:{name:"settings",type:"Set<GuildSetting>"},guilds:{name:"guilds",type:"Set<GuildDB>"},unset_cant_talk:{name:"unset_cant_talk",optional:!0,flag:"t",type:"boolean"},unset_null:{name:"unset_null",optional:!0,flag:"i",type:"boolean"},unset_key_no_perms:{name:"unset_key_no_perms",optional:!0,flag:"p",type:"boolean"},unset_invalid_aa:{name:"unset_invalid_aa",optional:!0,flag:"g",type:"boolean"},unset_all:{name:"unset_all",optional:!0,flag:"a",type:"boolean"},unset_validate:{name:"unset_validate",optional:!0,flag:"v",type:"boolean"},unsetMessage:{name:"unsetMessage",optional:!0,flag:"m",type:"String"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}}},sync:{attacks:{help:"",desc:"Force a fetch and update of attacks from the api",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{runAlerts:{name:"runAlerts",type:"boolean"},fixAttacks:{name:"fixAttacks",optional:!0,flag:"f",type:"boolean"}}},bans:{help:"",desc:"Fetch and update the bans from the API",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{discordBans:{name:"discordBans",optional:!0,type:"boolean",def:"false"}}},bounties:{help:"",desc:"Force a fetch and update of bounties from the api",annotations:{role:{value:["ADMIN"],root:!0}}},cities:{help:"",desc:"",annotations:{role:{value:["ADMIN"],root:!0}}},discord:{help:"",desc:"Pull registered nations from locutus\n(or a provided url)",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{url:{name:"url",optional:!0,type:"String"}}},forum_profiles:{help:"",desc:"Returns a list of forum profiles and their respective nation id / discord tag\nDeprecated because it is an unauthenticated list, anyone can set their discord or nation on the forums\nInformation purposes only",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{sheet:{name:"sheet",optional:!0,type:"SpreadSheet"}}},multi_bans:{help:"",desc:"Recalculate bans of nations sharing the same network concurrently",annotations:{role:{value:["ADMIN"],root:!0}}},offshore:{help:"",desc:"Force a fetch and update of banks from the api",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{alliance:{name:"alliance",type:"DBAlliance"}}},pojos:{help:"",desc:"Regenerate the static command classes",annotations:{role:{value:["ADMIN"],root:!0}}},savemetrics:{help:"",desc:"Generate and save the alliance metrics over a period of time, using nation and city snapshots to calculate the metrics",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{metrics:{name:"metrics",type:"Set<AllianceMetric>"},start:{name:"start",optional:!0,type:"Long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"},overwrite:{name:"overwrite",optional:!0,flag:"o",type:"boolean"},saveAllTurns:{name:"saveAllTurns",optional:!0,flag:"t",type:"boolean"}}},syncbanks:{help:"",desc:"Fetch and update bank records\nIf no alliance is specified, only public bank records are fetched\nAlliance records are restricted by API limitations, typically 14 days, regardless of the timestamp specified",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{alliance:{name:"alliance",optional:!0,type:"DBAlliance"},timestamp:{name:"timestamp",optional:!0,type:"Long[Timestamp]"}}},syncblockades:{help:"",desc:"Recalculate blockade flags for all nations, and run associated events",annotations:{role:{value:["ADMIN"],root:!0}}},synccities:{help:"",desc:"Fetch and update the cities of all nations using the API, and run associated events",annotations:{role:{value:["ADMIN"],root:!0}}},synclootfromattacks:{help:"",desc:"Recalculate the alliance and nation loots from the attacks stored in the database",annotations:{role:{value:["ADMIN"],root:!0}}},syncmetrics:{help:"",desc:"Calculate this turns alliance metrics for the top alliances (default 80) and save them",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{topX:{name:"topX",optional:!0,type:"int",def:"80"}}},syncnations:{help:"",desc:"Fetch and update nations from the API\nIf no nations are specified, then all will be fetched\nNote: This does not update cities",arguments:{nations:{name:"nations",optional:!0,type:"Set<DBNation>"},dirtyNations:{name:"dirtyNations",optional:!0,flag:"d",type:"boolean"}}},syncreferrals:{help:"",desc:"Run the guild referral task for the nations in the alliance, and apply rewards\nOnly works if those are configured",annotations:{role:{value:["ADMIN"],root:!0}}},syncforum:{help:"",desc:"Fetch and save forum post topic names, optionally for a specific section id/section name",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{sectionId:{name:"sectionId",optional:!0,type:"Integer"},sectionName:{name:"sectionName",optional:!0,type:"String"}}},syncinterviews:{help:"",desc:"Force an update of all interview channels, delete unused channels and print the results",annotations:{role:{value:["INTERNAL_AFFAIRS","INTERNAL_AFFAIRS_STAFF"],any:!0}}},trade:{help:"",desc:"Force a fetch and update of trades from the api",annotations:{role:{value:["ADMIN"],root:!0}}},treasures:{help:"",desc:"Fetch and update the treasure data from the API",annotations:{role:{value:["ADMIN"],root:!0}}},treaties:{help:"",desc:"Force a fetch and update of treaties from the api",annotations:{role:{value:["ADMIN"],root:!0}}},warrooms:{help:"",desc:"Sync and debug war rooms",annotations:{role:{value:["ADMIN"]}},arguments:{force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},wars:{help:"",desc:"Fetch updated wars from the API",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{updateCityCounts:{name:"updateCityCounts",optional:!0,flag:"c",type:"boolean"}}}},sync2:{active_conflicts:{help:"",desc:"Run the escalation alerts task",annotations:{role:{value:["ADMIN"],root:!0}}},alliances:{help:"",desc:"",annotations:{role:{value:["ADMIN"],root:!0}}},city_avg:{help:"",desc:"",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{force_value:{name:"force_value",optional:!0,type:"Double"}}},city_refund:{help:"",desc:"Sync city refund data",annotations:{role:{value:["ADMIN"],root:!0}}},config:{help:"",desc:"Reload the bot's config.yaml file",annotations:{role:{value:["ADMIN"],root:!0}}},export_wiki:{help:"",desc:"Generate and save the wiki pages for the bot",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{pathRelative:{name:"pathRelative",optional:!0,type:"String"}}},mail:{help:"",desc:"Force a fetch and update of mail for a nation",annotations:{role:{value:["MAIL"]}},arguments:{account:{name:"account",optional:!0,type:"DBNation"}}},militarization_alerts:{help:"",desc:"Run the militarization alerts task",annotations:{role:{value:["ADMIN"],root:!0}}},taxes:{help:"",desc:"Force a fetch and update of taxes from the api",groups:["Alliance to update","Update via sheet tax records","Update via login"],annotations:{role:{value:["ADMIN"],root:!0}},arguments:{alliance:{name:"alliance",optional:!0,flag:"a",desc:"Specify other alliances, instead of the ones registered to this guild",group:0,type:"DBAlliance"},timestamp:{name:"timestamp",optional:!0,flag:"t",desc:"The timeframe to update",type:"Long[Timestamp]"},sheet_deprecated:{name:"sheet_deprecated",optional:!0,flag:"s",desc:"Update using values in a spreadsheet\nDeprecated, use the api instead (i.e. no arguments)",group:1,type:"SpreadSheet"},legacy_deprecated:{name:"legacy_deprecated",optional:!0,flag:"l",desc:"Use the legacy deprecated method to update via login (not recommended)",group:2,type:"boolean"}}},uid:{help:"",desc:"Force a fetch and update of uids from the api",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{all:{name:"all",type:"boolean"}}}}},alerts:{audit:{optout:{help:"",desc:"Toggle your opt out of audit alerts",annotations:{role:{value:["MEMBER"]}}}},bank:{list:{help:"",desc:"List your subscriptions to large bank transfers",annotations:{whitelist:!0,role:{value:["MEMBER"]}}},min_value:{help:"",desc:"Set the required transfer market value required for automatic bank alerts\nDefaults to $100m, minimum value of 100m",annotations:{coalition:{value:"RAIDPERMS"}},arguments:{requiredValue:{name:"requiredValue",desc:"Require the bank transfer to be worth this much\nResources are valued at weekly market average prices",type:"double"}}},subscribe:{help:"",desc:"Get an alert when a nation or alliance sends a large bank transfer\nUse `*` to subscribe to all nations",annotations:{whitelist:!0,role:{value:["MEMBER"]}},arguments:{nation_or_alliances:{name:"nation_or_alliances",type:"Set<NationOrAlliance>"},send_or_receive:{name:"send_or_receive",type:"String",choices:["send","receive"]},amount:{name:"amount",type:"long"},duration:{name:"duration",type:"long[Timediff]"}}},unsubscribe:{help:"",desc:"Remove your subscriptions to large bank transfers",annotations:{whitelist:!0,role:{value:["MEMBER"]}},arguments:{nation_or_alliances:{name:"nation_or_alliances",type:"Set<NationOrAlliance>"}}}},beige:{beigealert:{help:"",desc:"Set a reminder for when a nation leaves beige or VM",annotations:{whitelist:!0,coalition:{value:"RAIDPERMS"},role:{value:["BEIGE_ALERT"]}},arguments:{targets:{name:"targets",type:"Set<DBNation>",filter:"*,#color=beige,#vm_turns=0,#isinwarrange=1|*,#vm_turns>0,#vm_turns<168,#isinwarrange=1"},requiredLoot:{name:"requiredLoot",optional:!0,desc:"Require targets to have at least this much loot\nResources are valued at weekly market average prices",type:"Double"},allowOutOfScore:{name:"allowOutOfScore",optional:!0,flag:"s",desc:"Allow targets this much ns below your score range",type:"boolean"}}},beigealertmode:{help:"",desc:"Set the types of nations to receive automatic beige alerts for",annotations:{whitelist:!0,role:{value:["BEIGE_ALERT","BEIGE_ALERT_OPT_OUT"],any:!0},coalition:{value:"RAIDPERMS"}},arguments:{mode:{name:"mode",type:"BeigeAlertMode"}}},beigealertoptout:{help:"",desc:"Opt out of beige alerts",annotations:{role:{value:["MEMBER"]}}},beigealertrequiredloot:{help:"",desc:"Set the required amount of loot for automatic beige alerts\nDefaults to $15m",annotations:{whitelist:!0,coalition:{value:"RAIDPERMS"}},arguments:{requiredLoot:{name:"requiredLoot",desc:"Require the target to have at least this much estimated loot\nResources are valued at weekly market average prices",type:"double"}}},beigealertrequiredstatus:{help:"",desc:"Only get the automatic beige alerts if you have the online status on discord\nNote: You will still receive alerts for targets you have subscribed to via `/alerts beige beigereminders`",annotations:{whitelist:!0,coalition:{value:"RAIDPERMS"}},arguments:{status:{name:"status",type:"BeigeAlertRequiredStatus"}}},beigereminders:{help:"",desc:"List your current beige reminders",annotations:{whitelist:!0,coalition:{value:"RAIDPERMS"}}},removebeigereminder:{help:"",desc:"Remove your beige reminders",arguments:{nationsToRemove:{name:"nationsToRemove",type:"Set<DBNation>"}}},setbeigealertscoreleeway:{help:"",desc:"Allow receiving automatic beige alerts a certain nation score below your current war range",annotations:{whitelist:!0,coalition:{value:"RAIDPERMS"}},arguments:{scoreLeeway:{name:"scoreLeeway",type:"double",min:0}}},test_auto:{help:"",desc:"View and test that the current automatic beige alert settings allow for notification",annotations:{whitelist:!0,role:{value:["BEIGE_ALERT","BEIGE_ALERT_OPT_OUT"],any:!0},coalition:{value:"RAIDPERMS"}}}},bounty:{opt_out:{help:"",desc:"Toggle your opt out of bounty alerts"}},enemy:{optout:{help:"",desc:"Toggle your opt out of enemy alerts"}},login:{help:"",desc:"Get an alert on discord when a target logs in within the next 5 days\nUseful if you want to know when they might defeat you in war or perform an attack",arguments:{target:{name:"target",type:"DBNation"},doNotRequireWar:{name:"doNotRequireWar",optional:!0,flag:"w",type:"boolean"}}},trade:{list:{help:"",desc:"View your trade alert subscriptions"},margin:{help:"",desc:"Create an alert for specific differences between buy and sell prices for in-game resource trades",annotations:{role:{value:["MEMBER"]},whitelist:!0},arguments:{resources:{name:"resources",type:"Set<ResourceType>"},aboveOrBelow:{name:"aboveOrBelow",type:"String",choices:[">",">=","<","<="]},ppu:{name:"ppu",desc:"Price per unit",type:"int"},duration:{name:"duration",desc:"How long to subscribe for",type:"long[Timediff]"}}},mistrade:{help:"",desc:"Create an alert when an in-game trade for a resource is past the top price point of the opposite buy or sell offer",annotations:{role:{value:["MEMBER"]},whitelist:!0},arguments:{resources:{name:"resources",type:"Set<ResourceType>"},aboveOrBelow:{name:"aboveOrBelow",type:"String",choices:[">",">=","<","<="]},ppu:{name:"ppu",desc:"Price per unit",type:"int"},duration:{name:"duration",desc:"How long to subscribe for",type:"long[Timediff]"}}},no_offers:{help:"",desc:"Create an alert when there are no standing offers for resources in-game",annotations:{role:{value:["MEMBER"]},whitelist:!0},arguments:{resources:{name:"resources",type:"Set<ResourceType>"},duration:{name:"duration",desc:"How long to subscribe for",type:"long[Timediff]"}}},price:{help:"",desc:"Create an alert when an in-game trade for a resource at an absolute price point",annotations:{role:{value:["TRADE_ALERT"]},whitelist:!0},arguments:{resource:{name:"resource",type:"ResourceType"},buyOrSell:{name:"buyOrSell",type:"String",choices:["BUY","SELL"]},aboveOrBelow:{name:"aboveOrBelow",type:"String",choices:[">",">=","<","<="]},ppu:{name:"ppu",desc:"Price per unit",type:"int"},duration:{name:"duration",desc:"How long to subscribe for",type:"long[Timediff]"}}},undercut:{help:"",desc:"Create an alert when a top offer you have in-game is undercut by another nation",annotations:{role:{value:["MEMBER"]},whitelist:!0},arguments:{resources:{name:"resources",type:"Set<ResourceType>"},buyOrSell:{name:"buyOrSell",type:"String",choices:["BUY","SELL","*"]},duration:{name:"duration",desc:"How long to subscribe for",type:"long[Timediff]"}}},unsubscribe:{help:"",desc:"Unsubscribe from trade alerts",arguments:{resource:{name:"resource",type:"ResourceType"}}}}},alliance:{cost:{help:"",desc:"Get the value of nations including their cities, projects and units",arguments:{nations:{name:"nations",type:"Set<DBNation>"},update:{name:"update",optional:!0,flag:"u",type:"boolean"},includeProjects:{name:"includeProjects",optional:!0,flag:"p",desc:"Only include the cost of specific projects",type:"Set<Project>"},snapshotDate:{name:"snapshotDate",optional:!0,flag:"s",type:"Long[Timestamp]"}}},departures:{help:"",desc:"List the alliance rank changes of a nation or alliance members",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nationOrAlliance:{name:"nationOrAlliance",type:"NationOrAlliance"},time:{name:"time",optional:!0,desc:"Date to start from",type:"Long[Timestamp]"},filter:{name:"filter",optional:!0,desc:"Only include these nations",type:"Set<DBNation>"},ignoreInactives:{name:"ignoreInactives",optional:!0,flag:"a",desc:"Ignore inactive nations (7 days)",type:"boolean"},ignoreVM:{name:"ignoreVM",optional:!0,flag:"v",desc:"Ignore nations in vacation mode",type:"boolean"},ignoreMembers:{name:"ignoreMembers",optional:!0,flag:"m",desc:"Ignore nations currently a member of an alliance",type:"boolean"},listIds:{name:"listIds",optional:!0,flag:"i",desc:"Attach a list of all nation ids found",type:"boolean"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},edit:{help:"",desc:"Edit an attribute of your in-game alliance\nAttributes match the in-game fields and are case sensitive\nRun the command without arguments to get a list of attributes",annotations:{role:{value:["ADMIN"]}},arguments:{alliance:{name:"alliance",type:"DBAlliance"},attribute:{name:"attribute",optional:!0,type:"String"},value:{name:"value",optional:!0,type:"String[TextArea]"}}},listalliancemembers:{help:"",desc:"List all in-game alliance members",annotations:{isalliance:!0},arguments:{page:{name:"page",type:"int"}}},markasoffshore:{help:"",desc:"Mark an alliance as the offshore of another\nThis is solely for informational purposes such as when displaying an alliance's info or militarization",arguments:{offshore:{name:"offshore",type:"DBAlliance"},parent:{name:"parent",type:"DBAlliance"}}},revenue:{help:"",desc:"Get the revenue of nations or alliances\nEquilibrium taxrate is where the value of raws consumed matches the value taxed",arguments:{nations:{name:"nations",type:"Set<DBNation>"},includeUntaxable:{name:"includeUntaxable",optional:!0,flag:"t",desc:"Include the revenue of nations unable to be taxed",type:"boolean"},excludeNationBonus:{name:"excludeNationBonus",optional:!0,flag:"b",desc:"Exclude the new nation bonus",type:"boolean"},rad_index:{name:"rad_index",optional:!0,flag:"r",type:"Double"},forceAtWar:{name:"forceAtWar",optional:!0,flag:"w",type:"boolean"},forceAtPeace:{name:"forceAtPeace",optional:!0,flag:"p",type:"boolean"},includeWarCosts:{name:"includeWarCosts",optional:!0,flag:"c",desc:"The amount of time to use to add average DAILY war cost\nThis includes raid profit",type:"Long[Timediff]"},snapshotDate:{name:"snapshotDate",optional:!0,flag:"s",type:"Long[Timestamp]"}}},sheets:{sheet:{help:"",desc:"Create a sheet of alliances with customized columns\nSee <https://github.com/xdnw/locutus/wiki/nation_placeholders> for a list of placeholders",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nations:{name:"nations",desc:"The nations to include in each alliance",type:"Set<DBNation>"},columns:{name:"columns",desc:"The columns to use in the sheet",type:"List<String>[TextArea]"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},stockpilesheet:{help:"",desc:"List all nations in the alliance and their in-game resource stockpile",groups:["Optional: Specify Nations","Display Options"],annotations:{role:{value:["ECON_STAFF","ECON","INTERNAL_AFFAIRS","INTERNAL_AFFAIRS_STAFF","MILCOM"],any:!0},isalliance:!0},arguments:{nationFilter:{name:"nationFilter",optional:!0,desc:"Only include stockpiles from these nations",group:0,type:"Set<DBNation>"},normalize:{name:"normalize",optional:!0,flag:"n",desc:"Divide stockpiles by city count",group:1,type:"boolean"},onlyShowExcess:{name:"onlyShowExcess",optional:!0,flag:"e",desc:"Only show the resources well above warchest and city operation requirements",group:1,type:"boolean"},forceUpdate:{name:"forceUpdate",optional:!0,flag:"f",type:"boolean"}}},warchestsheet:{help:"",desc:"Get a sheet of members and their saved up warchest (can include deposits and potential revenue)",annotations:{role:{value:["ECON_STAFF","ECON","MILCOM","MILCOM_NO_PINGS"]},isalliance:!0},arguments:{nations:{name:"nations",type:"Set<DBNation>"},perCityWarchest:{name:"perCityWarchest",optional:!0,flag:"c",desc:"The required warchest per city. Else uses the guild default",type:"Map<ResourceType,Double>"},includeGrants:{name:"includeGrants",optional:!0,flag:"g",desc:"Count current grants against warchest totals",type:"boolean"},doNotNormalizeDeposits:{name:"doNotNormalizeDeposits",optional:!0,flag:"n",desc:"If negative deposits are NOT normalized (to ignore negatives)",type:"boolean"},ignoreDeposits:{name:"ignoreDeposits",optional:!0,flag:"d",desc:"If deposits are NOT included in warchest totals",type:"boolean"},ignoreStockpileInExcess:{name:"ignoreStockpileInExcess",optional:!0,flag:"e",desc:"Do not count resources above the required amount toward total warchest value",type:"boolean"},includeRevenueDays:{name:"includeRevenueDays",optional:!0,flag:"r",desc:"Include days of potential revenue toward warchest resources",type:"Integer"},forceUpdate:{name:"forceUpdate",optional:!0,flag:"f",type:"boolean"}}}},stats:{alliancemetricab:{help:"",desc:"Graph an alliance metric over time for two coalitions",arguments:{metric:{name:"metric",type:"AllianceMetric"},coalition1:{name:"coalition1",type:"Set<DBAlliance>"},coalition2:{name:"coalition2",type:"Set<DBAlliance>"},start:{name:"start",desc:"Date to start from",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"},attachJson:{name:"attachJson",optional:!0,flag:"j",type:"boolean"},attachCsv:{name:"attachCsv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"s",type:"boolean"}}},alliancenationssheet:{help:"",desc:"Create a google sheet of nations, grouped by alliance, with the specified columns\nPrefix a column with `avg:` to force an average\nPrefix a column with `total:` to force a total",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},columns:{name:"columns",desc:"The columns to have. See: <https://github.com/xdnw/locutus/wiki/nation_placeholders>",type:"List<String>[TextArea]"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"},useTotal:{name:"useTotal",optional:!0,flag:"t",desc:"Use the sum of each nation's attributes instead of the average",type:"boolean"},includeInactives:{name:"includeInactives",optional:!0,flag:"i",type:"boolean"},includeApplicants:{name:"includeApplicants",optional:!0,flag:"a",type:"boolean"}}},attribute_ranking:{help:"",desc:"Rank alliances by an alliance attribute",arguments:{attribute:{name:"attribute",type:"TypedFunction<DBAlliance,Double>"},alliances:{name:"alliances",optional:!0,type:"Set<DBAlliance>"},num_results:{name:"num_results",optional:!0,flag:"n",type:"Integer"},reverseOrder:{name:"reverseOrder",optional:!0,flag:"r",type:"boolean"},uploadFile:{name:"uploadFile",optional:!0,flag:"f",type:"boolean"},highlight:{name:"highlight",optional:!0,flag:"h",type:"Set<DBAlliance>"}}},coalition_metric_by_turn:{help:"",desc:"Compare a stat of up to 10 alliances/coalitions on a single time graph",arguments:{metric:{name:"metric",type:"AllianceMetric"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",type:"long[Timestamp]"},coalition1:{name:"coalition1",type:"Set<DBAlliance>"},coalition2:{name:"coalition2",type:"Set<DBAlliance>"},coalition3:{name:"coalition3",optional:!0,type:"Set<DBAlliance>"},coalition4:{name:"coalition4",optional:!0,type:"Set<DBAlliance>"},coalition5:{name:"coalition5",optional:!0,type:"Set<DBAlliance>"},coalition6:{name:"coalition6",optional:!0,type:"Set<DBAlliance>"},coalition7:{name:"coalition7",optional:!0,type:"Set<DBAlliance>"},coalition8:{name:"coalition8",optional:!0,type:"Set<DBAlliance>"},coalition9:{name:"coalition9",optional:!0,type:"Set<DBAlliance>"},coalition10:{name:"coalition10",optional:!0,type:"Set<DBAlliance>"},attach_json:{name:"attach_json",optional:!0,flag:"j",type:"boolean"},attach_csv:{name:"attach_csv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"ss",type:"boolean"}}},counterstats:{help:"",desc:"View the percent times an alliance counters in-game wars",arguments:{alliance:{name:"alliance",type:"DBAlliance"}}},loot_ranking:{help:"",desc:"Get the largest alliance bank loot per score",arguments:{time:{name:"time",type:"long[Timestamp]"},show_total:{name:"show_total",optional:!0,flag:"t",desc:"Display the estimated bank size instead of per score",type:"boolean"},attach_file:{name:"attach_file",optional:!0,flag:"f",type:"boolean"},min_score:{name:"min_score",optional:!0,flag:"min",desc:"Ignore alliances without nations above a certain score",type:"Double"},max_score:{name:"max_score",optional:!0,flag:"max",desc:"Ignore alliances without nations below a certain score",type:"Double"},highlight:{name:"highlight",optional:!0,flag:"h",type:"Set<DBAlliance>"},num_results:{name:"num_results",optional:!0,flag:"n",type:"Integer"}}},merges:{help:"",desc:"List the potential alliance merges over a period of time\nDetermined by finding alliances where a large percent of members leave to join another alliance",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"},threshold:{name:"threshold",optional:!0,flag:"t",desc:"Required percent of departures percent(between 0 and 1)\nDefault: 0.3",type:"Double"},dayWindow:{name:"dayWindow",optional:!0,flag:"w",desc:"Number of days to check the departures over\nDefault: 30",type:"Integer"},minMembers:{name:"minMembers",optional:!0,flag:"m",desc:"Minimum number of starting members per alliance\nDefault: 10",type:"Integer"}}},metric_compare_by_turn:{help:"",desc:"Compare the metric over time between multiple alliances",arguments:{metric:{name:"metric",type:"AllianceMetric"},alliances:{name:"alliances",type:"Set<DBAlliance>"},start:{name:"start",desc:"Date to start from",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"},attachJson:{name:"attachJson",optional:!0,flag:"j",type:"boolean"},attachCsv:{name:"attachCsv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"s",type:"boolean"}}},metricsbyturn:{help:"",desc:"Graph the metric over time for a coalition",arguments:{metric:{name:"metric",type:"AllianceMetric"},coalition:{name:"coalition",type:"Set<DBAlliance>"},start:{name:"start",desc:"Date to start from",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"},attachJson:{name:"attachJson",optional:!0,flag:"j",type:"boolean"},attachCsv:{name:"attachCsv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"s",type:"boolean"}}},metrics_by_turn:{help:"",desc:"Graph multiple metrics for a coalition of alliances over a period of time",arguments:{metrics:{name:"metrics",type:"Set<AllianceMetric>"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",type:"long[Timestamp]"},coalition:{name:"coalition",type:"Set<DBAlliance>"},attach_json:{name:"attach_json",optional:!0,flag:"j",type:"boolean"},attach_csv:{name:"attach_csv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"ss",type:"boolean"}}},militarization:{help:"",desc:"Get the militirization levels of top 80 alliances.\nEach bar is segmented into four sections, from bottom to top: (soldiers, tanks, planes, ships)\nEach alliance is grouped by sphere and color coded.",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nations:{name:"nations",optional:!0,type:"Set<DBNation>"},top_n_alliances:{name:"top_n_alliances",optional:!0,flag:"n",type:"Integer"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"},removeUntaxable:{name:"removeUntaxable",optional:!0,flag:"t",type:"boolean"},removeInactive:{name:"removeInactive",optional:!0,flag:"i",type:"boolean"},includeApplicants:{name:"includeApplicants",optional:!0,flag:"a",type:"boolean"},snapshotDate:{name:"snapshotDate",optional:!0,flag:"l",type:"Long[Timestamp]"}}},militarization_time:{help:"",desc:"Graph militarization (soldier, tank, aircraft, ship) over time of an alliance",arguments:{alliance:{name:"alliance",type:"DBAlliance"},start_time:{name:"start_time",optional:!0,type:"long[Timestamp]",def:"7d"},end_time:{name:"end_time",optional:!0,flag:"e",type:"Long[Timestamp]"},attach_json:{name:"attach_json",optional:!0,flag:"j",type:"boolean"},attach_csv:{name:"attach_csv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"s",type:"boolean"}}},ranking:{help:"",desc:"Rank alliances by a metric",arguments:{metric:{name:"metric",type:"AllianceMetric"},alliances:{name:"alliances",optional:!0,type:"Set<DBAlliance>"},reverseOrder:{name:"reverseOrder",optional:!0,flag:"r",type:"boolean"},uploadFile:{name:"uploadFile",optional:!0,flag:"f",type:"boolean"},num_results:{name:"num_results",optional:!0,flag:"n",type:"Integer"},highlight:{name:"highlight",optional:!0,flag:"h",type:"Set<DBAlliance>"}}},rankingtime:{help:"",desc:"Rank alliances by a metric over a specified time period",arguments:{alliances:{name:"alliances",type:"Set<DBAlliance>"},metric:{name:"metric",type:"AllianceMetric"},timeStart:{name:"timeStart",type:"long[Timestamp]"},timeEnd:{name:"timeEnd",type:"long[Timestamp]"},reverseOrder:{name:"reverseOrder",optional:!0,flag:"r",type:"boolean"},uploadFile:{name:"uploadFile",optional:!0,flag:"f",type:"boolean"},num_results:{name:"num_results",optional:!0,flag:"n",type:"Integer"},highlight:{name:"highlight",optional:!0,flag:"h",type:"Set<DBAlliance>"}}},tier_by_coalition:{help:"",desc:"Compare the tier stats of up to 10 alliances/nations on a single graph",arguments:{metric:{name:"metric",type:"TypedFunction<DBNation,Double>"},groupBy:{name:"groupBy",type:"TypedFunction<DBNation,Double>"},coalition1:{name:"coalition1",type:"Set<DBNation>"},coalition2:{name:"coalition2",optional:!0,type:"Set<DBNation>"},coalition3:{name:"coalition3",optional:!0,type:"Set<DBNation>"},coalition4:{name:"coalition4",optional:!0,type:"Set<DBNation>"},coalition5:{name:"coalition5",optional:!0,type:"Set<DBNation>"},coalition6:{name:"coalition6",optional:!0,type:"Set<DBNation>"},coalition7:{name:"coalition7",optional:!0,type:"Set<DBNation>"},coalition8:{name:"coalition8",optional:!0,type:"Set<DBNation>"},coalition9:{name:"coalition9",optional:!0,type:"Set<DBNation>"},coalition10:{name:"coalition10",optional:!0,type:"Set<DBNation>"},total:{name:"total",optional:!0,flag:"t",type:"boolean"},includeApps:{name:"includeApps",optional:!0,flag:"a",type:"boolean"},includeVm:{name:"includeVm",optional:!0,flag:"v",type:"boolean"},includeInactive:{name:"includeInactive",optional:!0,flag:"i",type:"boolean"},snapshotDate:{name:"snapshotDate",optional:!0,flag:"s",type:"Long[Timestamp]"},attach_json:{name:"attach_json",optional:!0,flag:"j",type:"boolean"},attach_csv:{name:"attach_csv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"ss",type:"boolean"}}}},stockpile:{help:"",desc:"View the resources in a nation or alliance",annotations:{role:{value:["MEMBER"]},isalliance:!0},arguments:{nationOrAlliance:{name:"nationOrAlliance",type:"NationOrAlliance"}}},treaty:{approve:{help:"",desc:"Approve a pending treaty from an alliance",annotations:{isalliance:!0,role:{value:["FOREIGN_AFFAIRS"],alliance:!0}},arguments:{senders:{name:"senders",desc:"Alliance that sent the treaty",type:"Set<DBAlliance>"}}},cancel:{help:"",desc:"Cancel a treaty in-game",annotations:{isalliance:!0,role:{value:["FOREIGN_AFFAIRS"]}},arguments:{senders:{name:"senders",desc:"The other alliance the treaty is with",type:"Set<DBAlliance>"}}},list:{help:"",desc:"List the treaties of the provided alliances\nNote: If you have the FORIEGN_AFFAIRS role you can view the pending treaties of your own alliance from its guild",arguments:{alliances:{name:"alliances",type:"Set<DBAlliance>"},treatyFilter:{name:"treatyFilter",optional:!0,type:"Predicate<Treaty>"}}},send:{help:"",desc:"Send a treaty to an alliance",annotations:{isalliance:!0,role:{value:["FOREIGN_AFFAIRS"],alliance:!0}},arguments:{receiver:{name:"receiver",desc:"Alliance to send treaty to",type:"DBAlliance"},type:{name:"type",type:"TreatyType"},days:{name:"days",type:"int"},message:{name:"message",optional:!0,type:"String"}}}}},announcement:{archive:{help:"",desc:"Set the archive status of the bot's announcement",annotations:{role:{value:["INTERNAL_AFFAIRS","MILCOM","ADMIN","FOREIGN_AFFAIRS","ECON"],any:!0}},arguments:{announcementId:{name:"announcementId",type:"int"},archive:{name:"archive",optional:!0,type:"Boolean"}}},create:{help:"",desc:"Send an announcement to multiple nations, with random variations for each receiver\n",annotations:{role:{value:["ADMIN"]},hasapi:!0},arguments:{sendTo:{name:"sendTo",type:"Set<DBNation>"},subject:{name:"subject",desc:"The subject used for sending an in-game mail if a discord direct message fails",type:"String"},announcement:{name:"announcement",desc:"The message you want to send",type:"String[TextArea]"},replacements:{name:"replacements",desc:"Lines of replacement words or phrases, separated by `|` for each variation\nAdd multiple lines for each replacement you want\nYou can use \\n for newline for discord slash commands",type:"String[TextArea]"},channel:{name:"channel",optional:!0,flag:"c",desc:"The channel to post the announcement to (must be same server)",type:"TextChannel"},bottomText:{name:"bottomText",optional:!0,flag:"b",desc:"The text to post in the channel below the hidden announcement (e.g. mentions)",type:"String"},requiredVariation:{name:"requiredVariation",optional:!0,flag:"v",desc:"The required number of differences between each message",type:"Integer",def:"0"},requiredDepth:{name:"requiredDepth",optional:!0,flag:"r",desc:"The required depth of changes from the original message",type:"Integer",def:"0"},seed:{name:"seed",optional:!0,flag:"s",desc:"Variation seed. The same seed will produce the same variations, otherwise results are random",type:"Long"},sendMail:{name:"sendMail",optional:!0,flag:"m",desc:"If messages are sent in-game",type:"boolean"},sendDM:{name:"sendDM",optional:!0,flag:"d",desc:"If messages are sent via discord direct message",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},document:{help:"",desc:"Create an embed to view a google document for multiple nations, with random variations for each receiver",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{original:{name:"original",type:"GoogleDoc"},sendTo:{name:"sendTo",type:"Set<DBNation>"},replacements:{name:"replacements",desc:"Lines of replacement words or phrases, separated by `|` for each variation\nAdd multiple lines for each replacement you want",type:"String[TextArea]"}}},find:{help:"",desc:"Find the announcement closest matching a message",annotations:{role:{value:["ADMIN"]}},arguments:{announcementId:{name:"announcementId",type:"int"},message:{name:"message",type:"String"}}},find_invite:{help:"",desc:"Find the announcement for the closest matching invite",annotations:{role:{value:["ADMIN"]}},arguments:{invite:{name:"invite",type:"String"}}},invite:{help:"",desc:"Create, send and record unique invites to a set of nations\nThe invite can be sent via discord direct message, mail, viewed from an embed, or command\nIf `allowCreation` is not enabled, only a single invite will be created per nation; invites may expire and no new invites are permitted.",annotations:{role:{value:["ADMIN"]}},arguments:{message:{name:"message",type:"String"},inviteTo:{name:"inviteTo",type:"Guild"},sendTo:{name:"sendTo",optional:!0,type:"Set<DBNation>"},expire:{name:"expire",optional:!0,flag:"e",type:"Long[Timediff]"},maxUsesEach:{name:"maxUsesEach",optional:!0,flag:"u",type:"Integer"},sendDM:{name:"sendDM",optional:!0,flag:"d",desc:"Send the invite via discord direct message",type:"boolean"},sendMail:{name:"sendMail",optional:!0,flag:"m",type:"boolean"},allowCreation:{name:"allowCreation",optional:!0,flag:"c",desc:"Allow creating an invite when any nation matches `sendTo`, when they don't already have an invite, or theirs has expired\nInvites can be created by using viewing the announcement embed or running the announcement view command\nDefaults to false",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},ocr:{help:"",desc:"Get the text from a discord image\nIt is recommended to crop the image first",arguments:{discordImageUrl:{name:"discordImageUrl",type:"String"}}},read:{help:"",desc:"Mark an announcement by the bot as read/unread",annotations:{role:{value:["MEMBER"]}},arguments:{ann_id:{name:"ann_id",type:"int"},markRead:{name:"markRead",optional:!0,type:"Boolean"}}},view:{help:"",desc:"View an announcement you have access to",annotations:{role:{value:["MEMBER"]}},arguments:{ann_id:{name:"ann_id",type:"int"},nation:{name:"nation",optional:!0,flag:"n",type:"DBNation"}}},watermark:{help:"",desc:"Add a watermark to a discord image\nUse \\n to add a new line\nDefault color will be light gray if image is dark and dark gray if image is light\nSet `repeat: True` to repeat the watermark down the entire image",arguments:{imageUrl:{name:"imageUrl",type:"String"},watermarkText:{name:"watermarkText",type:"String"},color:{name:"color",optional:!0,type:"Color"},opacity:{name:"opacity",optional:!0,type:"double",def:"0.05",min:.01,max:1},font:{name:"font",optional:!0,type:"Font",def:"Arial"},repeat:{name:"repeat",optional:!0,flag:"r",type:"boolean"}}}},audit:{hasnotboughtspies:{help:"",desc:"Returns the audit excerpt and lists nations who have not bought spies",annotations:{role:{value:["INTERNAL_AFFAIRS"]},isalliance:!0},arguments:{nations:{name:"nations",type:"Set<DBNation>"}}},run:{help:"",desc:"Generate an audit report of a list of nations",annotations:{role:{value:["MEMBER"]},isalliance:!0},arguments:{nationList:{name:"nationList",desc:"Nations to audit",type:"Set<DBNation>"},audits:{name:"audits",optional:!0,desc:"Only perform these audits (default: all)",type:"Set<AuditType>"},pingUser:{name:"pingUser",optional:!0,flag:"u",desc:"Ping the user on discord with their audit",type:"boolean"},mailResults:{name:"mailResults",optional:!0,flag:"m",desc:"Mail the audit to each nation in-game",type:"boolean"},postInInterviewChannels:{name:"postInInterviewChannels",optional:!0,flag:"c",desc:"Post the audit in the interview channels (if exists)",type:"boolean"},skipUpdate:{name:"skipUpdate",optional:!0,flag:"s",desc:"Skip updating nation info from the game",type:"boolean"}}},sheet:{help:"",desc:"Run audits on member nations and generate a google sheet of the results",annotations:{isalliance:!0,role:{value:["INTERNAL_AFFAIRS_STAFF","MENTOR","INTERVIEWER"],any:!0}},arguments:{nations:{name:"nations",optional:!0,desc:"The nations to audit\nMust be in your alliance",type:"Set<DBNation>"},includeAudits:{name:"includeAudits",optional:!0,flag:"i",desc:"The audits to include in the sheet\nDefaults to all audits",type:"Set<AuditType>"},excludeAudits:{name:"excludeAudits",optional:!0,flag:"e",desc:"The audits to exclude from the sheet\nDefaults to none",type:"Set<AuditType>"},forceUpdate:{name:"forceUpdate",optional:!0,flag:"u",desc:"Update nation information before running the audit\nOtherwise the audit will be run on the last fetched info",type:"boolean"},verbose:{name:"verbose",optional:!0,flag:"v",desc:"Include full descriptions in the audit sheet results\nOtherwise only raw data will be included",type:"boolean"},allowNonAlliance:{name:"allowNonAlliance",optional:!0,flag:"n",type:"boolean"},skipDiscordAudits:{name:"skipDiscordAudits",optional:!0,flag:"d",type:"boolean"},skipApiAudits:{name:"skipApiAudits",optional:!0,flag:"a",type:"boolean"},warningOrHigher:{name:"warningOrHigher",optional:!0,flag:"w",type:"boolean"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}}},bank:{deposit:{help:"",desc:"Instruct nations to deposit resources into the alliance bank\nIf multiple calculation options are set the largest values will be used",groups:["Mode 1: Using a Sheet","Mode 2: Specify an Amount","Mode 3: Calculate an Amount","Message Settings","Deposit Via Api"],annotations:{role:{value:["MEMBER"]},isalliance:!0},arguments:{nations:{name:"nations",type:"Set<DBNation>"},sheetAmounts:{name:"sheetAmounts",optional:!0,flag:"s",desc:"A spreadsheet of nations and amounts to deposit\nColumns must be named after the resource names",group:0,type:"TransferSheet"},amount:{name:"amount",optional:!0,flag:"a",desc:"Exact amount of resources to deposit (capped at resources on nation)\nCannot be used with other deposit modes are set",group:1,type:"Map<ResourceType,Double>"},rawsDays:{name:"rawsDays",optional:!0,flag:"r",desc:"Number of days of city raw resource consumption to keep\nRecommended value: 5",group:2,type:"Double",min:0},raws_days_by_resource:{name:"raws_days_by_resource",optional:!0,flag:"rb",desc:"Alternatively specify a number of days of raws for each individual resource type\nOverrides any value set for `rawsDays`\nOmmitted resources will use 0 if `rawsDays` is not provided",group:2,type:"Map<ResourceType,Double>",min:0},rawsNoDailyCash:{name:"rawsNoDailyCash",optional:!0,flag:"d",desc:"Do not keep money above the daily login bonus\nRequires `rawsDays` to be set",group:2,type:"boolean"},rawsNoCash:{name:"rawsNoCash",optional:!0,flag:"c",desc:"Do not keep any money\nRequires `rawsDays` to be set ",group:2,type:"boolean"},keepWarchestFactor:{name:"keepWarchestFactor",optional:!0,flag:"wcf",desc:"Number of default warchests to keep per city\nRecommended value: 1\nDefault warchest is is set via the settings command",group:2,type:"Double"},keepPerCity:{name:"keepPerCity",optional:!0,flag:"pc",desc:"Amount of resources to keep per city",group:2,type:"Map<ResourceType,Double>"},keepTotal:{name:"keepTotal",optional:!0,flag:"kt",desc:"Amount of resources to keep in total",group:2,type:"Map<ResourceType,Double>"},unitResources:{name:"unitResources",optional:!0,flag:"ur",desc:"Keep resources for purchasing specific units",group:2,type:"Map<MilitaryUnit,Long>"},units_no_cash:{name:"units_no_cash",optional:!0,flag:"uc",desc:"Do not keep any money for units",group:2,type:"boolean"},note:{name:"note",optional:!0,flag:"n",desc:"Note to add to the deposit\nDefaults to deposits",group:3,type:"DepositType"},customMessage:{name:"customMessage",optional:!0,flag:"cm",desc:"The message to append to the mail or dm message\nYou must specify either `mailResults` or `dm` if this is set",group:4,type:"String"},mailResults:{name:"mailResults",optional:!0,flag:"m",desc:"Send deposit urls to nations via in-game mail",group:4,type:"boolean"},dm:{name:"dm",optional:!0,flag:"dm",desc:"Send deposit urls to nations in discord direct messages (dm)",group:4,type:"boolean"},useApi:{name:"useApi",optional:!0,flag:"u",desc:"Use the API to do a deposit instead of sending a message",group:5,type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},import_transfers:{help:"",desc:"",annotations:{role:{value:["ADMIN"]}},arguments:{server:{name:"server",type:"Guild"},nations:{name:"nations",type:"Set<DBNation>"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},limits:{settransferlimit:{help:"",desc:"Set the withdrawal limit (per interval) of a banker",annotations:{role:{value:["ADMIN"]}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},limit:{name:"limit",type:"double"}}}},records:{help:"",desc:"Get a sheet of a nation or alliances transactions (excluding taxes)",groups:["Optional: Specify timeframe","Display Options"],annotations:{role:{value:["MEMBER"]}},arguments:{nationOrAllianceOrGuild:{name:"nationOrAllianceOrGuild",type:"NationOrAllianceOrGuildOrTaxid"},timeframe:{name:"timeframe",optional:!0,desc:"Only show transactions after this time",group:0,type:"long[Timestamp]",def:"%epoch%"},useTaxBase:{name:"useTaxBase",optional:!0,desc:"Do NOT include the tax record resources below the internal tax rate\nDefault: False",group:1,type:"boolean",def:"false"},useOffset:{name:"useOffset",optional:!0,desc:"Include balance offset records (i.e. from commands)\nDefault: True",group:1,type:"boolean",def:"true"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"},onlyOffshoreTransfers:{name:"onlyOffshoreTransfers",optional:!0,flag:"o",type:"boolean"}}},stats:{inflows:{help:"",desc:"List the public resource imports or exports of a nation or alliance to other nations or alliances over a period of time",arguments:{nationOrAlliances:{name:"nationOrAlliances",type:"Set<NationOrAlliance>"},cutoffMs:{name:"cutoffMs",desc:"Date to start from",type:"long[Timestamp]"},hideInflows:{name:"hideInflows",optional:!0,flag:"i",desc:"Do not show inflows",type:"boolean"},hideOutflows:{name:"hideOutflows",optional:!0,flag:"o",desc:"Do not show outflows",type:"boolean"}}},weeklyinterest:{help:"",desc:"Calculate weekly interest payments for a loan",arguments:{amount:{name:"amount",desc:"Principle amount",type:"double"},pct:{name:"pct",desc:"Percent weekly interest",type:"double"},weeks:{name:"weeks",desc:"Number of weeks to loan for",type:"int"}}}},unlocktransfers:{help:"",desc:"Unlock transfers for an alliance or guild using this guild as an offshore\nAccounts are automatically locked if there is an error accessing the api, a game captcha, or if an admin of the account is banned in-game\nOnly locks from game bans persist across restarts",annotations:{role:{value:["ADMIN"]}},arguments:{nationOrAllianceOrGuild:{name:"nationOrAllianceOrGuild",optional:!0,type:"NationOrAllianceOrGuild"},unlockAll:{name:"unlockAll",optional:!0,flag:"a",type:"boolean"}}}},baseball:{baseballchallengeinflow:{help:"",desc:"List the baseball wager inflows for a nation id",arguments:{nationId:{name:"nationId",type:"int"},dateSince:{name:"dateSince",optional:!0,type:"long[Timestamp]",def:"timestamp:0"},uploadFile:{name:"uploadFile",optional:!0,flag:"u",type:"boolean"}}},baseballchallengeearningsranking:{help:"",desc:"Rank of nations by challenge baseball challenge earnings",arguments:{uploadFile:{name:"uploadFile",optional:!0,flag:"f",type:"boolean"},byAlliance:{name:"byAlliance",optional:!0,flag:"a",desc:"Group the rankings by alliance instead of nations",type:"boolean"}}},baseballchallengeranking:{help:"",desc:"Rank of nations by number of challenge baseball games",arguments:{uploadFile:{name:"uploadFile",optional:!0,flag:"f",type:"boolean"},byAlliance:{name:"byAlliance",optional:!0,flag:"a",desc:"Group the rankings by alliance instead of nations",type:"boolean"}}},baseballearningsranking:{help:"",desc:"Rank of nations by challenge baseball game earnings",arguments:{date:{name:"date",desc:"Date to start from",type:"long[Timestamp]"},uploadFile:{name:"uploadFile",optional:!0,flag:"f",type:"boolean"},byAlliance:{name:"byAlliance",optional:!0,flag:"a",desc:"Group the rankings by alliance instead of nations",type:"boolean"}}},baseballranking:{help:"",desc:"Rank of nations by number of challenge baseball games from a specified date",arguments:{date:{name:"date",desc:"Date to start from",type:"long[Timestamp]"},uploadFile:{name:"uploadFile",optional:!0,flag:"f",type:"boolean"},byAlliance:{name:"byAlliance",optional:!0,flag:"a",type:"boolean"}}}},build:{add:{help:"",desc:"Add a build to a category with the specified city ranges",annotations:{role:{value:["ECON"]}},arguments:{category:{name:"category",type:"String"},ranges:{name:"ranges",type:"CityRanges"},build:{name:"build",type:"CityBuild"}}},assign:{help:"",desc:"Have the bot provide a pre set build based on city count",annotations:{role:{value:["MEMBER"]}},arguments:{category:{name:"category",type:"String"},nation:{name:"nation",optional:!0,type:"DBNation",def:"%user%"},cities:{name:"cities",optional:!0,type:"Integer"}}},delete:{help:"",desc:"Delete a build registered in a specific category with the provided min-cities",annotations:{role:{value:["ECON"]}},arguments:{category:{name:"category",type:"String"},minCities:{name:"minCities",type:"int"}}},get:{help:"",desc:"Print the current city builds being used by a nation",arguments:{nation:{name:"nation",type:"DBNation"}}},listall:{help:"",desc:"List the currently set build categories",annotations:{role:{value:["MEMBER"]}}},matches_sheet:{help:"",desc:"Check and match a spreadsheet of city builds to a set of nations\nThe sheet must have columns: `filter` and `build` where `filter` is a nation filter and `build` is a city build json.\nThe `filter` column can be empty, in which case all nations are matched.\nThis command will output a sheet of nations that match a filter but did not match any of the builds provided",annotations:{role:{value:["INTERNAL_AFFAIRS","INTERNAL_AFFAIRS_STAFF","ECON_STAFF","ECON"],any:!0}},arguments:{builds:{name:"builds",type:"SpreadSheet"},nations:{name:"nations",optional:!0,type:"Set<DBNation>"},output:{name:"output",optional:!0,flag:"s",type:"SpreadSheet"}}}},building:{cost:{help:"",desc:"Get the cost a specific amount of buildings",arguments:{build:{name:"build",type:"CityBuild"}}}},channel:{channelmembers:{help:"",desc:"List members who can see a discord channel",annotations:{role:{value:["INTERNAL_AFFAIRS","ADMIN"],any:!0}},arguments:{channel:{name:"channel",type:"TextChannel"}}},close:{current:{help:"",desc:"Close a war room, interview or embassy discord channel",annotations:{role:{value:["INTERNAL_AFFAIRS","MILCOM","ECON","ECON_STAFF"],any:!0}},arguments:{forceDelete:{name:"forceDelete",optional:!0,flag:"f",type:"boolean"}}},inactive:{help:"",desc:"Close inactive channels in a category",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","INTERNAL_AFFAIRS","ECON_STAFF","ECON","MILCOM","MILCOM_NO_PINGS","FOREIGN_AFFAIRS","FOREIGN_AFFAIRS_STAFF"],any:!0}},arguments:{category:{name:"category",type:"Category"},age:{name:"age",desc:"Close channels older than age",type:"long[Timediff]"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}}},count:{help:"",desc:"list channels",annotations:{role:{value:["ADMIN"]}},arguments:{list_added_members:{name:"list_added_members",optional:!0,flag:"m",type:"boolean"},list_added_roles:{name:"list_added_roles",optional:!0,flag:"r",type:"boolean"}}},create:{help:"",desc:"Create a channel with name in a specified category and ping the specified roles upon creation.",arguments:{channelName:{name:"channelName",type:"String"},category:{name:"category",type:"Category"},copypasta:{name:"copypasta",optional:!0,type:"String"},addInternalAffairsRole:{name:"addInternalAffairsRole",optional:!0,flag:"i",type:"boolean"},addMilcom:{name:"addMilcom",optional:!0,flag:"m",type:"boolean"},addForeignAffairs:{name:"addForeignAffairs",optional:!0,flag:"f",type:"boolean"},addEcon:{name:"addEcon",optional:!0,flag:"e",type:"boolean"},pingRoles:{name:"pingRoles",optional:!0,flag:"p",type:"boolean"},pingAuthor:{name:"pingAuthor",optional:!0,flag:"a",type:"boolean"}}},delete:{current:{help:"",desc:"Delete a discord channel",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},inaccessible:{help:"",desc:"Remove all guild settings that correspond to channels the bot cannot access",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},inactive:{help:"",desc:"Purge a category's channels older than the time specified",annotations:{role:{value:["ADMIN"]}},arguments:{category:{name:"category",type:"Category"},cutoff:{name:"cutoff",type:"long[Timestamp]",min:60}}}},memberchannels:{help:"",desc:"List discord channels a member has access to",annotations:{role:{value:["INTERNAL_AFFAIRS","ADMIN"],any:!0}},arguments:{member:{name:"member",type:"Member"}}},members:{help:"",desc:"List all guild channels and what members have access to each",annotations:{role:{value:["ADMIN"],any:!0}}},move:{down:{help:"",desc:"Move a discord channel down 1 position",annotations:{role:{value:["INTERNAL_AFFAIRS"]}}},up:{help:"",desc:"Move a discord channel up 1 position",annotations:{role:{value:["INTERNAL_AFFAIRS"]}}}},open:{help:"",desc:"Move an interview channel from the `interview-archive` category",annotations:{role:{value:["MEMBER"]}},arguments:{category:{name:"category",optional:!0,type:"Category"}}},permissions:{help:"",desc:"Modify the permissions for a list of nations in a channel.",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{channel:{name:"channel",type:"TextChannel"},nations:{name:"nations",type:"Set<DBNation>"},permission:{name:"permission",type:"Permission"},negate:{name:"negate",optional:!0,flag:"n",desc:"Negate the permission",type:"boolean"},removeOthers:{name:"removeOthers",optional:!0,flag:"r",desc:"Remove the permission from all other users",type:"boolean"},listChanges:{name:"listChanges",optional:!0,flag:"l",desc:"Log the changes to user permissions that are made",type:"boolean"},pingAddedUsers:{name:"pingAddedUsers",optional:!0,flag:"p",type:"boolean"}}},rename:{bulk:{help:"",desc:"Bulk rename channels using a google sheet or AI generated emojis\nThe sheet expects columns `id`, `name` and optionally `description`\nIf you do not provide a sheet, emojis and descriptions will be generated from the channel names",annotations:{role:{value:["ADMIN"]}},arguments:{sheet:{name:"sheet",optional:!0,type:"SpreadSheet"},excludeCategories:{name:"excludeCategories",optional:!0,flag:"e",type:"Set<Category>"},includeCategories:{name:"includeCategories",optional:!0,flag:"c",type:"Set<Category>"},force:{name:"force",optional:!0,flag:"f",type:"boolean"},popCultureQuotes:{name:"popCultureQuotes",optional:!0,flag:"j",type:"boolean"}}}},setcategory:{help:"",desc:"Set the category for a discord channel",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{category:{name:"category",type:"Category"}}},sort:{category_filter:{help:"",desc:"Sort the channels in a set of categories into new categories based on the category name\nThe channels must be in the form `{nation}-{nation_id}`\nReceiving categories must resolve to a nation filter: <https://github.com/xdnw/locutus/wiki/Nation_placeholders>\nSet a category prefix to only send channels to categories starting with a specific word (e.g. `interview-`)\nSet a filter to only sort channels for those nations",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF"]}},arguments:{from:{name:"from",desc:"Categories to sort from",type:"Set<Category>"},categoryPrefix:{name:"categoryPrefix",desc:"Category prefix to sort channels into",type:"String"},filter:{name:"filter",optional:!0,desc:"Optional filter to only sort channels for those nations",type:"Predicate<DBNation>"},warn_on_filter_fail:{name:"warn_on_filter_fail",optional:!0,flag:"w",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},category_rule_sheet:{help:"",desc:"Sort the channels in a set of categories based on sorting rules in a spreadsheet\nThe channels must be in the form `{nation}-{nation_id}`\nThe sheet must have columns: `category` and `filter`\nIf a nation matches multiple filters, it will prioritize its current category, then the next free category (max channels 50 per category)\nAdd a channel filter to only sort channels for those nations",arguments:{sheet:{name:"sheet",type:"SpreadSheet"},filter:{name:"filter",optional:!0,desc:"Optional filter to only sort channels for those nations",type:"Predicate<DBNation>"},warn_on_filter_fail:{name:"warn_on_filter_fail",optional:!0,flag:"w",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},sheet:{help:"",desc:"Sort the channels in a set of categories into new categories based on a spreadsheet\nThe channels must be in the form `{nation}-{nation_id}`\nThe sheet must have columns: (`nation` or `leader`) and `category`\nSet a filter to only sort channels for those nations",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{from:{name:"from",desc:"Categories to sort from",type:"Set<Category>"},sheet:{name:"sheet",type:"SpreadSheet"},filter:{name:"filter",optional:!0,type:"Predicate<DBNation>"},warn_on_filter_fail:{name:"warn_on_filter_fail",optional:!0,flag:"w",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}}}},chat:{conversion:{add_document:{help:"",desc:'Convert a public Google document (of document type) into a Google spreadsheet of facts.\nThe output format will have a single column with a header row labeled "facts." Each fact will be standalone and not order dependent.\nThe information is extracted using the user\'s configured GPT provider.\nWhen the command is run, the document is added to the queue, and the user will be alerted when the conversion finishes.\nUsers have the option to check the progress of the conversion using a command.',annotations:{role:{value:["INTERNAL_AFFAIRS"],root:!0}},arguments:{googleDocumentUrl:{name:"googleDocumentUrl",type:"String"},document_name:{name:"document_name",type:"String"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},delete:{help:"",desc:"Delete a conversion task for a google document to a chat dataset",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{source:{name:"source",type:"EmbeddingSource"}}},list:{help:"",desc:"Show the documents currently converting to a dataset\nDatasets are a list of information that can be used to generate chat responses",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{showRoot:{name:"showRoot",optional:!0,flag:"r",type:"boolean"},showOtherGuilds:{name:"showOtherGuilds",optional:!0,flag:"a",type:"boolean"}}},pause:{help:"",desc:"Pause conversion for a google document to a chat dataset\nConversion can be resumed later",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{source:{name:"source",type:"EmbeddingSource"}}},resume:{help:"",desc:"Resume conversion for a google document to a chat dataset",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{source:{name:"source",type:"EmbeddingSource"}}}},dataset:{delete:{help:"",desc:"Delete your custom datasets.\nDefault datasets cannot be deleted, and if a custom dataset is deleted, tasks will fall back to using the base datasets.",annotations:{role:{value:["ADMIN"]}},arguments:{source:{name:"source",type:"EmbeddingSource"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},import_sheet:{help:"",desc:'Save Google spreadsheet contents to a named embedding dataset.\nRequires two columns labeled "fact" or "question" and "answer" for vectors.\nSearch finds nearest fact, or searches questions and returns corresponding answers if two columns.',annotations:{role:{value:["ADMIN"]}},arguments:{sheet:{name:"sheet",type:"SpreadSheet"},document_name:{name:"document_name",type:"String"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},list:{help:"",desc:"This command provides a list of accessible embedding datasets used for prompting GPT.\nEmbedding datasets consist of vectors representing text strings, allowing for comparison between different strings.\nSee: <https://github.com/xdnw/locutus/wiki> or <https://politicsandwar.fandom.com/wiki/Politics_and_War_Wiki>\nTo view a specific dataset see: /chat embedding view",annotations:{role:{value:["AI_COMMAND_ACCESS"]}},arguments:{listRoot:{name:"listRoot",optional:!0,flag:"r",type:"boolean"}}},select:{help:"",desc:"Set the data sources you want to use to generate natural language responses for chat queries",arguments:{excludeTypes:{name:"excludeTypes",type:"Set<EmbeddingType>"},includeWikiCategories:{name:"includeWikiCategories",optional:!0,flag:"w",type:"Set<String>[WikiCategory]"},excludeWikiCategories:{name:"excludeWikiCategories",optional:!0,flag:"n",type:"Set<String>[WikiCategory]"},excludeSources:{name:"excludeSources",optional:!0,flag:"e",type:"Set<EmbeddingSource>"},addSources:{name:"addSources",optional:!0,flag:"a",type:"Set<EmbeddingSource>"}}},view:{help:"",desc:'Save Google spreadsheet contents to a named embedding dataset.\nRequires two columns labeled "fact" or "question" and "answer" for vectors.\nSearch finds nearest fact, or searches questions and returns corresponding answers if two columns.',annotations:{role:{value:["ADMIN"]}},arguments:{source:{name:"source",type:"EmbeddingSource"},getAnswers:{name:"getAnswers",optional:!0,flag:"a",type:"boolean"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}}},providers:{configure:{help:"",desc:"Customize options for a chat provider.\nDefaults apply if not set.\nConfigurations for all new messages.\nRefer to API docs for details: <https://platform.openai.com/docs/api-reference/chat/create>",annotations:{role:{value:["AI_COMMAND_ACCESS"]}},arguments:{provider:{name:"provider",type:"GPTProvider"},options:{name:"options",type:"Map<String,String>"}}},list:{help:"",desc:"List available chat providers, and their information.\nThis includes status, rate limits, execution time, model, permissions, options.",annotations:{role:{value:["AI_COMMAND_ACCESS"]}}},pause:{help:"",desc:"Pause a chat provider.\nOther providers will not be paused.\nHalts document conversion using this provider.\nProviders may be resumed.",annotations:{role:{value:["ADMIN"]}},arguments:{provider:{name:"provider",type:"GPTProvider"}}},resume:{help:"",desc:"Resume paused chat provider (i.e. manual/error).\nCheck provider status with list command.",annotations:{role:{value:["ADMIN"]}},arguments:{provider:{name:"provider",type:"GPTProvider"}}},set:{help:"",desc:"Configure chat provider types used for conversations.\nSettings applies to all new messages.\nUse provider list command to view types.",annotations:{role:{value:["AI_COMMAND_ACCESS"]}},arguments:{providerTypes:{name:"providerTypes",type:"Set<ProviderType>"}}}},unban:{help:"",desc:"Remove a nation from the /chat commands deny list\ni.e. If they were automatically added for submitting inappropriate content",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{nation:{name:"nation",type:"DBNation"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}}},city:{cost:{help:"",desc:"Calculate the costs of purchasing cities (from current to max)",arguments:{currentCity:{name:"currentCity",type:"int",min:1,max:100},maxCity:{name:"maxCity",type:"int",min:1,max:100},manifestDestiny:{name:"manifestDestiny",optional:!0,type:"boolean",def:"false"},governmentSupportAgency:{name:"governmentSupportAgency",optional:!0,type:"boolean",def:"false"},domestic_affairs:{name:"domestic_affairs",optional:!0,type:"boolean",def:"false"}}},optimalbuild:{help:"",desc:"Generate an optimal build json for a city",groups:["Optional: City Build Parameters","Optional: Optimization restrictions","Optional: Nation Setting (Continent, Projects, Tax Rate)","Display Options"],arguments:{build:{name:"build",desc:"A city url or build json to optimize",type:"CityBuild"},days:{name:"days",optional:!0,desc:"Set the days the build is expected to last before replacement (or destruction)\nThis factors in the cost to switch builds\nDefaults to None",group:0,type:"Integer"},buildMMR:{name:"buildMMR",optional:!0,flag:"x",desc:"Set the MMR (military building counts) of the city to optimize\nDefaults to the current MMR of the build provided, else `0000`",group:0,type:"String",filter:"[0-9]{4}"},age:{name:"age",optional:!0,flag:"a",desc:"Set the age of the city to optimize\nDefaults to the current city age, else `0`\nYou can also specify `age: 1234` in the city json",group:0,type:"Integer"},infra:{name:"infra",optional:!0,flag:"i",desc:"Set the infrastructure level of buildings in the city to optimize\nDefaults to the current infrastructure level\nYou can also specify `infra:1234` in the city json",group:0,type:"Integer"},baseReducedInfra:{name:"baseReducedInfra",optional:!0,flag:"b",desc:"Set the damaged infrastructure level of the city to optimize\ni.e. To simulate a city with a infra level required for its buildings\nDefaults to the infra level",group:0,type:"Integer"},land:{name:"land",optional:!0,flag:"l",desc:"Set the land level of the city to optimize\nDefaults to the current land level, else the infra level\nYou can specify `land: 1234` in the city json",group:0,type:"Integer"},radiation:{name:"radiation",optional:!0,flag:"r",desc:"Set the radiation level\nDefaults to the cities current radiation, or your nation's radiation level",group:0,type:"Double"},diseaseCap:{name:"diseaseCap",optional:!0,flag:"d",desc:"Set the maximum disease allowed",group:1,type:"Double"},crimeCap:{name:"crimeCap",optional:!0,flag:"c",desc:"Set the maximum crime allowed",group:1,type:"Double"},minPopulation:{name:"minPopulation",optional:!0,flag:"p",desc:"Set the minimum population allowed",group:1,type:"Double"},useRawsForManu:{name:"useRawsForManu",optional:!0,flag:"u",desc:"Require the city to produce all raw resources it uses for manufacturing",group:1,type:"boolean"},moneyPositive:{name:"moneyPositive",optional:!0,flag:"m",desc:"Require the city build to be cash positive",group:1,type:"boolean"},nationalProjects:{name:"nationalProjects",optional:!0,flag:"n",desc:"Set the projects a city has access to\nDefaults to the projects of the nation",group:2,type:"Set<Project>"},geographicContinent:{name:"geographicContinent",optional:!0,flag:"g",desc:"Set the continent the city is in\nDefaults the the continent of the nation",group:2,type:"Continent"},taxRate:{name:"taxRate",optional:!0,flag:"t",desc:"Maximize untaxed revenue for a tax rate\nDefaults to 0/0",group:2,type:"TaxRate"},writePlaintext:{name:"writePlaintext",optional:!0,flag:"w",desc:"Return a result on discord in plain text",group:3,type:"boolean"},calc_time:{name:"calc_time",optional:!0,flag:"calc",type:"Long[Timediff]"}}},revenue:{help:"",desc:"Get the revenue of a city or build json\nAccepts `land` and `age` as json attributes",arguments:{city:{name:"city",desc:"The city url or build json",type:"CityBuild"},nation:{name:"nation",optional:!0,desc:"The nation to calculate the revenue for\ni.e. Projects, radiation, continent",type:"DBNation",def:"%user%"},excludeNationBonus:{name:"excludeNationBonus",optional:!0,flag:"b",desc:"Exclude the new nation bonus",type:"boolean"},land:{name:"land",optional:!0,flag:"l",type:"Double"},age:{name:"age",optional:!0,flag:"a",type:"Integer"}}}},coalition:{add:{help:"",desc:"Add alliances to an existing coalition\nNote: Use `/coalition create` to use a nonstandard coalition",annotations:{role:{value:["MEMBER"]}},arguments:{alliances:{name:"alliances",type:"Set<NationOrAllianceOrGuild>"},coalitionName:{name:"coalitionName",type:"String[GuildCoalition]"}}},create:{help:"",desc:"Create a new coalition with the provided alliances",annotations:{role:{value:["FOREIGN_AFFAIRS"]}},arguments:{alliances:{name:"alliances",type:"Set<NationOrAllianceOrGuild>"},coalitionName:{name:"coalitionName",type:"String"}}},delete:{help:"",desc:"Delete an entire coalition",annotations:{role:{value:["FOREIGN_AFFAIRS"]}},arguments:{coalitionName:{name:"coalitionName",type:"String[GuildCoalition]"}}},generate:{help:"",desc:"Generate a named coalition by the treaty web of an alliance",annotations:{role:{value:["FOREIGN_AFFAIRS"]}},arguments:{coalition:{name:"coalition",type:"String"},rootAlliance:{name:"rootAlliance",type:"DBAlliance"},topX:{name:"topX",optional:!0,desc:"Include only the top alliances",type:"int",def:"80"}}},list:{help:"",desc:"List the bot coalitions",annotations:{role:{value:["MEMBER"]}},arguments:{filter:{name:"filter",optional:!0,desc:"Only list alliances or guilds containing this filter",type:"String"},listIds:{name:"listIds",optional:!0,flag:"i",desc:"List the alliance and guild ids instead of names",type:"boolean"},ignoreDeleted:{name:"ignoreDeleted",optional:!0,flag:"d",desc:"Ignore deleted alliances",type:"boolean"}}},remove:{help:"",desc:"Remove alliances to a coalition\nNote: Use `/coalition delete` to delete an entire coalition",annotations:{role:{value:["MEMBER"]}},arguments:{alliances:{name:"alliances",type:"Set<NationOrAllianceOrGuild>"},coalitionName:{name:"coalitionName",type:"String[GuildCoalition]"}}},sheet:{help:"",desc:"Generate a sheet of this guild's coalitions",annotations:{role:{value:["FOREIGN_AFFAIRS"]}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}}},color:{revenue:{help:"",desc:"List the color blocs and their revenue\nOptionally switch nations or alliances to a color to view potential revenue changes",arguments:{set_aqua:{name:"set_aqua",optional:!0,type:"Set<DBNation>"},set_black:{name:"set_black",optional:!0,type:"Set<DBNation>"},set_blue:{name:"set_blue",optional:!0,type:"Set<DBNation>"},set_brown:{name:"set_brown",optional:!0,type:"Set<DBNation>"},set_green:{name:"set_green",optional:!0,type:"Set<DBNation>"},set_lime:{name:"set_lime",optional:!0,type:"Set<DBNation>"},set_maroon:{name:"set_maroon",optional:!0,type:"Set<DBNation>"},set_olive:{name:"set_olive",optional:!0,type:"Set<DBNation>"},set_orange:{name:"set_orange",optional:!0,type:"Set<DBNation>"},set_pink:{name:"set_pink",optional:!0,type:"Set<DBNation>"},set_purple:{name:"set_purple",optional:!0,type:"Set<DBNation>"},set_red:{name:"set_red",optional:!0,type:"Set<DBNation>"},set_white:{name:"set_white",optional:!0,type:"Set<DBNation>"},set_yellow:{name:"set_yellow",optional:!0,type:"Set<DBNation>"},set_gray_or_beige:{name:"set_gray_or_beige",optional:!0,type:"Set<DBNation>"},set_mint:{name:"set_mint",optional:!0,type:"Set<DBNation>"},set_lavender:{name:"set_lavender",optional:!0,type:"Set<DBNation>"},set_turquoise:{name:"set_turquoise",optional:!0,type:"Set<DBNation>"},set_gold:{name:"set_gold",optional:!0,type:"Set<DBNation>"}}}},conflict:{alliance:{add:{help:"",desc:"Add a set of alliances to a conflict\nThis does NOT update conflict stats",annotations:{role:{value:["MILCOM"]},coalition:{value:"MANAGE_CONFLICTS"}},arguments:{conflict:{name:"conflict",type:"Conflict"},alliances:{name:"alliances",type:"Set<DBAlliance>"},isCoalition1:{name:"isCoalition1",optional:!0,flag:"col1",type:"boolean"},isCoalition2:{name:"isCoalition2",optional:!0,flag:"col2",type:"boolean"}}},remove:{help:"",desc:"Remove a set of alliances from a conflict\nThis does NOT update conflict stats",annotations:{role:{value:["MILCOM"]},coalition:{value:"MANAGE_CONFLICTS"}},arguments:{conflict:{name:"conflict",type:"Conflict"},alliances:{name:"alliances",type:"Set<DBAlliance>"}}}},create:{help:"",desc:"Manually create an ongoing conflict between two coalitions\nUse `-1` for end date to specify no end date\n",annotations:{role:{value:["MILCOM"]},coalition:{value:"MANAGE_CONFLICTS"}},arguments:{category:{name:"category",type:"ConflictCategory"},coalition1:{name:"coalition1",type:"Set<DBAlliance>"},coalition2:{name:"coalition2",type:"Set<DBAlliance>"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",type:"long[Timestamp]"},conflictName:{name:"conflictName",optional:!0,flag:"n",type:"String"}}},create_temp:{help:"",desc:"Create a temporary conflict between two coalitions\nConflict is not auto updated",annotations:{role:{value:["ADMIN"]}},arguments:{col1:{name:"col1",type:"Set<DBAlliance>"},col2:{name:"col2",type:"Set<DBAlliance>"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"},includeGraphs:{name:"includeGraphs",optional:!0,flag:"g",type:"boolean"}}},delete:{help:"",desc:"Delete a conflict from the database\nDoes not push changes to the website",annotations:{role:{value:["MILCOM"]},coalition:{value:"MANAGE_CONFLICTS"}},arguments:{conflict:{name:"conflict",type:"Conflict"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},edit:{add_forum_post:{help:"",desc:"Purge permenent conflicts that aren't in the database",annotations:{role:{value:["MILCOM"]},coalition:{value:"MANAGE_CONFLICTS"}},arguments:{conflict:{name:"conflict",type:"Conflict"},url:{name:"url",type:"String"},desc:{name:"desc",optional:!0,type:"String"}}},add_none_war:{help:"",desc:"Add all wars declared from none to a conflict if the opposing alliance matches a conflict's participants",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{conflict:{name:"conflict",type:"Conflict"},nation:{name:"nation",type:"DBNation"},mark_as_alliance:{name:"mark_as_alliance",type:"DBAlliance"}}},casus_belli:{help:"",desc:"Sets the wiki page for a conflict",annotations:{role:{value:["MILCOM"]},coalition:{value:"MANAGE_CONFLICTS"}},arguments:{conflict:{name:"conflict",type:"Conflict"},casus_belli:{name:"casus_belli",type:"String"}}},category:{help:"",desc:"Sets the wiki page for a conflict",annotations:{role:{value:["MILCOM"]},coalition:{value:"MANAGE_CONFLICTS"}},arguments:{conflict:{name:"conflict",type:"Conflict"},category:{name:"category",type:"ConflictCategory"}}},end:{help:"",desc:"Set the end date for a conflict\nUse a value of `-1` to specify no end date\nThis does not push the data to the site",annotations:{role:{value:["MILCOM"]},coalition:{value:"MANAGE_CONFLICTS"}},arguments:{conflict:{name:"conflict",type:"Conflict"},time:{name:"time",type:"long[Timestamp]"},alliance:{name:"alliance",optional:!0,flag:"a",desc:"Only set the end date for a single alliance",type:"DBAlliance"}}},rename:{help:"",desc:"Set the name of a conflict, or the name of a conflict's coalition",annotations:{role:{value:["MILCOM"]},coalition:{value:"MANAGE_CONFLICTS"}},arguments:{conflict:{name:"conflict",type:"Conflict"},name:{name:"name",type:"String"},isCoalition1:{name:"isCoalition1",optional:!0,flag:"col1",type:"boolean"},isCoalition2:{name:"isCoalition2",optional:!0,flag:"col2",type:"boolean"}}},start:{help:"",desc:"Set the start date for a conflict\nUse a value of `-1` to specify no start date (if prividing an alliance)\nThis does not push the data to the site",annotations:{role:{value:["MILCOM"]},coalition:{value:"MANAGE_CONFLICTS"}},arguments:{conflict:{name:"conflict",type:"Conflict"},time:{name:"time",type:"long[Timestamp]"},alliance:{name:"alliance",optional:!0,flag:"a",type:"DBAlliance"}}},status:{help:"",desc:"Sets the wiki page for a conflict",annotations:{role:{value:["MILCOM"]},coalition:{value:"MANAGE_CONFLICTS"}},arguments:{conflict:{name:"conflict",type:"Conflict"},status:{name:"status",type:"String"}}},wiki:{help:"",desc:"Sets the wiki page for a conflict",annotations:{role:{value:["MILCOM"]},coalition:{value:"MANAGE_CONFLICTS"}},arguments:{conflict:{name:"conflict",type:"Conflict"},url:{name:"url",type:"String"}}}},featured:{add_rule:{help:"",desc:"Configure the guilds and conflict ids that will be featured by this guild\nBy default all conflicts are featured\nSpecify either a set of conflicts, or a guild to feature all conflicts from that guild",annotations:{role:{value:["MILCOM"]},coalition:{value:"MANAGE_CONFLICTS"}},arguments:{conflicts:{name:"conflicts",optional:!0,type:"Set<Conflict>"},guild:{name:"guild",optional:!0,type:"Guild"}}},list_rules:{help:"",desc:"List the ruleset for which conflicts are featured by this guild (if any are set)\nThis consists of a list of either guilds that created the conflict, or individual conflicts",annotations:{coalition:{value:"MANAGE_CONFLICTS"}}},remove_rule:{help:"",desc:"Configure the guilds and conflict ids that will be featured by this guild\nBy default all conflicts are featured\nSpecify either a set of conflicts, or a guild to feature all conflicts from that guild",annotations:{role:{value:["MILCOM"]},coalition:{value:"MANAGE_CONFLICTS"}},arguments:{conflicts:{name:"conflicts",optional:!0,type:"Set<Conflict>"},guild:{name:"guild",optional:!0,type:"Guild"}}}},info:{help:"",desc:"View a conflict's configured information",arguments:{conflict:{name:"conflict",type:"Conflict"},showParticipants:{name:"showParticipants",type:"boolean"},hideDeleted:{name:"hideDeleted",optional:!0,flag:"d",type:"boolean"},showIds:{name:"showIds",optional:!0,flag:"i",type:"boolean"}}},list:{help:"",desc:"Get a list of the conflicts in the database",arguments:{includeInactive:{name:"includeInactive",optional:!0,flag:"i",type:"boolean"}}},purge:{featured:{help:"",desc:"Purge permenent conflicts that aren't in the database",annotations:{role:{value:["MILCOM"]},coalition:{value:"MANAGE_CONFLICTS"}},arguments:{olderThan:{name:"olderThan",optional:!0,type:"Long[Timestamp]"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},user_generated:{help:"",desc:"Purge permenent conflicts on the website that aren't in the database",annotations:{role:{value:["MILCOM"]},coalition:{value:"MANAGE_CONFLICTS"}},arguments:{olderThan:{name:"olderThan",type:"long[Timestamp]"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}}},sync:{alliance_names:{help:"",desc:"Import alliance names (to match with the ids of deleted alliances)\nThis does not push the data to the site",annotations:{role:{value:["MILCOM"]},coalition:{value:"MANAGE_CONFLICTS"}}},ctowned:{help:"",desc:"Import ctowned conflicts into the database\nThis does not push the data to the site",annotations:{role:{value:["MILCOM"],root:!0}},arguments:{conflictName:{name:"conflictName",optional:!0,desc:"If only updating a single conflict (else, all will be updated)",type:"String"},useCache:{name:"useCache",optional:!0,desc:"If the cached version of the site is used",type:"boolean",def:"true"}}},db_file:{help:"",desc:"Import from an external database file\nRequires a restart of the bot to complete the import",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{fileLocation:{name:"fileLocation",type:"String"}}},multiple_sources:{help:"",desc:"Bulk import conflict data from multiple sources\nIncluding ctowned, wiki, graph data, alliance names or ALL\nThis does not push the data to the site unless `all` is used",annotations:{role:{value:["MILCOM"]},coalition:{value:"MANAGE_CONFLICTS"}},arguments:{ctowned:{name:"ctowned",optional:!0,flag:"c",type:"boolean"},graphData:{name:"graphData",optional:!0,flag:"g",type:"Set<Conflict>"},allianceNames:{name:"allianceNames",optional:!0,flag:"a",type:"boolean"},wiki:{name:"wiki",optional:!0,flag:"w",type:"boolean"},all:{name:"all",optional:!0,flag:"s",type:"boolean"}}},recalculate_graphs:{help:"",desc:"Recalculate the graph data for a set of conflicts\nThis does not push the data to the site",annotations:{role:{value:["MILCOM"]},coalition:{value:"MANAGE_CONFLICTS"}},arguments:{conflicts:{name:"conflicts",type:"Set<Conflict>"}}},recalculate_tables:{help:"",desc:"Recalculate the table data for a set of conflicts\nThis does not push the data to the site",annotations:{role:{value:["MILCOM"]},coalition:{value:"MANAGE_CONFLICTS"}},arguments:{conflicts:{name:"conflicts",type:"Set<Conflict>"}}},website:{help:"",desc:"Pushes conflict data to the AWS bucket for the website",annotations:{role:{value:["MILCOM"]},coalition:{value:"MANAGE_CONFLICTS"}},arguments:{conflicts:{name:"conflicts",optional:!0,type:"Set<Conflict>"},upload_graph:{name:"upload_graph",optional:!0,flag:"u",type:"boolean"},reinitialize_wars:{name:"reinitialize_wars",optional:!0,flag:"w",type:"boolean"},reinitialize_graphs:{name:"reinitialize_graphs",optional:!0,flag:"g",type:"boolean"}}},wiki_all:{help:"",desc:"Import all wiki pages as conflicts\nThis does not push the data to the site",annotations:{role:{value:["MILCOM"]},coalition:{value:"MANAGE_CONFLICTS"}},arguments:{useCache:{name:"useCache",optional:!0,type:"boolean",def:"true"}}},wiki_page:{help:"",desc:"Import a wiki page as a conflict\nThis does not push the data to the site",annotations:{role:{value:["MILCOM"]},coalition:{value:"MANAGE_CONFLICTS"}},arguments:{name:{name:"name",desc:"The name of the wiki page",type:"String"},url:{name:"url",optional:!0,desc:"The url of the wiki page",type:"String"},useCache:{name:"useCache",optional:!0,type:"boolean",def:"true"},skipPushToSite:{name:"skipPushToSite",optional:!0,flag:"p",type:"boolean"}}}}},continent:{info:{help:"",desc:"List resources available and radiation level in each continent"},radiation:{help:"",desc:"List the radiation in each continent"}},copypasta:{help:"",desc:"Save or paste a stored message",annotations:{role:{value:["MEMBER"]}},arguments:{key:{name:"key",optional:!0,desc:"What to name the saved message",type:"String"},message:{name:"message",optional:!0,type:"String[TextArea]"},requiredRolesAny:{name:"requiredRolesAny",optional:!0,desc:"Require roles to paste the message",type:"Set<Role>"},formatNation:{name:"formatNation",optional:!0,flag:"n",type:"DBNation"}}},credentials:{addapikey:{help:"",desc:"Set your api and bot key for the bot\nYour API key can be found on the account page: <https://test.politicsandwar.com/account/>\nSee: <https://forms.gle/KbszjAfPVVz3DX9A7> and DM <@258298021266063360> to get a bot key",arguments:{apiKey:{name:"apiKey",type:"String"},verifiedBotKey:{name:"verifiedBotKey",optional:!0,type:"String"}}},login:{help:"",desc:"Login to allow the bot to run scripts through your account\n(Avoid using this if possible)",annotations:{cmdalliance:{value:["WITHDRAW_BANK"]}},arguments:{username:{name:"username",desc:"Your username (i.e. email) for Politics And War",type:"String"},password:{name:"password",type:"String"}}},logout:{help:"",desc:"Remove your login details from the bot"}},deposits:{add:{help:"",desc:"Add or subtract from a nation, alliance, guild or tax bracket's account balance\nnote: Mutated alliance deposits are only valid if your server is a bank/offshore\nUse `#expire=30d` to have the amount expire after X days",annotations:{role:{value:["ECON"]}},arguments:{accounts:{name:"accounts",type:"Set<NationOrAllianceOrGuildOrTaxid>"},amount:{name:"amount",type:"Map<ResourceType,Double>"},note:{name:"note",type:"String"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},addsheet:{help:"",desc:"Add account balance using a google sheet of nation's and resource amounts\nThe google sheet must have a column for nation (name, id or url) and a column named for each in-game resource",annotations:{role:{value:["ECON"]}},arguments:{sheet:{name:"sheet",type:"SpreadSheet"},note:{name:"note",desc:"The transaction note to use",type:"String"},force:{name:"force",optional:!0,flag:"f",type:"boolean"},negative:{name:"negative",optional:!0,flag:"n",desc:"Subtract the amounts instead of add",type:"boolean"}}},check:{help:"",desc:"Displays the account balance for a nation, alliance or guild\nBalance info includes deposits, loans, grants, taxes and escrow",groups:["Account Selection","Source & Time Filters","Balance Options","Output & Display"],annotations:{role:{value:["MEMBER"]}},arguments:{nationOrAllianceOrGuild:{name:"nationOrAllianceOrGuild",desc:"Account to check holdings for",type:"NationOrAllianceOrGuildOrTaxid"},offshores:{name:"offshores",optional:!0,flag:"a",desc:"The alliances to check transfers from. Defaults to guild-configured offshores.",group:0,type:"Set<DBAlliance>"},timeCutoff:{name:"timeCutoff",optional:!0,flag:"c",desc:"Only include transfers after this time",group:0,type:"Long[Timestamp]"},allowCheckDeleted:{name:"allowCheckDeleted",optional:!0,flag:"z",desc:"Allow checking deleted records",group:0,type:"boolean"},includeBaseTaxes:{name:"includeBaseTaxes",optional:!0,flag:"b",desc:"Include all taxes in account balance",group:1,type:"boolean"},ignoreInternalOffsets:{name:"ignoreInternalOffsets",optional:!0,flag:"o",desc:"Exclude manual offsets from balance",group:1,type:"boolean"},includeExpired:{name:"includeExpired",optional:!0,flag:"e",desc:"Include expired transfers",group:1,type:"boolean"},includeIgnored:{name:"includeIgnored",optional:!0,flag:"i",desc:"Include ignored transfers",group:1,type:"boolean"},hideEscrowed:{name:"hideEscrowed",optional:!0,flag:"h",desc:"Hide escrowed balance section",group:1,type:"boolean"},showCategories:{name:"showCategories",optional:!0,flag:"t",desc:"Separate sections for taxes and deposits",group:2,type:"Boolean"},replyInDMs:{name:"replyInDMs",optional:!0,flag:"d",desc:"Reply via direct message",group:2,type:"boolean"},show_expiring_records:{name:"show_expiring_records",optional:!0,flag:"s",desc:"Show records nearing expiration",group:2,type:"boolean"}}},convert:{help:"",desc:"Adjust nation's holdings by converting negative resource values of a specific note to a different resource or money",groups:["Optional: Resources to convert","Optional (max 1): Specify the deposit notes to convert","Conversion Options"],group_descs:["If no resources are specified, all negative resources are converted to money","Defaults to all types, except grants"],annotations:{role:{value:["ECON","RESOURCE_CONVERSION"],any:!0}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},mode:{name:"mode",type:"RssConvertMode"},from_resources:{name:"from_resources",optional:!0,desc:"The resources to convert",group:0,type:"Set<ResourceType>",def:"manu,raws,food"},to_resource:{name:"to_resource",optional:!0,desc:"What resource to convert to\nConversion uses weekly market average prices",group:0,type:"ResourceType",def:"money"},includeGrants:{name:"includeGrants",optional:!0,flag:"g",desc:"If grants are also converted",group:1,type:"boolean"},depositType:{name:"depositType",optional:!0,flag:"t",desc:"Convert transfers of this note category",group:1,type:"DepositType"},conversionFactor:{name:"conversionFactor",optional:!0,flag:"f",desc:"What factor to multiple the converted resources by\ne.g. Use a value below 1.0 to incur a fee",group:2,type:"Double"},note:{name:"note",optional:!0,flag:"n",desc:"The transfer note to use for the adjustment",group:2,type:"String"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"},force:{name:"force",optional:!0,flag:"force",type:"boolean"}}},flows:{help:"",desc:"Check the flow for a specific transaction note, showing the net by internal addbalance, withdrawals, and deposits",annotations:{role:{value:["ECON_STAFF"]}},arguments:{nation:{name:"nation",type:"DBNation"},note:{name:"note",type:"DepositType"}}},interest:{help:"",desc:"Add or subtract interest to a nation's balance based on their current balance",annotations:{role:{value:["ECON"]}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},interestPositivePercent:{name:"interestPositivePercent",desc:"A percent (out of 100) to apply to POSITIVE resources counts in their account balance",type:"double",min:-100,max:100},interestNegativePercent:{name:"interestNegativePercent",desc:"A percent (out of 100) to apply to NEGATIVE resources counts in their account balance",type:"double",min:-100,max:100}}},reset:{help:"",desc:"Resets a nations deposits to net zero (of the specific note categories)",groups:["Reset Options"],annotations:{role:{value:["ECON"]}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},ignoreGrants:{name:"ignoreGrants",optional:!0,flag:"g",desc:"Do NOT reset grants",group:0,type:"boolean"},ignoreLoans:{name:"ignoreLoans",optional:!0,flag:"l",desc:"Do NOT reset loans",group:0,type:"boolean"},ignoreTaxes:{name:"ignoreTaxes",optional:!0,flag:"t",desc:"Do NOT reset taxes",group:0,type:"boolean"},ignoreBankDeposits:{name:"ignoreBankDeposits",optional:!0,flag:"d",desc:"Do NOT reset deposits",group:0,type:"boolean"},ignoreEscrow:{name:"ignoreEscrow",optional:!0,flag:"e",desc:"Do NOT reset escrow",group:0,type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},sheet:{help:"",desc:"Get a sheet with member nations and their deposits\nEach nation's safekeep should match the total balance given by deposits command",groups:["Deposit Tracking","Transaction Filtering","Flow Options"],annotations:{role:{value:["ECON"]}},arguments:{nations:{name:"nations",optional:!0,type:"Set<DBNation>"},offshores:{name:"offshores",optional:!0,desc:"The alliances to track transfers from",group:0,type:"Set<DBAlliance>"},includePastDepositors:{name:"includePastDepositors",optional:!0,flag:"p",desc:"Include past depositors",group:0,type:"Set<Integer>"},ignoreTaxBase:{name:"ignoreTaxBase",optional:!0,flag:"b",desc:"Use 0/0 as the tax base",group:1,type:"boolean"},ignoreOffsets:{name:"ignoreOffsets",optional:!0,flag:"o",desc:"Do NOT include any manual deposit offsets",group:1,type:"boolean"},includeExpired:{name:"includeExpired",optional:!0,flag:"ex",desc:"Include ALL #expire and #decay transfers",group:1,type:"boolean"},includeIgnored:{name:"includeIgnored",optional:!0,flag:"i",desc:"Include #ignore transfers",group:1,type:"boolean"},noTaxes:{name:"noTaxes",optional:!0,flag:"t",desc:"Do NOT include taxes",group:1,type:"boolean"},noLoans:{name:"noLoans",optional:!0,flag:"l",desc:"Do NOT include loans",group:1,type:"boolean"},noGrants:{name:"noGrants",optional:!0,flag:"g",desc:"Do NOT include grants",group:1,type:"boolean"},noDeposits:{name:"noDeposits",optional:!0,flag:"d",desc:"Do NOT include deposits",group:1,type:"boolean"},noEscrowSheet:{name:"noEscrowSheet",optional:!0,flag:"e",desc:"Do NOT include escrow sheet",group:1,type:"boolean"},useFlowNote:{name:"useFlowNote",optional:!0,flag:"n",desc:"Only show the flow for this note\ni.e. To only see funds marked as #TRADE\nThis is for transfer flow breakdown internal, withdrawal, and deposit",group:2,type:"DepositType"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},shift:{help:"",desc:"Bulk shift resources in a nations holdings to another note category",annotations:{role:{value:["ECON"]}},arguments:{nation:{name:"nation",type:"DBNation"},from:{name:"from",desc:"The note to change FROM",type:"DepositType"},to:{name:"to",desc:"The new note to use",type:"DepositType"},expireTime:{name:"expireTime",optional:!0,desc:"Make the funds expire",type:"Long[Timestamp]"},decayTime:{name:"decayTime",optional:!0,desc:"Make the funds decay",type:"Long[Timestamp]"}}},shiftflow:{help:"",desc:"Shift the transfer note category flows for a nation.\nFor adjusting whether amounts are internal, withdrawn or deposited.\nDoes not change overall or note balance unless it is shifted to `#ignore`",annotations:{role:{value:["ECON"]}},arguments:{nation:{name:"nation",type:"DBNation"},noteFrom:{name:"noteFrom",type:"DepositType"},flowType:{name:"flowType",type:"FlowType"},amount:{name:"amount",type:"Map<ResourceType,Double>"},noteTo:{name:"noteTo",optional:!0,type:"DepositType"},alliance:{name:"alliance",optional:!0,flag:"a",type:"DBAlliance"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}}},embassy:{help:"",desc:"Create an embassy channel in the embassy category",arguments:{nation:{name:"nation",optional:!0,desc:"The nation to create an embassy for",type:"DBNation",def:"%user%"}}},embed:{add:{command:{help:"",desc:"Add a button to a discord embed from this bot which runs a command",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{message:{name:"message",type:"Message"},label:{name:"label",type:"String"},behavior:{name:"behavior",type:"CommandBehavior"},command:{name:"command",type:"ICommand"},arguments:{name:"arguments",optional:!0,desc:"The arguments and values you want to submit to the command\nExample: `myarg1:myvalue1 myarg2:myvalue2`\nFor placeholders: <https://github.com/xdnw/locutus/wiki/nation_placeholders>",type:"String"},channel:{name:"channel",optional:!0,flag:"c",type:"TextChannel"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},modal:{help:"",desc:"Add a modal button to a discord embed from this bot, which creates a prompt for a command",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{message:{name:"message",type:"Message"},label:{name:"label",type:"String"},behavior:{name:"behavior",type:"CommandBehavior"},command:{name:"command",type:"ICommand"},arguments:{name:"arguments",desc:"A comma separated list of the command arguments to prompt for\nArguments can be one of the named arguments for the command, or the name of any `{placeholder}` you have for `defaults`",type:"String"},defaults:{name:"defaults",optional:!0,desc:"The default arguments and values you want to submit to the command\nExample: `myarg1:myvalue1 myarg2:myvalue2`\nFor placeholders: <https://github.com/xdnw/locutus/wiki/nation_placeholders>",type:"String"},channel:{name:"channel",optional:!0,flag:"c",type:"TextChannel"}}},raw:{help:"",desc:"Add a button to a discord embed from this bot which runs a command\nSupports legacy commands and user command syntax.\nUnlike `embed add button`, this does not parse and validate command input.",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{message:{name:"message",type:"Message"},label:{name:"label",type:"String"},behavior:{name:"behavior",type:"CommandBehavior"},command:{name:"command",type:"String"},channel:{name:"channel",optional:!0,flag:"c",type:"TextChannel"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}}},commands:{help:"",desc:"Generate a card which runs a command when users react to it.\nPut commands inside \"quotes\".\nPrefix a command with a #channel e.g. `\"#channel /embedcommand\"` to have the command output go there\n\nPrefix the command with:`~/command` to remove the user's reaction upon use and keep the card\n`_/command` to remove ALL reactions upon use and keep the card\n`./command` to keep the card upon use\n\nExample:\n`/embed 'Some Title' 'My First Embed' '~/fun say Hello {nation}' '/fun say \"Goodbye {nation}\"'`",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{title:{name:"title",type:"String"},body:{name:"body",type:"String"},commands:{name:"commands",type:"List<String>[TextArea]"}}},create:{help:"",desc:"Create a simple embed with a title and description",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{title:{name:"title",type:"String"},description:{name:"description",type:"String"}}},description:{help:"",desc:"Set the description of an embed from this bot\nUse backslash n for newline and `{description}` to include the existing description",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{discMessage:{name:"discMessage",type:"Message"},description:{name:"description",type:"String"}}},info:{help:"",desc:"Show the title, description and commands for a bot embed",arguments:{embedMessage:{name:"embedMessage",type:"Message"},copyToMessage:{name:"copyToMessage",optional:!0,desc:"Show commands to update`copyToMessage` with the info from the `embedMessage`",type:"Message"}}},remove:{button:{help:"",desc:"Remove a button from an embed from this bot",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{message:{name:"message",type:"Message"},labels:{name:"labels",desc:"A comma separated list of button labels",type:"List<String>[TextArea]"}}}},rename:{button:{help:"",desc:"Remove a button from an embed from this bot",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{message:{name:"message",type:"Message"},label:{name:"label",type:"String"},rename_to:{name:"rename_to",type:"String"}}}},template:{ally_enemy_sheets:{help:"",desc:"Generates sheets for a coalition war:- All enemies\n- Priority enemies\n- All allies\n- Underutilized allies",annotations:{role:{value:["ADMIN"]}},arguments:{outputChannel:{name:"outputChannel",optional:!0,type:"TextChannel"},allEnemiesSheet:{name:"allEnemiesSheet",optional:!0,type:"SpreadSheet"},priorityEnemiesSheet:{name:"priorityEnemiesSheet",optional:!0,type:"SpreadSheet"},allAlliesSheet:{name:"allAlliesSheet",optional:!0,type:"SpreadSheet"},underutilizedAlliesSheet:{name:"underutilizedAlliesSheet",optional:!0,type:"SpreadSheet"},behavior:{name:"behavior",optional:!0,type:"CommandBehavior"}}},deposits:{help:"",desc:"Discord embed for checking deposits, withdrawing funds, viewing your stockpile, depositing resources and offshoring funds",annotations:{hasoffshore:!0,role:{value:["ADMIN"]}},arguments:{bankerNation:{name:"bankerNation",optional:!0,desc:"Only applicable to corporate servers. The nation accepting trades for bank deposits. Defaults to the bot owner's nation",type:"DBNation"},outputChannel:{name:"outputChannel",optional:!0,flag:"c",type:"TextChannel"}}},econ_gov:{help:"",desc:"Discord embed for Econ Staff to view deposits, stockpiles, revenue, tax brackets, tax income, warchest and offshore funds",annotations:{role:{value:["ADMIN"]},isalliance:!0},arguments:{outputChannel:{name:"outputChannel",optional:!0,flag:"c",type:"TextChannel"},behavior:{name:"behavior",optional:!0,flag:"b",type:"CommandBehavior"},useFlowNote:{name:"useFlowNote",optional:!0,flag:"n",type:"DepositType"},includePastDepositors:{name:"includePastDepositors",optional:!0,flag:"p",desc:"Include past depositors in deposits sheet",type:"Set<Integer>"}}},guerilla:{help:"",desc:"High infra targets where you are losing\nTo find contestable range, see: strengthTierGraph",annotations:{role:{value:["ADMIN"]}},arguments:{outputChannel:{name:"outputChannel",optional:!0,type:"TextChannel"},behavior:{name:"behavior",optional:!0,type:"CommandBehavior"}}},ia_gov:{help:"",desc:"Discord embed for Internal Affairs Staff to auto-assign roles and view member activity, audit results, daychange, spy purchase, mmr",annotations:{role:{value:["ADMIN"]},isalliance:!0},arguments:{outputChannel:{name:"outputChannel",optional:!0,flag:"c",type:"TextChannel"},behavior:{name:"behavior",optional:!0,flag:"b",type:"CommandBehavior"}}},member_econ:{help:"",desc:"Econ panel for members",annotations:{role:{value:["ADMIN"]}},arguments:{outputChannel:{name:"outputChannel",optional:!0,type:"TextChannel"},behavior:{name:"behavior",optional:!0,type:"CommandBehavior"},showDepositsInDms:{name:"showDepositsInDms",optional:!0,flag:"d",type:"boolean"}}},raid:{help:"",desc:"Makes a raid panel, which is a discord embed with buttons for different options for finding raid targets",annotations:{role:{value:["ADMIN"]}},arguments:{outputChannel:{name:"outputChannel",optional:!0,type:"TextChannel"}}},spy_enemy:{help:"",desc:"Enemy espionage finder discord embed template",annotations:{role:{value:["ADMIN"]}},arguments:{coalition:{name:"coalition",optional:!0,type:"String[GuildCoalition]"},outputChannel:{name:"outputChannel",optional:!0,type:"TextChannel"},behavior:{name:"behavior",optional:!0,type:"CommandBehavior"}}},spy_sheets:{help:"",desc:"Discord embed for sheet to update ally and enemy spy counts, generate and send spy blitz targets",annotations:{role:{value:["ADMIN"]}},arguments:{allies:{name:"allies",optional:!0,type:"String[GuildCoalition]",def:"spyops"},outputChannel:{name:"outputChannel",optional:!0,type:"TextChannel"},spySheet:{name:"spySheet",optional:!0,type:"SpreadSheet"}}},unblockade_requests:{help:"",desc:"Blockader Target & Requests discord embed template",annotations:{role:{value:["ADMIN"]}},arguments:{outputChannel:{name:"outputChannel",optional:!0,type:"TextChannel"},behavior:{name:"behavior",optional:!0,type:"CommandBehavior"}}},war_contested_range:{help:"",desc:"Enemy war targets where a score range is not contestable\nTo find contestable range, see: strengthTierGraph",annotations:{role:{value:["ADMIN"]}},arguments:{greaterOrLess:{name:"greaterOrLess",desc:"If the cutoff is greater or less than the score",type:"MathOperation"},score:{name:"score",desc:"The score at which the conflict is not contestable",type:"double"},outputChannel:{name:"outputChannel",optional:!0,type:"TextChannel"},behavior:{name:"behavior",optional:!0,type:"CommandBehavior"},resultsInDm:{name:"resultsInDm",optional:!0,flag:"d",type:"boolean"}}},war_winning:{help:"",desc:"Enemy war targets when you are winning\nPrioritizes down declares\nTo find contestable range, see: strengthTierGraph",annotations:{role:{value:["ADMIN"]}},arguments:{outputChannel:{name:"outputChannel",optional:!0,type:"TextChannel"},behavior:{name:"behavior",optional:!0,type:"CommandBehavior"},resultsInDm:{name:"resultsInDm",optional:!0,flag:"d",type:"boolean"}}}},title:{help:"",desc:"Set the title of an embed from this bot",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{discMessage:{name:"discMessage",type:"Message"},title:{name:"title",type:"String"}}},update:{help:"",desc:"Update a bot embed",arguments:{requiredRole:{name:"requiredRole",optional:!0,flag:"r",type:"Roles"},color:{name:"color",optional:!0,flag:"c",type:"Color"},title:{name:"title",optional:!0,flag:"t",type:"String"},desc:{name:"desc",optional:!0,flag:"d",type:"String"}}}},escrow:{add:{help:"",desc:"Add funds to the escrow account for a set of nations\nEscrow funds can be withdrawn at a later date by the receiver, such as when a blockade ends\nTo transfer funds from a nation's deposits into their escrow, see the transfer command",annotations:{role:{value:["ECON"]},isalliance:!0,hasoffshore:!0},arguments:{nations:{name:"nations",type:"Set<DBNation>"},amountBase:{name:"amountBase",optional:!0,flag:"b",desc:"The base amount of resources to escrow\nIf per city is set, the highest value of each resource is chosen",type:"Map<ResourceType,Double>"},amountPerCity:{name:"amountPerCity",optional:!0,flag:"p",desc:"Amount of resources to escrow for each city the receiver has\nIf base is set, the highest value of each resource is chosen\nThis uses the city count now, not when the funds are withdrawn later",type:"Map<ResourceType,Double>"},amountExtra:{name:"amountExtra",optional:!0,flag:"e",desc:"Additional resources to escrow\nIf a base or per city are set, this adds to what is calculated for that",type:"Map<ResourceType,Double>"},subtractStockpile:{name:"subtractStockpile",optional:!0,flag:"s",desc:"Don't add escrow resources that the nation has in their stockpile",type:"boolean"},subtractNationsUnits:{name:"subtractNationsUnits",optional:!0,flag:"m",desc:"When the nation has these units, don't add the resources equivalent to their cost\nUseful to only give resources to those missing units",type:"Set<MilitaryUnit>"},subtractDeposits:{name:"subtractDeposits",optional:!0,flag:"d",desc:"Do not add escrow resources that the nation has in their deposits",type:"boolean"},expireAfter:{name:"expireAfter",optional:!0,desc:"Delete all receiver escrow after a time period\nRecommended: 5d",type:"Long[Timediff]"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},set:{help:"",desc:"Set the escrow account balances for a set of nations\nEscrow funds can be withdrawn at a later date by the receiver, such as when a blockade ends\nTo transfer funds from a nation's deposits into their escrow, see the transfer command",annotations:{role:{value:["ECON"]},isalliance:!0,hasoffshore:!0},arguments:{nations:{name:"nations",type:"Set<DBNation>"},amountBase:{name:"amountBase",optional:!0,flag:"b",desc:"The base amount of resources to escrow\nIf per city is set, the highest value of each resource is chosen",type:"Map<ResourceType,Double>"},amountPerCity:{name:"amountPerCity",optional:!0,flag:"p",desc:"Amount of resources to escrow for each city the receiver has\nIf base is set, the highest value of each resource is chosen\nThis uses the city count now, not when the funds are withdrawn later",type:"Map<ResourceType,Double>"},amountExtra:{name:"amountExtra",optional:!0,flag:"e",desc:"Additional resources to escrow\nIf a base or per city are set, this adds to what is calculated for that",type:"Map<ResourceType,Double>"},subtractStockpile:{name:"subtractStockpile",optional:!0,flag:"s",desc:"Don't add escrow resources that the nation has in their stockpile",type:"boolean"},subtractNationsUnits:{name:"subtractNationsUnits",optional:!0,flag:"m",desc:"When the nation has these units, don't add the resources equivalent to their cost\nUseful to only give resources to those missing units",type:"Set<MilitaryUnit>"},subtractDeposits:{name:"subtractDeposits",optional:!0,flag:"d",desc:"Do not add escrow resources that the nation has in their deposits",type:"boolean"},expireAfter:{name:"expireAfter",optional:!0,desc:"Delete all receiver escrow after a time period\nRecommended: 5d",type:"Long[Timediff]"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},set_sheet:{help:"",desc:"Set the escrow account balances for nation to the values in a spreadshet\nThe sheet must have a `nation` column, and then a column for each resource type\nEscrow funds can be withdrawn at a later date by the receiver, such as when a blockade ends\nUse the deposits sheet command to get a spreadsheet of the current escrow balances",annotations:{role:{value:["ECON"]},isalliance:!0,hasoffshore:!0},arguments:{sheet:{name:"sheet",type:"TransferSheet"},expireAfter:{name:"expireAfter",optional:!0,type:"Long[Timediff]"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},view_sheet:{help:"",desc:"Create a google sheet of escrowed resources amounts for a set of nations",groups:["Optional 1: Specific Nations","Optional 2: Include past members"],annotations:{role:{value:["ECON"]}},arguments:{nations:{name:"nations",optional:!0,desc:"Specify the nations to include in the sheet\nDefaults to current members",group:0,type:"Set<DBNation>"},includePastDepositors:{name:"includePastDepositors",optional:!0,flag:"p",desc:"Include all nations that have deposited in the past",group:1,type:"Set<Integer>"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},withdraw:{help:"",desc:"Send a nation funds from their escrowed balance, if they have any",annotations:{hasoffshore:!0,role:{value:["ECON_STAFF","ECON","ECON_WITHDRAW_SELF"],any:!0}},arguments:{receiver:{name:"receiver",type:"DBNation"},amount:{name:"amount",type:"Map<ResourceType,Double>"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}}},fun:{borg:{help:"",desc:"We are the borg",arguments:{msg:{name:"msg",optional:!0,type:"String"}}},borgmas:{help:"",desc:"Making a list, checking it twice; Gonna find out whos naughty or nice. St Borgolas is coming to town"},joke:{help:"",desc:"Get a random joke from the joke file"},reset_borgs_cities:{help:"",desc:"Reset city names",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{name:{name:"name",type:"String"}}},say:{help:"",desc:"Have the bot say the provided message, with placeholders replaced.",arguments:{msg:{name:"msg",type:"String[TextArea]"}}},stealborgscity:{help:"",desc:"Steal one of borgs cities"}},grant:{build:{help:"",desc:"Grant consumptions resources for a specified number of attacks at max MMR (military units)",groups:["Specify Cities","Send Modes (Infra/Land/Bonus/Missing)","Account options","Note options","Escrow"],annotations:{role:{value:["MEMBER"]},isalliance:!0},arguments:{receivers:{name:"receivers",type:"Set<DBNation>"},build:{name:"build",type:"CityBuild"},is_new_city:{name:"is_new_city",desc:"Grant only for a single new city",group:0,type:"boolean"},city_ids:{name:"city_ids",optional:!0,flag:"id",desc:"Grant for a specific city ids",group:0,type:"Set<Integer>"},grant_infra:{name:"grant_infra",optional:!0,flag:"infra",desc:"Send funds for infrastructure (if specified in build)\nDefault: False",group:1,type:"Boolean"},grant_land:{name:"grant_land",optional:!0,flag:"land",desc:"Send funds for land (if specified in build)\nDefault: False",group:1,type:"Boolean"},bonus_percent:{name:"bonus_percent",optional:!0,flag:"p",desc:"Attach a bonus percent, to account for loot losses",group:1,type:"Integer"},onlySendMissingFunds:{name:"onlySendMissingFunds",optional:!0,flag:"m",desc:"Only send funds the receiver is lacking from the amount",group:1,type:"boolean"},nation_account:{name:"nation_account",optional:!0,flag:"n",desc:"The nation account to deduct from",group:2,type:"DBNation"},ingame_bank:{name:"ingame_bank",optional:!0,flag:"a",desc:"The alliance bank to send from\nDefaults to the offshore",group:2,type:"DBAlliance"},offshore_account:{name:"offshore_account",optional:!0,flag:"o",desc:"The alliance account to deduct from\nAlliance must be registered to this guild\nDefaults to all the alliances of this guild",group:2,type:"DBAlliance"},tax_account:{name:"tax_account",optional:!0,flag:"t",desc:"The tax account to deduct from",group:2,type:"TaxBracket"},use_receiver_tax_account:{name:"use_receiver_tax_account",optional:!0,flag:"ta",desc:"Deduct from the receiver's tax bracket account",group:2,type:"boolean"},expire:{name:"expire",optional:!0,flag:"e",desc:"Have the transfer ignored from nation holdings after a timeframe",group:3,type:"Long[Timediff]"},decay:{name:"decay",optional:!0,flag:"d",desc:"Have the transfer decrease linearly from balances over a timeframe",group:3,type:"Long[Timediff]"},bank_note:{name:"bank_note",optional:!0,desc:"Transfer note\nUse `#IGNORE` to not deduct from deposits",group:3,type:"DepositType",def:"#grant"},deduct_as_cash:{name:"deduct_as_cash",optional:!0,flag:"c",desc:"Have the transfer valued as cash in nation holdings",group:3,type:"boolean"},escrow_mode:{name:"escrow_mode",optional:!0,flag:"em",desc:"The mode for escrowing funds (e.g. if the receiver is blockaded)\nDefaults to never",group:4,type:"EscrowMode"},ping_role:{name:"ping_role",optional:!0,flag:"pr",type:"Roles"},ping_when_sent:{name:"ping_when_sent",optional:!0,flag:"ps",type:"boolean"},bypass_checks:{name:"bypass_checks",optional:!0,flag:"b",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},city:{help:"",desc:"Grant cities to a set of nations",groups:["Amount options","Account options","Note options","Escrow","Policy/Project cost reduction"],annotations:{role:{value:["MEMBER"]},isalliance:!0},arguments:{receivers:{name:"receivers",type:"Set<DBNation>"},amount:{name:"amount",desc:"Number of cities to grant",type:"int",min:1,max:100},upTo:{name:"upTo",optional:!0,flag:"u",desc:"If buying up to a city count, instead of additional cities",group:0,type:"boolean"},onlySendMissingFunds:{name:"onlySendMissingFunds",optional:!0,flag:"m",desc:"Only send funds the receiver is lacking from the amount",group:0,type:"boolean"},nation_account:{name:"nation_account",optional:!0,flag:"n",desc:"The nation account to deduct from",group:1,type:"DBNation"},ingame_bank:{name:"ingame_bank",optional:!0,flag:"a",desc:"The alliance bank to send from\nDefaults to the offshore",group:1,type:"DBAlliance"},offshore_account:{name:"offshore_account",optional:!0,flag:"o",desc:"The alliance account to deduct from\nAlliance must be registered to this guild\nDefaults to all the alliances of this guild",group:1,type:"DBAlliance"},tax_account:{name:"tax_account",optional:!0,flag:"t",desc:"The tax account to deduct from",group:1,type:"TaxBracket"},use_receiver_tax_account:{name:"use_receiver_tax_account",optional:!0,flag:"ta",desc:"Deduct from the receiver's tax bracket account",group:1,type:"boolean"},expire:{name:"expire",optional:!0,flag:"e",desc:"Have the transfer ignored from nation holdings after a timeframe",group:2,type:"Long[Timediff]"},decay:{name:"decay",optional:!0,flag:"d",desc:"Have the transfer decrease linearly from balances over a timeframe",group:2,type:"Long[Timediff]"},bank_note:{name:"bank_note",optional:!0,desc:"Transfer note\nUse `#IGNORE` to not deduct from deposits",group:2,type:"DepositType",def:"#grant"},deduct_as_cash:{name:"deduct_as_cash",optional:!0,flag:"c",desc:"Have the transfer valued as cash in nation holdings",group:2,type:"boolean"},escrow_mode:{name:"escrow_mode",optional:!0,flag:"em",desc:"The mode for escrowing funds (e.g. if the receiver is blockaded)\nDefaults to never",group:3,type:"EscrowMode"},manifest_destiny:{name:"manifest_destiny",optional:!0,flag:"md",desc:"Apply the specified domestic policy for determining cost",group:4,type:"Boolean"},gov_support_agency:{name:"gov_support_agency",optional:!0,flag:"gsa",desc:"Apply the specified project for determining cost",group:4,type:"Boolean"},domestic_affairs:{name:"domestic_affairs",optional:!0,flag:"bda",desc:"Apply the specified project for determining cost",group:4,type:"Boolean"},exclude_city_refund:{name:"exclude_city_refund",optional:!0,flag:"er",type:"boolean"},ping_role:{name:"ping_role",optional:!0,flag:"pr",type:"Roles"},ping_when_sent:{name:"ping_when_sent",optional:!0,flag:"ps",type:"boolean"},bypass_checks:{name:"bypass_checks",optional:!0,flag:"b",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},consumption:{help:"",desc:"Grant consumptions resources for a specified number of attacks\nConsumption assumes at max MMR (military units) for the receivers city count",groups:["Number of Attacks","Send Amount Modes","Account options","Note options","Escrow"],annotations:{role:{value:["MEMBER"]},isalliance:!0},arguments:{receivers:{name:"receivers",type:"Set<DBNation>"},soldier_attacks:{name:"soldier_attacks",desc:"Number of Soldier attacks with munitions",group:0,type:"Integer",min:0,max:1e4},tank_attacks:{name:"tank_attacks",desc:"Number of Tank attacks",group:0,type:"Integer",min:0,max:1e4},airstrikes:{name:"airstrikes",desc:"Number of Airstrikes",group:0,type:"Integer",min:0,max:1e4},naval_attacks:{name:"naval_attacks",desc:"Number of Naval Attacks",group:0,type:"Integer",min:0,max:1e4},missiles:{name:"missiles",optional:!0,desc:"Number of Missiles",group:0,type:"Integer",min:0,max:1e4},nukes:{name:"nukes",optional:!0,desc:"Number of Nukes",group:0,type:"Integer",min:0,max:1e4},bonus_percent:{name:"bonus_percent",optional:!0,flag:"p",desc:"Attach a bonus percent, to account for loot losses",group:1,type:"Integer"},onlySendMissingFunds:{name:"onlySendMissingFunds",optional:!0,flag:"m",desc:"Only send funds the receiver is lacking from the amount",group:1,type:"boolean"},nation_account:{name:"nation_account",optional:!0,flag:"n",desc:"The nation account to deduct from",group:2,type:"DBNation"},ingame_bank:{name:"ingame_bank",optional:!0,flag:"a",desc:"The alliance bank to send from\nDefaults to the offshore",group:2,type:"DBAlliance"},offshore_account:{name:"offshore_account",optional:!0,flag:"o",desc:"The alliance account to deduct from\nAlliance must be registered to this guild\nDefaults to all the alliances of this guild",group:2,type:"DBAlliance"},tax_account:{name:"tax_account",optional:!0,flag:"t",desc:"The tax account to deduct from",group:2,type:"TaxBracket"},use_receiver_tax_account:{name:"use_receiver_tax_account",optional:!0,flag:"ta",desc:"Deduct from the receiver's tax bracket account",group:2,type:"boolean"},expire:{name:"expire",optional:!0,flag:"e",desc:"Have the transfer ignored from nation holdings after a timeframe",group:3,type:"Long[Timediff]"},decay:{name:"decay",optional:!0,flag:"d",desc:"Have the transfer decrease linearly from balances over a timeframe",group:3,type:"Long[Timediff]"},bank_note:{name:"bank_note",optional:!0,desc:"Transfer note\nUse `#IGNORE` to not deduct from deposits",group:3,type:"DepositType",def:"#grant"},deduct_as_cash:{name:"deduct_as_cash",optional:!0,flag:"c",desc:"Have the transfer valued as cash in nation holdings",group:3,type:"boolean"},escrow_mode:{name:"escrow_mode",optional:!0,flag:"em",desc:"The mode for escrowing funds (e.g. if the receiver is blockaded)\nDefaults to never",group:4,type:"EscrowMode"},ping_role:{name:"ping_role",optional:!0,flag:"pr",type:"Roles"},ping_when_sent:{name:"ping_when_sent",optional:!0,flag:"ps",type:"boolean"},bypass_checks:{name:"bypass_checks",optional:!0,flag:"b",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},cost:{help:"",desc:"Generate a sheet and summary of the cost of purchasing cities, infra, land, and projects for a set of nations",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{receivers:{name:"receivers",type:"Set<DBNation>"},cities:{name:"cities",optional:!0,flag:"c",type:"Integer",min:1,max:100},cities_up_to:{name:"cities_up_to",optional:!0,flag:"u",type:"boolean"},buy_projects:{name:"buy_projects",optional:!0,flag:"p",type:"Set<Project>"},infra_level:{name:"infra_level",optional:!0,flag:"i",type:"Integer"},land_level:{name:"land_level",optional:!0,flag:"l",type:"Integer"},force_policy:{name:"force_policy",optional:!0,flag:"d",desc:"Force the use of the provided policies for cost reduction",type:"Set<DomesticPolicy>"},force_projects:{name:"force_projects",optional:!0,flag:"fp",desc:"These projects are not purchased but are included for cost reduction calculations",type:"Set<Project>"},exclude_city_refund:{name:"exclude_city_refund",optional:!0,flag:"er",type:"boolean"},research:{name:"research",optional:!0,flag:"r",type:"Map<Research,Integer>"},research_from_zero:{name:"research_from_zero",optional:!0,flag:"rz",type:"boolean"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},infra:{help:"",desc:"Grant infra to a set of nations",groups:["Infra options","Account options","Note options","Escrow","Policy/Project cost reduction"],annotations:{role:{value:["MEMBER"]},isalliance:!0},arguments:{receivers:{name:"receivers",type:"Set<DBNation>"},infra_level:{name:"infra_level",type:"int",min:50,max:1e4},single_new_city:{name:"single_new_city",optional:!0,flag:"new",desc:"If the grant is for a new city",group:0,type:"boolean"},onlySendMissingFunds:{name:"onlySendMissingFunds",optional:!0,flag:"m",desc:"Only send funds the receiver is lacking from the amount",group:0,type:"boolean"},nation_account:{name:"nation_account",optional:!0,flag:"n",desc:"The nation account to deduct from",group:1,type:"DBNation"},ingame_bank:{name:"ingame_bank",optional:!0,flag:"a",desc:"The alliance bank to send from\nDefaults to the offshore",group:1,type:"DBAlliance"},offshore_account:{name:"offshore_account",optional:!0,flag:"o",desc:"The alliance account to deduct from\nAlliance must be registered to this guild\nDefaults to all the alliances of this guild",group:1,type:"DBAlliance"},tax_account:{name:"tax_account",optional:!0,flag:"t",desc:"The tax account to deduct from",group:1,type:"TaxBracket"},use_receiver_tax_account:{name:"use_receiver_tax_account",optional:!0,flag:"ta",desc:"Deduct from the receiver's tax bracket account",group:1,type:"boolean"},expire:{name:"expire",optional:!0,flag:"e",desc:"Have the transfer ignored from nation holdings after a timeframe",group:2,type:"Long[Timediff]"},decay:{name:"decay",optional:!0,flag:"d",desc:"Have the transfer decrease linearly from balances over a timeframe",group:2,type:"Long[Timediff]"},bank_note:{name:"bank_note",optional:!0,desc:"Transfer note\nUse `#IGNORE` to not deduct from deposits",group:2,type:"DepositType",def:"#grant"},deduct_as_cash:{name:"deduct_as_cash",optional:!0,flag:"c",desc:"Have the transfer valued as cash in nation holdings",group:2,type:"boolean"},escrow_mode:{name:"escrow_mode",optional:!0,flag:"em",desc:"The mode for escrowing funds (e.g. if the receiver is blockaded)\nDefaults to never",group:3,type:"EscrowMode"},urbanization:{name:"urbanization",optional:!0,flag:"u",desc:"Apply the specified domestic policy for determining cost",group:4,type:"Boolean"},advanced_engineering_corps:{name:"advanced_engineering_corps",optional:!0,flag:"aec",desc:"Apply the specified project for determining cost",group:4,type:"Boolean"},center_for_civil_engineering:{name:"center_for_civil_engineering",optional:!0,flag:"cfce",desc:"Apply the specified project for determining cost",group:4,type:"Boolean"},gov_support_agency:{name:"gov_support_agency",optional:!0,flag:"gsa",desc:"Apply the specified project for determining cost",group:4,type:"Boolean"},domestic_affairs:{name:"domestic_affairs",optional:!0,flag:"bda",desc:"Apply the specified project for determining cost",group:4,type:"Boolean"},ping_role:{name:"ping_role",optional:!0,flag:"pr",type:"Roles"},ping_when_sent:{name:"ping_when_sent",optional:!0,flag:"ps",type:"boolean"},bypass_checks:{name:"bypass_checks",optional:!0,flag:"b",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},land:{help:"",desc:"Grant land to a set of nations",groups:["Amount options","Account options","Note options","Escrow","Policy/Project cost reduction"],annotations:{role:{value:["MEMBER"]},isalliance:!0},arguments:{receivers:{name:"receivers",type:"Set<DBNation>"},to_land:{name:"to_land",type:"int",min:1,max:1e4},single_new_city:{name:"single_new_city",optional:!0,flag:"new",desc:"If the grant is for a new city",group:0,type:"boolean"},onlySendMissingFunds:{name:"onlySendMissingFunds",optional:!0,flag:"m",desc:"Only send funds the receiver is lacking from the amount",group:0,type:"boolean"},nation_account:{name:"nation_account",optional:!0,flag:"n",desc:"The nation account to deduct from",group:1,type:"DBNation"},ingame_bank:{name:"ingame_bank",optional:!0,flag:"a",desc:"The alliance bank to send from\nDefaults to the offshore",group:1,type:"DBAlliance"},offshore_account:{name:"offshore_account",optional:!0,flag:"o",desc:"The alliance account to deduct from\nAlliance must be registered to this guild\nDefaults to all the alliances of this guild",group:1,type:"DBAlliance"},tax_account:{name:"tax_account",optional:!0,flag:"t",desc:"The tax account to deduct from",group:1,type:"TaxBracket"},use_receiver_tax_account:{name:"use_receiver_tax_account",optional:!0,flag:"ta",desc:"Deduct from the receiver's tax bracket account",group:1,type:"boolean"},expire:{name:"expire",optional:!0,flag:"e",desc:"Have the transfer ignored from nation holdings after a timeframe",group:2,type:"Long[Timediff]"},decay:{name:"decay",optional:!0,flag:"d",desc:"Have the transfer decrease linearly from balances over a timeframe",group:2,type:"Long[Timediff]"},bank_note:{name:"bank_note",optional:!0,desc:"Transfer note\nUse `#IGNORE` to not deduct from deposits",group:2,type:"DepositType",def:"#grant"},deduct_as_cash:{name:"deduct_as_cash",optional:!0,flag:"c",desc:"Have the transfer valued as cash in nation holdings",group:2,type:"boolean"},escrow_mode:{name:"escrow_mode",optional:!0,flag:"em",desc:"The mode for escrowing funds (e.g. if the receiver is blockaded)\nDefaults to never",group:3,type:"EscrowMode"},rapid_expansion:{name:"rapid_expansion",optional:!0,flag:"ra",desc:"Apply the specified domestic policy for determining cost",group:4,type:"Boolean"},advanced_engineering_corps:{name:"advanced_engineering_corps",optional:!0,flag:"aec",desc:"Apply the specified project for determining cost",group:4,type:"Boolean"},arable_land_agency:{name:"arable_land_agency",optional:!0,flag:"ala",desc:"Apply the specified project for determining cost",group:4,type:"Boolean"},gov_support_agency:{name:"gov_support_agency",optional:!0,flag:"gsa",desc:"Apply the specified project for determining cost",group:4,type:"Boolean"},domestic_affairs:{name:"domestic_affairs",optional:!0,flag:"bda",desc:"Apply the specified project for determining cost",group:4,type:"Boolean"},ping_role:{name:"ping_role",optional:!0,flag:"pr",type:"Roles"},ping_when_sent:{name:"ping_when_sent",optional:!0,flag:"ps",type:"boolean"},bypass_checks:{name:"bypass_checks",optional:!0,flag:"b",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},mmr:{help:"",desc:"Grant units equivalent to an MMR value to a set of nations",groups:["MMR options","Account options","Note options","Escrow"],annotations:{role:{value:["MEMBER"]},isalliance:!0},arguments:{receivers:{name:"receivers",type:"Set<DBNation>"},mmr:{name:"mmr",type:"MMRDouble"},multiplier:{name:"multiplier",optional:!0,desc:"Number of buys to multiply this grant by",type:"int",def:"1",min:1,max:100},mode:{name:"mode",optional:!0,desc:"If to grant as a daily buy, or full MMR",type:"MMRBuyMode",def:"FULL"},is_additional_units:{name:"is_additional_units",optional:!0,flag:"u",desc:"If the mmr being granted is for new units, rather than only the difference from current units",group:0,type:"boolean"},onlySendMissingFunds:{name:"onlySendMissingFunds",optional:!0,flag:"m",desc:"Only send funds the receiver is lacking from the amount",group:0,type:"boolean"},nation_account:{name:"nation_account",optional:!0,flag:"n",desc:"The nation account to deduct from",group:1,type:"DBNation"},ingame_bank:{name:"ingame_bank",optional:!0,flag:"a",desc:"The alliance bank to send from\nDefaults to the offshore",group:1,type:"DBAlliance"},offshore_account:{name:"offshore_account",optional:!0,flag:"o",desc:"The alliance account to deduct from\nAlliance must be registered to this guild\nDefaults to all the alliances of this guild",group:1,type:"DBAlliance"},tax_account:{name:"tax_account",optional:!0,flag:"t",desc:"The tax account to deduct from",group:1,type:"TaxBracket"},use_receiver_tax_account:{name:"use_receiver_tax_account",optional:!0,flag:"ta",desc:"Deduct from the receiver's tax bracket account",group:1,type:"boolean"},expire:{name:"expire",optional:!0,flag:"e",desc:"Have the transfer ignored from nation holdings after a timeframe",group:2,type:"Long[Timediff]"},decay:{name:"decay",optional:!0,flag:"d",desc:"Have the transfer decrease linearly from balances over a timeframe",group:2,type:"Long[Timediff]"},bank_note:{name:"bank_note",optional:!0,desc:"Transfer note\nUse `#IGNORE` to not deduct from deposits",group:2,type:"DepositType",def:"#grant"},deduct_as_cash:{name:"deduct_as_cash",optional:!0,flag:"c",desc:"Have the transfer valued as cash in nation holdings",group:2,type:"boolean"},escrow_mode:{name:"escrow_mode",optional:!0,flag:"em",desc:"The mode for escrowing funds (e.g. if the receiver is blockaded)\nDefaults to never",group:3,type:"EscrowMode"},ping_role:{name:"ping_role",optional:!0,flag:"pr",type:"Roles"},ping_when_sent:{name:"ping_when_sent",optional:!0,flag:"ps",type:"boolean"},bypass_checks:{name:"bypass_checks",optional:!0,flag:"b",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},project:{help:"",desc:"Grant a project to a set of nations",groups:["Project options","Account options","Note options","Escrow","Policy/Project cost reduction"],annotations:{role:{value:["MEMBER"]},isalliance:!0},arguments:{receivers:{name:"receivers",type:"Set<DBNation>"},project:{name:"project",type:"Project"},onlySendMissingFunds:{name:"onlySendMissingFunds",optional:!0,flag:"m",desc:"Only send funds the receiver is lacking from the amount",group:0,type:"boolean"},nation_account:{name:"nation_account",optional:!0,flag:"n",desc:"The nation account to deduct from",group:1,type:"DBNation"},ingame_bank:{name:"ingame_bank",optional:!0,flag:"a",desc:"The alliance bank to send from\nDefaults to the offshore",group:1,type:"DBAlliance"},offshore_account:{name:"offshore_account",optional:!0,flag:"o",desc:"The alliance account to deduct from\nAlliance must be registered to this guild\nDefaults to all the alliances of this guild",group:1,type:"DBAlliance"},tax_account:{name:"tax_account",optional:!0,flag:"t",desc:"The tax account to deduct from",group:1,type:"TaxBracket"},use_receiver_tax_account:{name:"use_receiver_tax_account",optional:!0,flag:"ta",desc:"Deduct from the receiver's tax bracket account",group:1,type:"boolean"},expire:{name:"expire",optional:!0,flag:"e",desc:"Have the transfer ignored from nation holdings after a timeframe",group:2,type:"Long[Timediff]"},decay:{name:"decay",optional:!0,flag:"d",desc:"Have the transfer decrease linearly from balances over a timeframe",group:2,type:"Long[Timediff]"},bank_note:{name:"bank_note",optional:!0,desc:"Transfer note\nUse `#IGNORE` to not deduct from deposits",group:2,type:"DepositType",def:"#grant"},deduct_as_cash:{name:"deduct_as_cash",optional:!0,flag:"c",desc:"Have the transfer valued as cash in nation holdings",group:2,type:"boolean"},escrow_mode:{name:"escrow_mode",optional:!0,flag:"em",desc:"The mode for escrowing funds (e.g. if the receiver is blockaded)\nDefaults to never",group:3,type:"EscrowMode"},technological_advancement:{name:"technological_advancement",optional:!0,flag:"dpta",desc:"Apply the specified domestic policy for determining cost",group:4,type:"Boolean"},gov_support_agency:{name:"gov_support_agency",optional:!0,flag:"gsa",desc:"Apply the specified project for determining cost",group:4,type:"Boolean"},domestic_affairs:{name:"domestic_affairs",optional:!0,flag:"bda",desc:"Apply the specified project for determining cost",group:4,type:"Boolean"},ping_role:{name:"ping_role",optional:!0,flag:"pr",type:"Roles"},ping_when_sent:{name:"ping_when_sent",optional:!0,flag:"ps",type:"boolean"},bypass_checks:{name:"bypass_checks",optional:!0,flag:"b",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},request:{approve:{help:"",desc:"Confirm a grant request",annotations:{role:{value:["ECON"],any:!0}},arguments:{request:{name:"request",type:"GrantRequest"}}},cancel:{help:"",desc:"",annotations:{role:{value:["ECON","ECON_STAFF"],any:!0}},arguments:{request:{name:"request",type:"GrantRequest"}}},create:{help:"",desc:"Request a grant from the grant request channel",annotations:{role:{value:["ECON_WITHDRAW_SELF","ECON","ECON_STAFF","MEMBER"],any:!0}},arguments:{reason:{name:"reason",type:"String"},receiver:{name:"receiver",type:"NationOrAlliance"},command:{name:"command",type:"JSONObject"},estimate_amount:{name:"estimate_amount",type:"Map<ResourceType,Double>"}}}},research:{help:"",desc:"Grant research cost to nations",groups:["Amount option","Account options","Note options","Escrow"],annotations:{role:{value:["ECON"]},isalliance:!0},arguments:{receivers:{name:"receivers",type:"Set<DBNation>"},research:{name:"research",type:"Map<Research,Integer>"},research_from_zero:{name:"research_from_zero",optional:!0,flag:"z",desc:"Grant the research cost from zero prior research",group:0,type:"boolean"},onlySendMissingFunds:{name:"onlySendMissingFunds",optional:!0,flag:"m",desc:"Only send funds the receiver is lacking from the amount",group:0,type:"boolean"},nation_account:{name:"nation_account",optional:!0,flag:"n",desc:"The nation account to deduct from",group:1,type:"DBNation"},ingame_bank:{name:"ingame_bank",optional:!0,flag:"a",desc:"The alliance bank to send from\nDefaults to the offshore",group:1,type:"DBAlliance"},offshore_account:{name:"offshore_account",optional:!0,flag:"o",desc:"The alliance account to deduct from\nAlliance must be registered to this guild\nDefaults to all the alliances of this guild",group:1,type:"DBAlliance"},tax_account:{name:"tax_account",optional:!0,flag:"t",desc:"The tax account to deduct from",group:1,type:"TaxBracket"},use_receiver_tax_account:{name:"use_receiver_tax_account",optional:!0,flag:"ta",desc:"Deduct from the receiver's tax bracket account",group:1,type:"boolean"},expire:{name:"expire",optional:!0,flag:"e",desc:"Have the transfer ignored from nation holdings after a timeframe",group:2,type:"Long[Timediff]"},decay:{name:"decay",optional:!0,flag:"d",desc:"Have the transfer decrease linearly from balances over a timeframe",group:2,type:"Long[Timediff]"},bank_note:{name:"bank_note",optional:!0,desc:"Transfer note\nUse `#IGNORE` to not deduct from deposits",group:2,type:"DepositType",def:"#grant"},deduct_as_cash:{name:"deduct_as_cash",optional:!0,flag:"c",desc:"Have the transfer valued as cash in nation holdings",group:2,type:"boolean"},escrow_mode:{name:"escrow_mode",optional:!0,flag:"em",desc:"The mode for escrowing funds (e.g. if the receiver is blockaded)\nDefaults to never",group:3,type:"EscrowMode"},ping_role:{name:"ping_role",optional:!0,flag:"pr",type:"Roles"},ping_when_sent:{name:"ping_when_sent",optional:!0,flag:"ps",type:"boolean"},bypass_checks:{name:"bypass_checks",optional:!0,flag:"b",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},unit:{help:"",desc:"Grant units to a set of nations",groups:["Unit options","Account options","Note options","Escrow"],annotations:{role:{value:["MEMBER"]},isalliance:!0},arguments:{receivers:{name:"receivers",type:"Set<DBNation>"},units:{name:"units",type:"Map<MilitaryUnit,Long>"},scale_per_city:{name:"scale_per_city",desc:"Multiple the units specified by the receivers cities",group:0,type:"boolean"},only_missing_units:{name:"only_missing_units",desc:"Only send funds for units the receiver is lacking",group:0,type:"boolean"},onlySendMissingFunds:{name:"onlySendMissingFunds",optional:!0,flag:"m",desc:"Only send funds the receiver is lacking from the amount",group:0,type:"boolean"},no_cash:{name:"no_cash",optional:!0,flag:"nc",desc:"Don't send any cash, only other resources",group:0,type:"boolean"},nation_account:{name:"nation_account",optional:!0,flag:"n",desc:"The nation account to deduct from",group:1,type:"DBNation"},ingame_bank:{name:"ingame_bank",optional:!0,flag:"a",desc:"The alliance bank to send from\nDefaults to the offshore",group:1,type:"DBAlliance"},offshore_account:{name:"offshore_account",optional:!0,flag:"o",desc:"The alliance account to deduct from\nAlliance must be registered to this guild\nDefaults to all the alliances of this guild",group:1,type:"DBAlliance"},tax_account:{name:"tax_account",optional:!0,flag:"t",desc:"The tax account to deduct from",group:1,type:"TaxBracket"},use_receiver_tax_account:{name:"use_receiver_tax_account",optional:!0,flag:"ta",desc:"Deduct from the receiver's tax bracket account",group:1,type:"boolean"},expire:{name:"expire",optional:!0,flag:"e",desc:"Have the transfer ignored from nation holdings after a timeframe",group:2,type:"Long[Timediff]"},decay:{name:"decay",optional:!0,flag:"d",desc:"Have the transfer decrease linearly from balances over a timeframe",group:2,type:"Long[Timediff]"},bank_note:{name:"bank_note",optional:!0,desc:"Transfer note\nUse `#IGNORE` to not deduct from deposits",group:2,type:"DepositType",def:"#grant"},deduct_as_cash:{name:"deduct_as_cash",optional:!0,flag:"c",desc:"Have the transfer valued as cash in nation holdings",group:2,type:"boolean"},escrow_mode:{name:"escrow_mode",optional:!0,flag:"em",desc:"The mode for escrowing funds (e.g. if the receiver is blockaded)\nDefaults to never",group:3,type:"EscrowMode"},ping_role:{name:"ping_role",optional:!0,flag:"pr",type:"Roles"},ping_when_sent:{name:"ping_when_sent",optional:!0,flag:"ps",type:"boolean"},bypass_checks:{name:"bypass_checks",optional:!0,flag:"b",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},warchest:{help:"",desc:"Grant a multiple of the warchest requirements to a set of nations\nUse 1 for the default warchest\nIf no warchest is configured, a default will be used, see setting `WARCHEST_PER_CITY`",groups:["Amount option","Account options","Note options","Escrow"],annotations:{role:{value:["MEMBER"]},isalliance:!0},arguments:{receivers:{name:"receivers",type:"Set<DBNation>"},ratio:{name:"ratio",type:"double",min:.01,max:50},onlySendMissingFunds:{name:"onlySendMissingFunds",optional:!0,flag:"m",desc:"Only send funds the receiver is lacking from the amount",group:0,type:"boolean"},nation_account:{name:"nation_account",optional:!0,flag:"n",desc:"The nation account to deduct from",group:1,type:"DBNation"},ingame_bank:{name:"ingame_bank",optional:!0,flag:"a",desc:"The alliance bank to send from\nDefaults to the offshore",group:1,type:"DBAlliance"},offshore_account:{name:"offshore_account",optional:!0,flag:"o",desc:"The alliance account to deduct from\nAlliance must be registered to this guild\nDefaults to all the alliances of this guild",group:1,type:"DBAlliance"},tax_account:{name:"tax_account",optional:!0,flag:"t",desc:"The tax account to deduct from",group:1,type:"TaxBracket"},use_receiver_tax_account:{name:"use_receiver_tax_account",optional:!0,flag:"ta",desc:"Deduct from the receiver's tax bracket account",group:1,type:"boolean"},expire:{name:"expire",optional:!0,flag:"e",desc:"Have the transfer ignored from nation holdings after a timeframe",group:2,type:"Long[Timediff]"},decay:{name:"decay",optional:!0,flag:"d",desc:"Have the transfer decrease linearly from balances over a timeframe",group:2,type:"Long[Timediff]"},bank_note:{name:"bank_note",optional:!0,desc:"Transfer note\nUse `#IGNORE` to not deduct from deposits",group:2,type:"DepositType",def:"#grant"},deduct_as_cash:{name:"deduct_as_cash",optional:!0,flag:"c",desc:"Have the transfer valued as cash in nation holdings",group:2,type:"boolean"},escrow_mode:{name:"escrow_mode",optional:!0,flag:"em",desc:"The mode for escrowing funds (e.g. if the receiver is blockaded)\nDefaults to never",group:3,type:"EscrowMode"},ping_role:{name:"ping_role",optional:!0,flag:"pr",type:"Roles"},ping_when_sent:{name:"ping_when_sent",optional:!0,flag:"ps",type:"boolean"},bypass_checks:{name:"bypass_checks",optional:!0,flag:"b",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}}},grant_template:{create:{build:{help:"",desc:"Create a new build grant template",annotations:{role:{value:["ECON"]}},arguments:{name:{name:"name",desc:"The name of the template\nAlphanumerical",type:"String"},allowedRecipients:{name:"allowedRecipients",desc:"A filter for nations allowed to receive this grant\nUse your alliance link for all nations\nSee: <https://github.com/xdnw/locutus/wiki/nation_placeholders>",type:"Predicate<DBNation>"},build:{name:"build",optional:!0,flag:"c",desc:"Only grant this specific city build\nDefaults to allow any city build",type:"CityBuild"},mmr:{name:"mmr",optional:!0,flag:"m",desc:"The MMR required for grants via this template",type:"MMRInt"},only_new_cities:{name:"only_new_cities",optional:!0,flag:"o",desc:"Only allow granting builds for new cities\n(Past 10 days)",type:"boolean"},allow_after_days:{name:"allow_after_days",optional:!0,flag:"t",desc:"Allow grants to cities that have not received a build in the past X days\nDefaults to no limit",type:"Integer"},allow_after_offensive:{name:"allow_after_offensive",optional:!0,flag:"a",desc:"Allow sending to cities after the receiver has had an offensive war\ne.g. For for switching builds after a counter\nDefaults to False",type:"boolean"},allow_after_infra:{name:"allow_after_infra",optional:!0,flag:"i",desc:"Allow sending to cities where infrastructure has been damaged\nDefaults to False",type:"boolean"},allow_all:{name:"allow_all",optional:!0,flag:"aa",desc:"Always allow granting (even if they have received another city build grant)",type:"boolean"},allow_after_land_or_project:{name:"allow_after_land_or_project",optional:!0,flag:"lp",desc:"Allow granting after purchasing land or a project\nDefaults to False",type:"boolean"},econRole:{name:"econRole",optional:!0,flag:"e",desc:"The role that can grant this template to others\nDefaults to the ECON role (see `{prefix}role setalias`)",type:"Role"},selfRole:{name:"selfRole",optional:!0,flag:"s",desc:"The role that can grant this template to itself\nDefaults to disabled",type:"Role"},bracket:{name:"bracket",optional:!0,flag:"b",desc:"The tax bracket account to use for withdrawals\ne.g. For a growth circle\nDefaults to None\nSee: <https://github.com/xdnw/locutus/wiki/tax_automation#tax-bracket-accounts>",type:"TaxBracket"},useReceiverBracket:{name:"useReceiverBracket",optional:!0,flag:"r",desc:"If the receiver's tax bracket is used as the tax bracket account\nDefaults to false\nAlternative to `bracket`",type:"boolean"},maxTotal:{name:"maxTotal",optional:!0,flag:"mt",desc:"Global grants allowed for this template\nDefaults to unlimited",type:"Integer"},maxDay:{name:"maxDay",optional:!0,flag:"md",desc:"Grants allowed for this template per day\nDefaults to unlimited",type:"Integer"},maxGranterDay:{name:"maxGranterDay",optional:!0,flag:"mgd",desc:"Grants allowed for this template per day by the same sender\nDefaults to unlimited",type:"Integer"},maxGranterTotal:{name:"maxGranterTotal",optional:!0,flag:"mgt",desc:"Grants allowed for this template by the same sender\nDefaults to unlimited",type:"Integer"},expireTime:{name:"expireTime",optional:!0,flag:"expire",desc:"Add a default expiry time to grants sent via this template\ne.g. 60d\nThe granter can specify an expiry shorter than this value",type:"Long[Timediff]"},decayTime:{name:"decayTime",optional:!0,flag:"decay",desc:"Add a default decaying expiry time to grants sent via this template\ne.g. 60d\nThe granter can specify an expiry shorter than this value",type:"Long[Timediff]"},allowIgnore:{name:"allowIgnore",optional:!0,flag:"ignore",desc:"Do not include grants in member balances by default\nDefaults to false",type:"boolean"},repeatable_time:{name:"repeatable_time",optional:!0,flag:"repeat",desc:"If the template can be sent to the same receiver multiple times",type:"Long[Timediff]"},include_infra:{name:"include_infra",optional:!0,flag:"infra",desc:"If the build grant includes infra",type:"boolean"},include_land:{name:"include_land",optional:!0,flag:"land",desc:"The amount of land to include in the build\nDefaults to none",type:"Integer"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},city:{help:"",desc:"Create a new city grant template",annotations:{role:{value:["ECON"]}},arguments:{name:{name:"name",desc:"The name of the template\nAlphanumerical",type:"String"},allowedRecipients:{name:"allowedRecipients",desc:"A filter for nations allowed to receive this grant\nUse your alliance link for all nations\nSee: <https://github.com/xdnw/locutus/wiki/nation_placeholders>",type:"Predicate<DBNation>"},minCity:{name:"minCity",desc:"The minimum city range allowed to receive grants",type:"Integer"},maxCity:{name:"maxCity",desc:"The maximum city allowed to grant up to",type:"Integer"},econRole:{name:"econRole",optional:!0,flag:"e",desc:"The role that can grant this template to others\nDefaults to the ECON role (see `{prefix}role setalias`)",type:"Role"},selfRole:{name:"selfRole",optional:!0,flag:"s",desc:"The role that can grant this template to itself\nDefaults to disabled",type:"Role"},bracket:{name:"bracket",optional:!0,flag:"b",desc:"The tax bracket account to use for withdrawals\ne.g. For a growth circle\nDefaults to None\nSee: <https://github.com/xdnw/locutus/wiki/tax_automation#tax-bracket-accounts>",type:"TaxBracket"},useReceiverBracket:{name:"useReceiverBracket",optional:!0,flag:"r",desc:"If the receiver's tax bracket is used as the tax bracket account\nDefaults to false\nAlternative to `bracket`",type:"boolean"},maxTotal:{name:"maxTotal",optional:!0,flag:"mt",desc:"Global grants allowed for this template\nDefaults to unlimited",type:"Integer"},maxDay:{name:"maxDay",optional:!0,flag:"md",desc:"Grants allowed for this template per day\nDefaults to unlimited",type:"Integer"},maxGranterDay:{name:"maxGranterDay",optional:!0,flag:"mgd",desc:"Grants allowed for this template per day by the same sender\nDefaults to unlimited",type:"Integer"},maxGranterTotal:{name:"maxGranterTotal",optional:!0,flag:"mgt",desc:"Grants allowed for this template by the same sender\nDefaults to unlimited",type:"Integer"},expireTime:{name:"expireTime",optional:!0,flag:"expire",desc:"Add a default expiry time to grants sent via this template\ne.g. 60d\nThe granter can specify an expiry shorter than this value",type:"Long[Timediff]"},decayTime:{name:"decayTime",optional:!0,flag:"decay",desc:"Add a default decaying expiry time to grants sent via this template\ne.g. 60d\nThe granter can specify an expiry shorter than this value",type:"Long[Timediff]"},allowIgnore:{name:"allowIgnore",optional:!0,flag:"ignore",desc:"Do not include grants in member balances by default\nDefaults to false",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},infra:{help:"",desc:"Create a new infra grant template",annotations:{role:{value:["ECON"]}},arguments:{name:{name:"name",desc:"The name of the template\nAlphanumerical",type:"String"},allowedRecipients:{name:"allowedRecipients",desc:"A filter for nations allowed to receive this grant\nUse your alliance link for all nations\nSee: <https://github.com/xdnw/locutus/wiki/nation_placeholders>",type:"Predicate<DBNation>"},level:{name:"level",desc:"The infra level allowed to grant to",type:"Integer"},onlyNewCities:{name:"onlyNewCities",optional:!0,flag:"n",desc:"Only allow grants to new cities (past 10 days)\nDefaults to false",type:"boolean"},requireNOffensives:{name:"requireNOffensives",optional:!0,flag:"o",desc:"Require N offensive wars before allowing infra grants",type:"Integer"},allowRebuild:{name:"allowRebuild",optional:!0,flag:"a",desc:"Allow granting infra to cities that have received a grant in the past provided it has received damage",type:"boolean"},econRole:{name:"econRole",optional:!0,flag:"e",desc:"The role that can grant this template to others\nDefaults to the ECON role (see `{prefix}role setalias`)",type:"Role"},selfRole:{name:"selfRole",optional:!0,flag:"s",desc:"The role that can grant this template to itself\nDefaults to disabled",type:"Role"},bracket:{name:"bracket",optional:!0,flag:"b",desc:"The tax bracket account to use for withdrawals\ne.g. For a growth circle\nDefaults to None\nSee: <https://github.com/xdnw/locutus/wiki/tax_automation#tax-bracket-accounts>",type:"TaxBracket"},useReceiverBracket:{name:"useReceiverBracket",optional:!0,flag:"r",desc:"If the receiver's tax bracket is used as the tax bracket account\nDefaults to false\nAlternative to `bracket`",type:"boolean"},maxTotal:{name:"maxTotal",optional:!0,flag:"mt",desc:"Global grants allowed for this template\nDefaults to unlimited",type:"Integer"},maxDay:{name:"maxDay",optional:!0,flag:"md",desc:"Grants allowed for this template per day\nDefaults to unlimited",type:"Integer"},maxGranterDay:{name:"maxGranterDay",optional:!0,flag:"mgd",desc:"Grants allowed for this template per day by the same sender\nDefaults to unlimited",type:"Integer"},maxGranterTotal:{name:"maxGranterTotal",optional:!0,flag:"mgt",desc:"Grants allowed for this template by the same sender\nDefaults to unlimited",type:"Integer"},expireTime:{name:"expireTime",optional:!0,flag:"expire",desc:"Add a default expiry time to grants sent via this template\ne.g. 60d\nThe granter can specify an expiry shorter than this value",type:"Long[Timediff]"},decayTime:{name:"decayTime",optional:!0,flag:"decay",desc:"Add a default decaying expiry time to grants sent via this template\ne.g. 60d\nThe granter can specify an expiry shorter than this value",type:"Long[Timediff]"},allowIgnore:{name:"allowIgnore",optional:!0,flag:"ignore",desc:"Do not include grants in member balances by default\nDefaults to false",type:"boolean"},repeatable_time:{name:"repeatable_time",optional:!0,flag:"repeat",desc:"If the template can be sent to the same receiver multiple times",type:"Long[Timediff]"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},land:{help:"",desc:"Create a new land grant template",annotations:{role:{value:["ECON"]}},arguments:{name:{name:"name",desc:"The name of the template\nAlphanumerical",type:"String"},allowedRecipients:{name:"allowedRecipients",desc:"A filter for nations allowed to receive this grant\nUse your alliance link for all nations\nSee: <https://github.com/xdnw/locutus/wiki/nation_placeholders>",type:"Predicate<DBNation>"},level:{name:"level",desc:"The land level to grant up to (inclusive)",type:"Integer"},onlyNewCities:{name:"onlyNewCities",optional:!0,flag:"n",desc:"Only allow grants to new cities (past 10 days)",type:"boolean"},econRole:{name:"econRole",optional:!0,flag:"e",desc:"The role that can grant this template to others\nDefaults to the ECON role (see `{prefix}role setalias`)",type:"Role"},selfRole:{name:"selfRole",optional:!0,flag:"s",desc:"The role that can grant this template to itself\nDefaults to disabled",type:"Role"},bracket:{name:"bracket",optional:!0,flag:"b",desc:"The tax bracket account to use for withdrawals\ne.g. For a growth circle\nDefaults to None\nSee: <https://github.com/xdnw/locutus/wiki/tax_automation#tax-bracket-accounts>",type:"TaxBracket"},useReceiverBracket:{name:"useReceiverBracket",optional:!0,flag:"r",desc:"If the receiver's tax bracket is used as the tax bracket account\nDefaults to false\nAlternative to `bracket`",type:"boolean"},maxTotal:{name:"maxTotal",optional:!0,flag:"mt",desc:"Global grants allowed for this template\nDefaults to unlimited",type:"Integer"},maxDay:{name:"maxDay",optional:!0,flag:"md",desc:"Grants allowed for this template per day\nDefaults to unlimited",type:"Integer"},maxGranterDay:{name:"maxGranterDay",optional:!0,flag:"mgd",desc:"Grants allowed for this template per day by the same sender\nDefaults to unlimited",type:"Integer"},maxGranterTotal:{name:"maxGranterTotal",optional:!0,flag:"mgt",desc:"Grants allowed for this template by the same sender\nDefaults to unlimited",type:"Integer"},expireTime:{name:"expireTime",optional:!0,flag:"expire",desc:"Add a default expiry time to grants sent via this template\ne.g. 60d\nThe granter can specify an expiry shorter than this value",type:"Long[Timediff]"},decayTime:{name:"decayTime",optional:!0,flag:"decay",desc:"Add a default decaying expiry time to grants sent via this template\ne.g. 60d\nThe granter can specify an expiry shorter than this value",type:"Long[Timediff]"},allowIgnore:{name:"allowIgnore",optional:!0,flag:"ignore",desc:"Do not include grants in member balances by default\nDefaults to false",type:"boolean"},repeatable_time:{name:"repeatable_time",optional:!0,flag:"repeat",desc:"If the template can be sent to the same receiver multiple times",type:"Long[Timediff]"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},project:{help:"",desc:"Create a new project grant template",annotations:{role:{value:["ECON"]}},arguments:{name:{name:"name",desc:"The name of the template\nAlphanumerical",type:"String"},allowedRecipients:{name:"allowedRecipients",desc:"A filter for nations allowed to receive this grant\nUse your alliance link for all nations\nSee: <https://github.com/xdnw/locutus/wiki/nation_placeholders>",type:"Predicate<DBNation>"},project:{name:"project",desc:"The project to grant",type:"Project"},econRole:{name:"econRole",optional:!0,flag:"e",desc:"The role that can grant this template to others\nDefaults to the ECON role (see `{prefix}role setalias`)",type:"Role"},selfRole:{name:"selfRole",optional:!0,flag:"s",desc:"The role that can grant this template to itself\nDefaults to disabled",type:"Role"},bracket:{name:"bracket",optional:!0,flag:"b",desc:"The tax bracket account to use for withdrawals\ne.g. For a growth circle\nDefaults to None\nSee: <https://github.com/xdnw/locutus/wiki/tax_automation#tax-bracket-accounts>",type:"TaxBracket"},useReceiverBracket:{name:"useReceiverBracket",optional:!0,flag:"r",desc:"If the receiver's tax bracket is used as the tax bracket account\nDefaults to false\nAlternative to `bracket`",type:"boolean"},maxTotal:{name:"maxTotal",optional:!0,flag:"mt",desc:"Global grants allowed for this template\nDefaults to unlimited",type:"Integer"},maxDay:{name:"maxDay",optional:!0,flag:"md",desc:"Grants allowed for this template per day\nDefaults to unlimited",type:"Integer"},maxGranterDay:{name:"maxGranterDay",optional:!0,flag:"mgd",desc:"Grants allowed for this template per day by the same sender\nDefaults to unlimited",type:"Integer"},maxGranterTotal:{name:"maxGranterTotal",optional:!0,flag:"mgt",desc:"Grants allowed for this template by the same sender\nDefaults to unlimited",type:"Integer"},expireTime:{name:"expireTime",optional:!0,flag:"expire",desc:"Add a default expiry time to grants sent via this template\ne.g. 60d\nThe granter can specify an expiry shorter than this value",type:"Long[Timediff]"},decayTime:{name:"decayTime",optional:!0,flag:"decay",desc:"Add a default decaying expiry time to grants sent via this template\ne.g. 60d\nThe granter can specify an expiry shorter than this value",type:"Long[Timediff]"},allowIgnore:{name:"allowIgnore",optional:!0,flag:"ignore",desc:"Do not include grants in member balances by default\nDefaults to false",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},raws:{help:"",desc:"Create a new raws grant template",annotations:{role:{value:["ECON"]}},arguments:{name:{name:"name",desc:"The name of the template\nAlphanumerical",type:"String"},allowedRecipients:{name:"allowedRecipients",desc:"A filter for nations allowed to receive this grant\nUse your alliance link for all nations\nSee: <https://github.com/xdnw/locutus/wiki/nation_placeholders>",type:"Predicate<DBNation>"},days:{name:"days",desc:"Allow disbursing raw resources to run cities for up to a number of days",type:"long"},overdrawPercent:{name:"overdrawPercent",optional:!0,flag:"o",desc:"Allow oversupply of resources by a certain percent\nDefaults to: 20 (percent)",type:"Long"},econRole:{name:"econRole",optional:!0,flag:"e",desc:"The role that can grant this template to others\nDefaults to the ECON role (see `{prefix}role setalias`)",type:"Role"},selfRole:{name:"selfRole",optional:!0,flag:"s",desc:"The role that can grant this template to itself\nDefaults to disabled",type:"Role"},bracket:{name:"bracket",optional:!0,flag:"b",desc:"The tax bracket account to use for withdrawals\ne.g. For a growth circle\nDefaults to None\nSee: <https://github.com/xdnw/locutus/wiki/tax_automation#tax-bracket-accounts>",type:"TaxBracket"},useReceiverBracket:{name:"useReceiverBracket",optional:!0,flag:"r",desc:"If the receiver's tax bracket is used as the tax bracket account\nDefaults to false\nAlternative to `bracket`",type:"boolean"},maxTotal:{name:"maxTotal",optional:!0,flag:"mt",desc:"Global grants allowed for this template\nDefaults to unlimited",type:"Integer"},maxDay:{name:"maxDay",optional:!0,flag:"md",desc:"Grants allowed for this template per day\nDefaults to unlimited",type:"Integer"},maxGranterDay:{name:"maxGranterDay",optional:!0,flag:"mgd",desc:"Grants allowed for this template per day by the same sender\nDefaults to unlimited",type:"Integer"},maxGranterTotal:{name:"maxGranterTotal",optional:!0,flag:"mgt",desc:"Grants allowed for this template by the same sender\nDefaults to unlimited",type:"Integer"},expireTime:{name:"expireTime",optional:!0,flag:"expire",desc:"Add a default expiry time to grants sent via this template\ne.g. 60d\nThe granter can specify an expiry shorter than this value",type:"Long[Timediff]"},decayTime:{name:"decayTime",optional:!0,flag:"decay",desc:"Add a default decaying expiry time to grants sent via this template\ne.g. 60d\nThe granter can specify an expiry shorter than this value",type:"Long[Timediff]"},allowIgnore:{name:"allowIgnore",optional:!0,flag:"ignore",desc:"Do not include grants in member balances by default\nDefaults to false",type:"boolean"},repeatable_time:{name:"repeatable_time",optional:!0,flag:"repeat",desc:"If the template can only sent to the same receiver once\nDefaults to 1d",type:"Long[Timediff]"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},research:{help:"",desc:"Create a new research grant template",annotations:{role:{value:["ECON"]}},arguments:{name:{name:"name",desc:"The name of the template\nAlphanumerical",type:"String"},allowedRecipients:{name:"allowedRecipients",desc:"A filter for nations allowed to receive this grant\nUse your alliance link for all nations\nSee: <https://github.com/xdnw/locutus/wiki/nation_placeholders>",type:"Predicate<DBNation>"},research:{name:"research",desc:"The project to grant",type:"Map<Research,Integer>"},from_zero:{name:"from_zero",desc:"If the research cost should be granted from 0\nInstead of the price from the receiver's current research is",type:"boolean"},econRole:{name:"econRole",optional:!0,flag:"e",desc:"The role that can grant this template to others\nDefaults to the ECON role (see `{prefix}role setalias`)",type:"Role"},selfRole:{name:"selfRole",optional:!0,flag:"s",desc:"The role that can grant this template to itself\nDefaults to disabled",type:"Role"},bracket:{name:"bracket",optional:!0,flag:"b",desc:"The tax bracket account to use for withdrawals\ne.g. For a growth circle\nDefaults to None\nSee: <https://github.com/xdnw/locutus/wiki/tax_automation#tax-bracket-accounts>",type:"TaxBracket"},useReceiverBracket:{name:"useReceiverBracket",optional:!0,flag:"r",desc:"If the receiver's tax bracket is used as the tax bracket account\nDefaults to false\nAlternative to `bracket`",type:"boolean"},maxTotal:{name:"maxTotal",optional:!0,flag:"mt",desc:"Global grants allowed for this template\nDefaults to unlimited",type:"Integer"},maxDay:{name:"maxDay",optional:!0,flag:"md",desc:"Grants allowed for this template per day\nDefaults to unlimited",type:"Integer"},maxGranterDay:{name:"maxGranterDay",optional:!0,flag:"mgd",desc:"Grants allowed for this template per day by the same sender\nDefaults to unlimited",type:"Integer"},maxGranterTotal:{name:"maxGranterTotal",optional:!0,flag:"mgt",desc:"Grants allowed for this template by the same sender\nDefaults to unlimited",type:"Integer"},expireTime:{name:"expireTime",optional:!0,flag:"expire",desc:"Add a default expiry time to grants sent via this template\ne.g. 60d\nThe granter can specify an expiry shorter than this value",type:"Long[Timediff]"},decayTime:{name:"decayTime",optional:!0,flag:"decay",desc:"Add a default decaying expiry time to grants sent via this template\ne.g. 60d\nThe granter can specify an expiry shorter than this value",type:"Long[Timediff]"},allowIgnore:{name:"allowIgnore",optional:!0,flag:"ignore",desc:"Do not include grants in member balances by default\nDefaults to false",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},warchest:{help:"",desc:"Create a new warchest grant template",annotations:{role:{value:["ECON"]}},arguments:{name:{name:"name",desc:"The name of the template\nAlphanumerical",type:"String"},allowedRecipients:{name:"allowedRecipients",desc:"A filter for nations allowed to receive this grant\nUse your alliance link for all nations\nSee: <https://github.com/xdnw/locutus/wiki/nation_placeholders>",type:"Predicate<DBNation>"},allowancePerCity:{name:"allowancePerCity",optional:!0,flag:"a",desc:"The warchest allowed to grant (per city)\nDefaults to the guild setting: `WARCHEST_PER_CITY`",type:"Map<ResourceType,Double>"},trackDays:{name:"trackDays",optional:!0,flag:"t",desc:"Allow granting warchest if they have not received it in the past number of days",type:"Long"},subtractExpenditure:{name:"subtractExpenditure",optional:!0,flag:"c",desc:"Allow granting warchest that has been consumed in war",type:"boolean"},overdrawPercent:{name:"overdrawPercent",optional:!0,flag:"o",desc:"Allow granting a certain percent above the allowance to account for unintended losses (e.g. looting)\nDefaults to 0 (percent)",type:"Long"},econRole:{name:"econRole",optional:!0,flag:"e",desc:"The role that can grant this template to others\nDefaults to the ECON role (see `{prefix}role setalias`)",type:"Role"},selfRole:{name:"selfRole",optional:!0,flag:"s",desc:"The role that can grant this template to itself\nDefaults to disabled",type:"Role"},bracket:{name:"bracket",optional:!0,flag:"b",desc:"The tax bracket account to use for withdrawals\ne.g. For a growth circle\nDefaults to None\nSee: <https://github.com/xdnw/locutus/wiki/tax_automation#tax-bracket-accounts>",type:"TaxBracket"},useReceiverBracket:{name:"useReceiverBracket",optional:!0,flag:"r",desc:"If the receiver's tax bracket is used as the tax bracket account\nDefaults to false\nAlternative to `bracket`",type:"boolean"},maxTotal:{name:"maxTotal",optional:!0,flag:"mt",desc:"Global grants allowed for this template\nDefaults to unlimited",type:"Integer"},maxDay:{name:"maxDay",optional:!0,flag:"md",desc:"Grants allowed for this template per day\nDefaults to unlimited",type:"Integer"},maxGranterDay:{name:"maxGranterDay",optional:!0,flag:"mgd",desc:"Grants allowed for this template per day by the same sender\nDefaults to unlimited",type:"Integer"},maxGranterTotal:{name:"maxGranterTotal",optional:!0,flag:"mgt",desc:"Grants allowed for this template by the same sender\nDefaults to unlimited",type:"Integer"},expireTime:{name:"expireTime",optional:!0,flag:"expire",desc:"Add a default expiry time to grants sent via this template\ne.g. 60d\nThe granter can specify an expiry shorter than this value",type:"Long[Timediff]"},decayTime:{name:"decayTime",optional:!0,flag:"decay",desc:"Add a default decaying expiry time to grants sent via this template\ne.g. 60d\nThe granter can specify an expiry shorter than this value",type:"Long[Timediff]"},allowIgnore:{name:"allowIgnore",optional:!0,flag:"ignore",desc:"Do not include grants in member balances by default\nDefaults to false",type:"boolean"},repeatable_time:{name:"repeatable_time",optional:!0,flag:"repeat",desc:"If the template can be sent to the same receiver multiple times\nDefaults to 1d",type:"Long[Timediff]"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}}},delete:{help:"",desc:"Delete a grant template",annotations:{role:{value:["ECON"]}},arguments:{template:{name:"template",type:"AGrantTemplate"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},disable:{help:"",desc:"Set an active grant template as disabled",annotations:{role:{value:["ECON"]}},arguments:{template:{name:"template",type:"AGrantTemplate"}}},enable:{help:"",desc:"Set a disabled grant template as enabled",annotations:{role:{value:["ECON"]}},arguments:{template:{name:"template",type:"AGrantTemplate"}}},info:{help:"",desc:"Full information about a grant template",annotations:{role:{value:["MEMBER"]}},arguments:{template:{name:"template",type:"AGrantTemplate"},receiver:{name:"receiver",optional:!0,desc:"View additional info related to granting the template to this nation\nSuch as cost/eligability",type:"DBNation"},value:{name:"value",optional:!0,desc:"The value to provide to the grant template\nSuch as:\n- Number (infra, land, grant, city, raws)\n- City build json (build)\n- Resources (warchest)",type:"String"},show_command:{name:"show_command",optional:!0,flag:"e",desc:"Show the command used to create this template\ni.e. If you want to copy or recreate the template",type:"boolean"}}},list:{help:"",desc:"List all grant templates for the specified category",annotations:{role:{value:["MEMBER"]}},arguments:{category:{name:"category",optional:!0,desc:"The category of templates to list\nDefaults to all categories",type:"TemplateTypes"},listDisabled:{name:"listDisabled",optional:!0,flag:"d",desc:"List the disabled grant templates",type:"boolean"}}},send:{help:"",desc:"Attempt to send a grant template to a nation if they are eligable\nReports the missing requirements if the grant cannot be sent\nYou must create templates in order to use this command\nAlternatively use the non template grant commands to send funds if you don't need access controls",arguments:{template:{name:"template",type:"AGrantTemplate"},receiver:{name:"receiver",type:"DBNation"},expire:{name:"expire",optional:!0,flag:"e",type:"Long[Timediff]"},decay:{name:"decay",optional:!0,flag:"d",type:"Long[Timediff]"},ignore:{name:"ignore",optional:!0,flag:"i",type:"Boolean"},customValue:{name:"customValue",optional:!0,flag:"p",type:"String"},escrowMode:{name:"escrowMode",optional:!0,flag:"em",type:"EscrowMode"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}}},help:{argument:{help:"",desc:"Display help information for a command argument type",arguments:{argument:{name:"argument",type:"Parser"},skipOptionalArgs:{name:"skipOptionalArgs",optional:!0,flag:"s",type:"boolean"}}},command:{help:"",desc:"Show the description, usage information and permissions for a command",arguments:{command:{name:"command",type:"ICommand"}}},find_argument:{help:"",desc:"Locate a nation placeholder you are looking for.\nUse keywords for relevant results, or ask a question.",annotations:{role:{value:["AI_COMMAND_ACCESS"]}},arguments:{search:{name:"search",type:"String"},instructions:{name:"instructions",optional:!0,type:"String"},useGPT:{name:"useGPT",optional:!0,flag:"g",type:"boolean"},numResults:{name:"numResults",optional:!0,flag:"n",type:"Integer"}}},find_command:{help:"",desc:"Locate a command you are looking for.\nUse keywords for relevant results, or ask a question.",annotations:{role:{value:["AI_COMMAND_ACCESS"]}},arguments:{search:{name:"search",type:"String"},instructions:{name:"instructions",optional:!0,type:"String"},useGPT:{name:"useGPT",optional:!0,flag:"g",type:"boolean"},numResults:{name:"numResults",optional:!0,flag:"n",type:"Integer"}}},find_nation_placeholder:{help:"",desc:"Locate a nation placeholder you are looking for.\nUse keywords for relevant results, or ask a question.",annotations:{role:{value:["AI_COMMAND_ACCESS"]}},arguments:{search:{name:"search",type:"String"},instructions:{name:"instructions",optional:!0,type:"String"},useGPT:{name:"useGPT",optional:!0,flag:"g",type:"boolean"},numResults:{name:"numResults",optional:!0,flag:"n",type:"Integer"}}},find_setting:{help:"",desc:"Locate a setting you are looking for.\nUse keywords for relevant results, or ask a question.",arguments:{query:{name:"query",type:"String"},num_results:{name:"num_results",optional:!0,type:"int",def:"5",min:1,max:25}}},moderation_check:{help:"",desc:"Check a message for moderation to see if it is flagged",arguments:{input:{name:"input",type:"String"}}},nation_placeholder:{help:"",desc:"Show the description, usage information and permissions for a nation placeholder",arguments:{command:{name:"command",type:"ICommand<DBNation>"}}}},infra:{cost:{help:"",desc:"Calculate the costs of purchasing infra (from current to max)",arguments:{currentInfra:{name:"currentInfra",type:"int",min:0,max:4e4},maxInfra:{name:"maxInfra",type:"int",min:0,max:4e4},urbanization:{name:"urbanization",optional:!0,type:"boolean",def:"false"},center_for_civil_engineering:{name:"center_for_civil_engineering",optional:!0,type:"boolean",def:"false"},advanced_engineering_corps:{name:"advanced_engineering_corps",optional:!0,type:"boolean",def:"false"},government_support_agency:{name:"government_support_agency",optional:!0,type:"boolean",def:"false"},cities:{name:"cities",optional:!0,flag:"c",type:"int",def:"1"}}},roi:{help:"",desc:"Calculate how many days it takes to ROI on the last improvement slot for a specified infra level",arguments:{city:{name:"city",type:"DBCity"},infraLevel:{name:"infraLevel",type:"int",min:600,max:3e3},continent:{name:"continent",optional:!0,flag:"c",type:"Continent"},rad_index:{name:"rad_index",optional:!0,flag:"r",type:"Double"},forceProjects:{name:"forceProjects",optional:!0,flag:"p",type:"Set<Project>"},openMarkets:{name:"openMarkets",optional:!0,flag:"d",type:"boolean"},mmr:{name:"mmr",optional:!0,flag:"m",type:"MMRInt"},land:{name:"land",optional:!0,flag:"l",type:"Double"}}}},interview:{channel:{auto_rename:{help:"",desc:"Rename channels and set their topic (if empty) in a category to match the nation registered to the user added",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF"]}},arguments:{categories:{name:"categories",type:"Set<Category>"},allow_non_members:{name:"allow_non_members",optional:!0,flag:"m",type:"boolean"},allow_vm:{name:"allow_vm",optional:!0,flag:"v",type:"boolean"},list_missing:{name:"list_missing",optional:!0,flag:"n",type:"Set<DBNation>"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}}},create:{help:"",desc:"Create an interview channel",arguments:{user:{name:"user",optional:!0,type:"User",def:"%user%"}}},iacat:{help:"",desc:"Set the discord category for an interview channel",annotations:{role:{value:["INTERNAL_AFFAIRS","INTERNAL_AFFAIRS_STAFF"],any:!0}},arguments:{category:{name:"category",type:"Category",filter:"interview.*"}}},iachannels:{help:"",desc:"List the interview channels, by category + activity",annotations:{role:{value:["INTERNAL_AFFAIRS","INTERNAL_AFFAIRS_STAFF"],any:!0}},arguments:{filter:{name:"filter",type:"String"},time:{name:"time",optional:!0,desc:"Highlight channels inactive for longer than the time specified",type:"long[Timediff]",def:"1d"}}},incentiveranking:{help:"",desc:"Ranking of nations by how many incentives they have received\nSettings: `REWARD_MENTOR` and `REWARD_REFERRAL`",annotations:{role:{value:["INTERNAL_AFFAIRS","ECON"],any:!0}},arguments:{timestamp:{name:"timestamp",type:"long[Timestamp]"}}},interviewmessage:{help:"",desc:"Send a message to the interview channels of the nations specified",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},message:{name:"message",type:"String"},pingMentee:{name:"pingMentee",optional:!0,flag:"p",type:"boolean"}}},listmentors:{help:"",desc:"List mentors, grouped by their respective mentees",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{mentors:{name:"mentors",optional:!0,type:"Set<DBNation>",def:"*"},mentees:{name:"mentees",optional:!0,type:"Set<DBNation>",def:"*"},timediff:{name:"timediff",optional:!0,desc:"Activity requirements for mentors",type:"long[Timediff]",def:"2w"},includeAudit:{name:"includeAudit",optional:!0,flag:"a",desc:"Include an audit summary with the list",type:"boolean"},ignoreUnallocatedMembers:{name:"ignoreUnallocatedMembers",optional:!0,flag:"u",desc:"Do NOT list members without a mentor",type:"boolean"},listIdleMentors:{name:"listIdleMentors",optional:!0,flag:"i",desc:"List mentors without any active mentees",type:"boolean"}}},mentee:{help:"",desc:"Assign yourself as someone's mentor",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF"]}},arguments:{mentee:{name:"mentee",type:"DBNation"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},mentor:{help:"",desc:"Assign a mentor to a mentee",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{mentor:{name:"mentor",type:"DBNation"},mentee:{name:"mentee",type:"DBNation"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},mymentees:{help:"",desc:"List mentees, grouped by their respective mentors",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{mentees:{name:"mentees",optional:!0,type:"Set<DBNation>",def:"*"},timediff:{name:"timediff",optional:!0,desc:"Activity requirements for mentors",type:"long[Timediff]",def:"2w"}}},questions:{set:{help:"",desc:"Set the interview message",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{message:{name:"message",type:"String"}}},view:{help:"",desc:"View the interview message",annotations:{role:{value:["INTERNAL_AFFAIRS","INTERNAL_AFFAIRS_STAFF"],any:!0}}}},recruitmentrankings:{help:"",desc:"Rank alliances by their new members over a timeframe\nA recruitment is when a NONE which was not a former member within the timeframe gets set to member",arguments:{cutoff:{name:"cutoff",desc:"Date to start from",type:"long[Timestamp]"},topX:{name:"topX",optional:!0,desc:"Top X alliances to show in the ranking",type:"int",def:"80",min:1,max:150},uploadFile:{name:"uploadFile",optional:!0,flag:"u",type:"boolean"}}},setreferrer:{help:"",desc:"Set yourself as the referrer for a user",annotations:{role:{value:["INTERNAL_AFFAIRS","INTERNAL_AFFAIRS_STAFF","INTERVIEWER","MENTOR","RECRUITER"],any:!0}},arguments:{user:{name:"user",type:"User"}}},setreferrerid:{help:"",desc:"Set yourself as the referrer for a user",annotations:{role:{value:["INTERNAL_AFFAIRS","INTERNAL_AFFAIRS_STAFF","INTERVIEWER","MENTOR","RECRUITER"],any:!0}},arguments:{userId:{name:"userId",type:"Long"}}},sheet:{help:"",desc:"List nations and their interview progress",annotations:{role:{value:["INTERNAL_AFFAIRS","INTERNAL_AFFAIRS_STAFF"],any:!0},isalliance:!0},arguments:{nations:{name:"nations",optional:!0,type:"Set<DBNation>"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},sortinterviews:{help:"",desc:"Sort the interview channels to an audit category\nAn appropriate discord category must exist in the form: `interview-CATEGORY`\nAllowed categories: `INACTIVE,ENTRY,RAIDS,BANK,SPIES,BUILD,COUNTERS,TEST,ARCHIVE`",annotations:{role:{value:["INTERNAL_AFFAIRS","INTERNAL_AFFAIRS_STAFF"],any:!0}},arguments:{sortCategorized:{name:"sortCategorized",optional:!0,desc:"Sort channels already in a category",type:"boolean",def:"true"}}},syncinterviews:{help:"",desc:"Force an update of all interview channels, delete unused channels and print the results",annotations:{role:{value:["INTERNAL_AFFAIRS","INTERNAL_AFFAIRS_STAFF"],any:!0}}},unassignmentee:{help:"",desc:"Unassign a mentee from all mentors",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF"]}},arguments:{mentee:{name:"mentee",type:"DBNation"}}}},invite:{help:"",desc:"Return the discord invite link for the bot"},land:{cost:{help:"",desc:"Calculate the costs of purchasing land (from current to max)",arguments:{currentLand:{name:"currentLand",type:"int",min:0,max:4e4},maxLand:{name:"maxLand",type:"int",min:0,max:4e4},rapidExpansion:{name:"rapidExpansion",optional:!0,type:"boolean",def:"false"},arable_land_agency:{name:"arable_land_agency",optional:!0,type:"boolean",def:"false"},advanced_engineering_corps:{name:"advanced_engineering_corps",optional:!0,type:"boolean",def:"false"},government_support_agency:{name:"government_support_agency",optional:!0,type:"boolean",def:"false"},cities:{name:"cities",optional:!0,flag:"c",type:"int",def:"1"}}},roi:{help:"",desc:"Calculate how many days it takes to ROI on the last 50 land for a specified level",arguments:{city:{name:"city",type:"DBCity"},landLevel:{name:"landLevel",type:"double",min:600,max:1e4},continent:{name:"continent",optional:!0,flag:"c",type:"Continent"},rad_index:{name:"rad_index",optional:!0,flag:"r",type:"Double"},forceProjects:{name:"forceProjects",optional:!0,flag:"p",type:"Set<Project>"},openMarkets:{name:"openMarkets",optional:!0,flag:"d",type:"boolean"},mmr:{name:"mmr",optional:!0,flag:"m",type:"MMRInt"},infra:{name:"infra",optional:!0,flag:"l",type:"Double"}}}},mail:{command:{help:"",desc:"Bulk send the result of a bot command to a list of nations in your alliance\nThe command will run as each user\nNations which are not registered or lack permission to use a command will result in an error\nIt is recommended to review the output sheet before confirming and sending the results",annotations:{role:{value:["ADMIN"]},isalliance:!0},arguments:{nations:{name:"nations",desc:"Nations to mail command results to",type:"Set<DBNation>"},subject:{name:"subject",type:"String"},command:{name:"command",desc:"The locutus command to run",type:"String"},body:{name:"body",desc:"Message to send along with the command result",type:"String[TextArea]"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"},sendDM:{name:"sendDM",optional:!0,flag:"d",desc:"Send as a discord direct message",type:"boolean"},skipMail:{name:"skipMail",optional:!0,flag:"m",desc:"Skip sending in-game mail\n(only valid if `sendDM` is true)",type:"boolean"}}},read:{help:"",desc:"Read and display an in-game message for an id from a nation's account\nThe nation must be your own or in the same alliance\nLogin details via `/credentials login`",annotations:{role:{value:["MAIL"]},isalliance:!0},arguments:{message_id:{name:"message_id",type:"int"},account:{name:"account",optional:!0,type:"DBNation"}}},recruit:{help:"",desc:"Test your alliance recruitment message by sending it to the bot creator's nation",annotations:{role:{value:["ADMIN"]}}},reply:{help:"",desc:"Reply to an in-game mail message\nSupports subject and body nation placeholders\nSee: <https://github.com/xdnw/locutus/wiki/nation_placeholders>",annotations:{role:{value:["MAIL"]},isalliance:!0},arguments:{receiver:{name:"receiver",desc:"The nation you are replying to",type:"DBNation"},url:{name:"url",desc:"The url of the mail",type:"String"},message:{name:"message",type:"String"},sender:{name:"sender",optional:!0,flag:"s",desc:"The account to reply with\nMust be the same account that received the mail",type:"DBNation"}}},search:{help:"",desc:"Show ingame mail and optionally the responses\nResults are in a spreadsheet\nA search term can be specified to only show messages containing that in the subject line\nBy default only unread messages are checked",annotations:{isalliance:!0},arguments:{account:{name:"account",optional:!0,desc:"The account to check the mail of\nDefaults to your own nation",type:"DBNation"},search_for:{name:"search_for",optional:!0,flag:"q",desc:"The term to search for\nDefaults to show all messages",type:"String"},skip_unread:{name:"skip_unread",optional:!0,flag:"u",desc:"Don't search unread messages\nDefaults to false",type:"boolean"},check_read:{name:"check_read",optional:!0,flag:"r",type:"boolean"},read_content:{name:"read_content",optional:!0,flag:"c",type:"boolean"},group_by_nation:{name:"group_by_nation",optional:!0,flag:"g",desc:"If responses are grouped by nation",type:"boolean"},count_replies:{name:"count_replies",optional:!0,flag:"n",desc:"If responses are counted",type:"boolean"}}},send:{help:"",desc:"Send in-game mail to a list of nations\nSupports subject and body nation placeholders\nSee: <https://github.com/xdnw/locutus/wiki/nation_placeholders>\nAppend the channel id to the subject to direct responses there:\n`Hello Nation/12345678910`\n(Note: DM Borg to setup mail responses)",arguments:{nations:{name:"nations",type:"Set<DBNation>"},subject:{name:"subject",type:"String"},message:{name:"message",type:"String[TextArea]"},force:{name:"force",optional:!0,flag:"f",type:"boolean"},sendFromGuildAccount:{name:"sendFromGuildAccount",optional:!0,flag:"l",desc:"Send from the api key registered to the guild",type:"boolean"},apiKey:{name:"apiKey",optional:!0,flag:"a",desc:"The api key to use to send the mail",type:"String"}}},sheet:{help:"",desc:"Bulk send in-game mail from a google sheet\nColumns: `nation`, `subject`, `body`\nOther bulk mail commands forward to this command",annotations:{hasapi:!0,role:{value:["ADMIN"]}},arguments:{sheet:{name:"sheet",type:"SpreadSheet"},force:{name:"force",optional:!0,flag:"f",type:"boolean"},dm:{name:"dm",optional:!0,flag:"d",type:"boolean"},skipMail:{name:"skipMail",optional:!0,flag:"m",type:"boolean"}}},targets:{help:"",desc:"Send spy or war blitz sheets to individual nations\nBlitz Sheet Columns: `nation`, `attacker 1`, `attacker 2`, `attacker 3`",groups:["Sheets","Filter Nations","Sheet Parsing","Mail Settings"],annotations:{role:{value:["MILCOM"]}},arguments:{blitzSheet:{name:"blitzSheet",optional:!0,desc:"URL of the war blitz sheet to send",group:0,type:"SpreadSheet"},spySheet:{name:"spySheet",optional:!0,desc:"URL of the spy sheet to send",group:0,type:"SpreadSheet"},useLeader:{name:"useLeader",optional:!0,flag:"l",desc:"Parse using nation leader names instead of nation names",group:0,type:"boolean"},allowedNations:{name:"allowedNations",optional:!0,desc:"Which attacker nations to send mails to (defaults to all)",group:1,type:"Set<DBNation>",def:"*"},allowedEnemies:{name:"allowedEnemies",optional:!0,desc:"Which defender nations to include in mails (defaults to all)",group:1,type:"Set<DBNation>"},header:{name:"header",optional:!0,desc:"Text to prepend to the message body",group:3,type:"String",def:""},sendFromGuildAccount:{name:"sendFromGuildAccount",optional:!0,flag:"g",desc:"Send mail from the guild's registered API key",group:3,type:"boolean"},apiKey:{name:"apiKey",optional:!0,flag:"a",desc:"Use this API key to send mails",group:3,type:"String"},hideDefaultBlurb:{name:"hideDefaultBlurb",optional:!0,flag:"b",desc:"Hide the default email blurb in the message",group:3,type:"boolean"},dm:{name:"dm",optional:!0,flag:"d",desc:"Send messages as direct Discord DMs to recipients",group:3,type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},web_login:{help:"",desc:"Mail bot web login codes to all guild members, or the nations specified",annotations:{role:{value:["ADMIN"]},isalliance:!0,hasapi:!0},arguments:{nations:{name:"nations",optional:!0,type:"Set<DBNation>"},reset_sessions:{name:"reset_sessions",optional:!0,flag:"r",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}}},me:{help:"",desc:"Get info about your own nation",arguments:{snapshotDate:{name:"snapshotDate",optional:!0,flag:"s",type:"Long[Timestamp]"}}},menu:{button:{add:{help:"",desc:"Add a labelled button to the custom discord menu set in the guild\nLeave the command empty to enter the command in the next step",annotations:{role:{value:["ADMIN"]}},arguments:{menu:{name:"menu",type:"AppMenu"},label:{name:"label",type:"String[MenuLabel]"},command:{name:"command",optional:!0,type:"String"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},remove:{help:"",desc:"Remove a button from the custom discord menu set in the guild",annotations:{role:{value:["ADMIN"]}},arguments:{menu:{name:"menu",type:"AppMenu"},label:{name:"label",type:"String[MenuLabel]"}}},rename:{help:"",desc:"Rename a button in the custom discord menu set in the guild",annotations:{role:{value:["ADMIN"]}},arguments:{menu:{name:"menu",type:"AppMenu"},label:{name:"label",type:"String[MenuLabel]"},new_label:{name:"new_label",type:"String"}}},swap:{help:"",desc:"Swap the positions of two buttons in the custom discord menu set in the guild\nLeave the second button empty to prompt for the second button (via pressing it)",annotations:{role:{value:["ADMIN"]}},arguments:{menu:{name:"menu",type:"AppMenu"},label1:{name:"label1",type:"String[MenuLabel]"},label2:{name:"label2",optional:!0,type:"String[MenuLabel]"}}}},cancel:{help:"",desc:"Cancel the current menu state and return to displaying the menu description and buttons",arguments:{menu:{name:"menu",type:"AppMenu"}}},context:{help:"",desc:"Set and display the temporary menu context for yourself\nThis determines the buttons and their actions, for editing the menu, such as removing, renaming or swapping buttons",arguments:{menu:{name:"menu",type:"AppMenu"},state:{name:"state",type:"MenuState"}}},create:{help:"",desc:"Create a new custom discord menu set in the guild",annotations:{role:{value:["ADMIN"]}},arguments:{name:{name:"name",type:"String"},description:{name:"description",type:"String"}}},delete:{help:"",desc:"Delete a custom discord menu set in the guild, with confirmation",annotations:{role:{value:["ADMIN"]}},arguments:{menu:{name:"menu",type:"AppMenu"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},description:{help:"",desc:"Set the description for a custom discord menu set in the guild",annotations:{role:{value:["ADMIN"]}},arguments:{menu:{name:"menu",type:"AppMenu"},description:{name:"description",type:"String"}}},edit:{help:"",desc:"Display the custom discord menu edit options for the guild",annotations:{role:{value:["ADMIN"]}},arguments:{menu:{name:"menu",type:"AppMenu"}}},info:{help:"",desc:"Display the information for a custom discord menu set in the guild",arguments:{menu:{name:"menu",type:"AppMenu"}}},list:{help:"",desc:"List all custom discord menus set in the guild"},open:{help:"",desc:"Open a custom saved menu for the discord guild",arguments:{menu:{name:"menu",type:"AppMenu"}}},title:{help:"",desc:"Rename a custom discord menu set in the guild",annotations:{role:{value:["ADMIN"]}},arguments:{menu:{name:"menu",type:"AppMenu"},name:{name:"name",type:"String"}}}},modal:{create:{help:"",desc:"Create a discord modal for a bot command\nThis will make a popup prompting for the command arguments you specify and submit any defaults you provide\nNote: This is intended to be used in conjuction with the card command",arguments:{command:{name:"command",type:"ICommand"},arguments:{name:"arguments",desc:"A comma separated list of the command arguments to prompt for",type:"String"},defaults:{name:"defaults",optional:!0,desc:"The default arguments and values you want to submit to the command\nExample: `myarg1:myvalue1 myarg2:myvalue2`",type:"String"}}}},nation:{turntimer:{help:"",desc:"Check how many turns are left in the city/project timer",arguments:{nation:{name:"nation",type:"DBNation"}}},beigeturns:{help:"",desc:"Return number of turns a nation has left of beige color bloc",arguments:{nation:{name:"nation",type:"DBNation"}}},canibeige:{help:"",desc:"List your wars you are allowed to beige\nAs set by this guild's configured beige policy: `ALLOWED_BEIGE_REASONS`",annotations:{role:{value:["MEMBER"]}},arguments:{nation:{name:"nation",optional:!0,desc:"The nation which is beiging\nDefaults to your own nation",type:"DBNation"}}},departures:{help:"",desc:"List the alliance rank changes of a nation or alliance members",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nationOrAlliance:{name:"nationOrAlliance",type:"NationOrAlliance"},time:{name:"time",optional:!0,desc:"Date to start from",type:"Long[Timestamp]"},filter:{name:"filter",optional:!0,desc:"Only include these nations",type:"Set<DBNation>"},ignoreInactives:{name:"ignoreInactives",optional:!0,flag:"a",desc:"Ignore inactive nations (7 days)",type:"boolean"},ignoreVM:{name:"ignoreVM",optional:!0,flag:"v",desc:"Ignore nations in vacation mode",type:"boolean"},ignoreMembers:{name:"ignoreMembers",optional:!0,flag:"m",desc:"Ignore nations currently a member of an alliance",type:"boolean"},listIds:{name:"listIds",optional:!0,flag:"i",desc:"Attach a list of all nation ids found",type:"boolean"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},history:{gray_streak:{help:"",desc:"Get the inactivity streak of a set of nations over a specified timeframe",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},daysInactive:{name:"daysInactive",type:"int"},timeframe:{name:"timeframe",type:"long[Timestamp]"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},vm:{help:"",desc:"Get the VM history of a set of nations",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}}},list:{bans:{help:"",desc:"View the list of bans for a nation id",arguments:{nationId:{name:"nationId",type:"int"}}},inactive:{help:"",desc:"Get the top inactive players",arguments:{nations:{name:"nations",type:"Set<DBNation>"},days:{name:"days",optional:!0,desc:"Required days inactive",type:"Integer",def:"7"},includeApplicants:{name:"includeApplicants",optional:!0,flag:"a",type:"boolean"},includeVacationMode:{name:"includeVacationMode",optional:!0,flag:"v",type:"boolean"},page:{name:"page",optional:!0,flag:"p",type:"Integer"}}},multi:{help:"",desc:"Check if a nation shares networks with others\nNotes:\n- Sharing networks does not mean they are the same person (mobile networks, schools, public wifi, vpns, dynamic ips\n- A network not shared 'concurrently' or within a short timeframe may be a false positive\n- Having many networks, but only a few shared may be a sign of a VPN being used (there are legitimate reasons for using a VPN)\n- It is against game rules to use evidence to threaten or coerce others\nSee: https://politicsandwar.com/rules/",arguments:{nation:{name:"nation",type:"DBNation"}}},rebuy:{help:"",desc:"Estimate a nation's rebuy time based on unit purchase history",arguments:{nation:{name:"nation",type:"DBNation"}}}},loot:{help:"",desc:"Get nation or bank loot history\nShows how much you will receive if you defeat a nation",arguments:{nationOrAlliance:{name:"nationOrAlliance",type:"NationOrAlliance"},nationScore:{name:"nationScore",optional:!0,desc:"Score of the defeated nation\ni.e. For determining bank loot percent",type:"Double"},pirate:{name:"pirate",optional:!0,flag:"p",desc:"Loot with pirate war policy\nElse: Uses your war policy",type:"boolean"}}},moneytrades:{help:"",desc:"View an accumulation of all the net money trades a nation made, grouped by nation\nMoney trades are selling resources for close to $0 or buying for very large money amounts",arguments:{nation:{name:"nation",type:"DBNation"},time:{name:"time",desc:"Date to start from",type:"long[Timestamp]"},forceUpdate:{name:"forceUpdate",optional:!0,flag:"f",type:"boolean"},addBalance:{name:"addBalance",optional:!0,flag:"a",desc:"Return a deposits add command for each grouping",type:"boolean"}}},reroll:{help:"",desc:"Check if a nation is a reroll and print their reroll date",arguments:{nation:{name:"nation",type:"DBNation"}}},revenue:{help:"",desc:"Get the revenue of nations or alliances\nEquilibrium taxrate is where the value of raws consumed matches the value taxed",arguments:{nations:{name:"nations",type:"Set<DBNation>"},includeUntaxable:{name:"includeUntaxable",optional:!0,flag:"t",desc:"Include the revenue of nations unable to be taxed",type:"boolean"},excludeNationBonus:{name:"excludeNationBonus",optional:!0,flag:"b",desc:"Exclude the new nation bonus",type:"boolean"},rad_index:{name:"rad_index",optional:!0,flag:"r",type:"Double"},forceAtWar:{name:"forceAtWar",optional:!0,flag:"w",type:"boolean"},forceAtPeace:{name:"forceAtPeace",optional:!0,flag:"p",type:"boolean"},includeWarCosts:{name:"includeWarCosts",optional:!0,flag:"c",desc:"The amount of time to use to add average DAILY war cost\nThis includes raid profit",type:"Long[Timediff]"},snapshotDate:{name:"snapshotDate",optional:!0,flag:"s",type:"Long[Timestamp]"}}},revenuesheet:{help:"",desc:"Get a sheet of nations and their revenue (compared to optimal city builds)",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"},include_untaxable:{name:"include_untaxable",optional:!0,flag:"i",type:"boolean"},snapshotTime:{name:"snapshotTime",optional:!0,flag:"t",type:"Long[Timestamp]"}}},score:{help:"",desc:"Calculate the score of various things. Each argument is option, and can go in any order",groups:["Nation Details","Military Units","Infrastructure Details","MMR Details"],arguments:{nation:{name:"nation",optional:!0,type:"DBNation"},cities:{name:"cities",optional:!0,flag:"c",desc:"Number of cities",group:0,type:"Integer"},soldiers:{name:"soldiers",optional:!0,flag:"b",desc:"Number of soldiers",group:1,type:"Integer"},tanks:{name:"tanks",optional:!0,flag:"f",desc:"Number of tanks",group:1,type:"Integer"},aircraft:{name:"aircraft",optional:!0,flag:"h",desc:"Number of aircraft",group:1,type:"Integer"},ships:{name:"ships",optional:!0,flag:"d",desc:"Number of ships",group:1,type:"Integer"},missiles:{name:"missiles",optional:!0,flag:"m",desc:"Number of missiles",group:1,type:"Integer"},nukes:{name:"nukes",optional:!0,flag:"n",desc:"Number of nukes",group:1,type:"Integer"},projects:{name:"projects",optional:!0,flag:"p",desc:"Number of projects",group:1,type:"Integer"},avg_infra:{name:"avg_infra",optional:!0,flag:"a",desc:"Average infrastructure per city",group:2,type:"Integer"},infraTotal:{name:"infraTotal",optional:!0,flag:"i",desc:"Total infrastructure",group:2,type:"Integer"},builtMMR:{name:"builtMMR",optional:!0,flag:"mmr",desc:"Unit MMR value",group:3,type:"MMRDouble"}}},set:{loot:{help:"",desc:"Set the recorded last-loot for a nation",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{nation:{name:"nation",type:"DBNation"},resources:{name:"resources",type:"Map<ResourceType,Double>"},type:{name:"type",optional:!0,type:"NationLootType",def:"ESPIONAGE"},fraction:{name:"fraction",optional:!0,type:"double",def:"1"}}},rank:{help:"",desc:"Set the in-game position of a player in the alliance.",annotations:{role:{value:["INTERNAL_AFFAIRS","INTERNAL_AFFAIRS_STAFF"],any:!0},isalliance:!0},arguments:{nation:{name:"nation",type:"DBNation"},position:{name:"position",type:"DBAlliancePosition"},force:{name:"force",optional:!0,flag:"f",type:"boolean"},doNotUpdateDiscord:{name:"doNotUpdateDiscord",optional:!0,flag:"d",desc:"Do NOT add/remove the corresponding locutus role",type:"boolean"}}},taxbracket:{help:"",desc:"List or set your tax bracket.\nNotes:\n- Internal tax rate affects what portion of taxes are not included in `/deposits check` (typically used when 100/100 taxes)\n- Set the alliance internal tax rate with: `/settings key:TAX_BASE` (retroactive)\n- This command is not retroactive and overrides the alliance internal taxrate",annotations:{role:{value:["MEMBER"]},isalliance:!0},arguments:{nations:{name:"nations",type:"Set<DBNation>",filter:"{guild_alliance_id}"},bracket:{name:"bracket",optional:!0,type:"TaxBracket"},internalTaxRate:{name:"internalTaxRate",optional:!0,type:"TaxRate"}}},taxbracketauto:{help:"",desc:"Bulk set nation tax brackets as configured in the guild setting: `REQUIRED_TAX_BRACKET`",annotations:{isalliance:!0,role:{value:["ECON_STAFF"]}},arguments:{nations:{name:"nations",optional:!0,desc:"The nations to set tax brackets for\nIf not specified, all nations in the alliance will be used",type:"Set<DBNation>"},ping:{name:"ping",optional:!0,flag:"p",desc:"Ping users if their brackets are modified",type:"boolean"}}},taxinternal:{help:"",desc:"Set nation's internal taxrate\nSee also: `/nation set taxbracket` and `/settings key:TAX_BASE`",annotations:{role:{value:["ECON"]},isalliance:!0},arguments:{nations:{name:"nations",type:"Set<DBNation>"},taxRate:{name:"taxRate",type:"TaxRate"}}},taxinternalauto:{help:"",desc:"Bulk set nation internal taxrates as configured in the guild setting: `REQUIRED_INTERNAL_TAXRATE`",annotations:{isalliance:!0,role:{value:["ECON_STAFF"]}},arguments:{nations:{name:"nations",optional:!0,desc:"The nations to set internal taxrates for\nIf not specified, all nations in the alliance will be used",type:"Set<DBNation>"},ping:{name:"ping",optional:!0,flag:"p",desc:"Ping users if their rates are modified",type:"boolean"}}}},sheet:{nationsheet:{help:"",desc:"A sheet of nations stats with customizable columns\nSee <https://github.com/xdnw/locutus/wiki/nation_placeholders> for a list of placeholders",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},columns:{name:"columns",desc:"A space separated list of columns to use in the sheet\nCan include NationAttribute as placeholders in columns\nAll NationAttribute placeholders must be surrounded by {} e.g. {nation}",type:"List<String>[TextArea]"},snapshotTime:{name:"snapshotTime",optional:!0,flag:"t",type:"Long[Timestamp]"},updateSpies:{name:"updateSpies",optional:!0,flag:"e",type:"boolean"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}}},slots:{help:"",desc:"Check how many projects slots a nation has",arguments:{nation:{name:"nation",type:"DBNation"}}},spies:{help:"",desc:"Calculate spies for a nation.\nNation argument can be nation name, id, link, or discord tag\nIf `spies-used` is provided, it will cap the odds at using that number of spies\n`safety` defaults to what has the best net. Options: quick, normal, covert",arguments:{nation:{name:"nation",type:"DBNation"},spiesUsed:{name:"spiesUsed",optional:!0,desc:"Show odds for this spy count",type:"int",def:"60"},requiredSafety:{name:"requiredSafety",optional:!0,desc:"Show odds for at least this safety level",type:"Safety"}}},stats:{inflows:{help:"",desc:"List the public resource imports or exports of a nation or alliance to other nations or alliances over a period of time",arguments:{nationOrAlliances:{name:"nationOrAlliances",type:"Set<NationOrAlliance>"},cutoffMs:{name:"cutoffMs",desc:"Date to start from",type:"long[Timestamp]"},hideInflows:{name:"hideInflows",optional:!0,flag:"i",desc:"Do not show inflows",type:"boolean"},hideOutflows:{name:"hideOutflows",optional:!0,flag:"o",desc:"Do not show outflows",type:"boolean"}}},nationranking:{help:"",desc:"Rank nations by an attribute",arguments:{nations:{name:"nations",type:"Set<DBNation>"},attribute:{name:"attribute",type:"TypedFunction<DBNation,Double>"},groupByAlliance:{name:"groupByAlliance",optional:!0,flag:"a",type:"boolean"},reverseOrder:{name:"reverseOrder",optional:!0,flag:"r",type:"boolean"},snapshotDate:{name:"snapshotDate",optional:!0,flag:"s",type:"Long[Timestamp]"},total:{name:"total",optional:!0,flag:"t",desc:"Total value instead of average per nation",type:"boolean"}}},warstatusrankingbynation:{help:"",desc:"Generate ranking of war status by Nation",arguments:{attackers:{name:"attackers",type:"Set<DBNation>"},defenders:{name:"defenders",type:"Set<DBNation>"},time:{name:"time",desc:"Date to start from",type:"long[Timestamp]"}}}},stockpile:{help:"",desc:"View the resources in a nation or alliance",annotations:{role:{value:["MEMBER"]},isalliance:!0},arguments:{nationOrAlliance:{name:"nationOrAlliance",type:"NationOrAlliance"}}},unithistory:{help:"",desc:"Get the military unit count history (dates/times) for a nation",arguments:{nation:{name:"nation",type:"DBNation"},unit:{name:"unit",type:"MilitaryUnit"},page:{name:"page",optional:!0,flag:"p",type:"Integer"}}},wars:{help:"",desc:"Show war info for a nation",arguments:{nation:{name:"nation",type:"DBNation"}}},who:{help:"",desc:"Get detailed information about a nation\nNation argument can be nation name, id, link, or discord tag\ne.g. `/who @borg`",arguments:{nationOrAlliances:{name:"nationOrAlliances",desc:"The nations to get info about",type:"Set<NationOrAlliance>"},sortBy:{name:"sortBy",optional:!0,desc:"Sort any listed nations by this attribute",type:"TypedFunction<DBNation,Double>"},list:{name:"list",optional:!0,flag:"l",desc:"List the nations instead of just providing a summary",type:"boolean"},listAlliances:{name:"listAlliances",optional:!0,flag:"a",desc:"List the alliances of the provided nation",type:"boolean"},listRawUserIds:{name:"listRawUserIds",optional:!0,flag:"r",desc:"List the discord user ids of each nation",type:"boolean"},listMentions:{name:"listMentions",optional:!0,flag:"m",desc:"List the discord user mentions of each nation",type:"boolean"},listInfo:{name:"listInfo",optional:!0,flag:"i",desc:"List paginated info of each nation",type:"boolean"},listChannels:{name:"listChannels",optional:!0,flag:"c",desc:"List all interview channels of each nation",type:"boolean"},snapshotDate:{name:"snapshotDate",optional:!0,flag:"s",type:"Long[Timestamp]"},page:{name:"page",optional:!0,flag:"p",type:"Integer"}}}},newsletter:{auto:{help:"",desc:"Setup a reminder to send a newsletter at an interval",annotations:{role:{value:["INTERNAL_AFFAIRS"]},isguild:{value:[0x95432924c420000,0x95432924c420000]}},arguments:{newsletter:{name:"newsletter",type:"Newsletter"},interval:{name:"interval",type:"long[Timediff]"},pingRole:{name:"pingRole",optional:!0,type:"Role"}}},channel:{add:{help:"",desc:"Add a channel to a newsletter",annotations:{role:{value:["INTERNAL_AFFAIRS"]},isguild:{value:[0x95432924c420000,0x95432924c420000]}},arguments:{newsletter:{name:"newsletter",type:"Newsletter"},channel:{name:"channel",type:"TextChannel"}}},remove:{help:"",desc:"Remove a channel from a newsletter",annotations:{role:{value:["INTERNAL_AFFAIRS"]},isguild:{value:[0x95432924c420000,0x95432924c420000]}},arguments:{newsletter:{name:"newsletter",type:"Newsletter"},channel:{name:"channel",type:"TextChannel"}}}},create:{help:"",desc:"Create a new newsletter with a name\nAfter creating, you need to add channels to the newsletter, and subscribe users",annotations:{role:{value:["INTERNAL_AFFAIRS"]},isguild:{value:[0x95432924c420000,0x95432924c420000]}},arguments:{name:{name:"name",type:"String"}}},delete:{help:"",desc:"Delete a newsletter",annotations:{role:{value:["INTERNAL_AFFAIRS"]},isguild:{value:[0x95432924c420000,0x95432924c420000]}},arguments:{newsletter:{name:"newsletter",type:"Newsletter"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},info:{help:"",desc:"View information about a newsletter",annotations:{isguild:{value:[0x95432924c420000,0x95432924c420000]}},arguments:{newsletter:{name:"newsletter",type:"Newsletter"},listNations:{name:"listNations",optional:!0,flag:"u",type:"boolean"}}},list:{help:"",desc:"List all newsletters",annotations:{isguild:{value:[0x95432924c420000,0x95432924c420000]}}},send:{help:"",desc:"Compile and send a newsletter to the subscribed nations\nIf no time period is specified, the newsletter will be compiled from the messages since the last compilation\nIf there is no previous compilation, the newsletter creation date will be used",annotations:{role:{value:["INTERNAL_AFFAIRS","MAIL"]},isguild:{value:[0x95432924c420000,0x95432924c420000]}},arguments:{newsletter:{name:"newsletter",type:"Newsletter"},sendSince:{name:"sendSince",optional:!0,type:"Long[Timediff]"},document:{name:"document",optional:!0,flag:"d",type:"GoogleDoc"},endDate:{name:"endDate",optional:!0,flag:"e",type:"Long"}}},subscribe:{help:"",desc:"Subscribe yourself or a set of nations to a newsletter",annotations:{isguild:{value:[0x95432924c420000,0x95432924c420000]}},arguments:{newsletter:{name:"newsletter",type:"Newsletter"},nations:{name:"nations",optional:!0,type:"Set<DBNation>"}}},unsubscribe:{help:"",desc:"Unsubscribe yourself or a set of nations from a newsletter",annotations:{isguild:{value:[0x95432924c420000,0x95432924c420000]}},arguments:{newsletter:{name:"newsletter",optional:!0,type:"Newsletter"},nations:{name:"nations",optional:!0,type:"Set<DBNation>"}}}},offshore:{accountsheet:{help:"",desc:"Compare the stockpile in the offshore alliance in-game bank to the total account balances of all offshoring alliances/guilds",annotations:{role:{value:["ECON"]},isalliance:!0},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},add:{help:"",desc:"Set the bot managed offshore for this guild\nThe alliance must use a guild with locutus settings `ALLIANCE_ID` and `API_KEY` set, and the coalitions `offshore` and `offshoring` set to include the offshore alliance",annotations:{role:{value:["ADMIN"]}},arguments:{offshoreAlliance:{name:"offshoreAlliance",type:"DBAlliance"},newAccount:{name:"newAccount",optional:!0,flag:"n",type:"boolean"},importAccount:{name:"importAccount",optional:!0,flag:"i",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},find:{for_coalition:{help:"",desc:"Find potential offshores used by an alliance\nReturns a ranking list of possible offshores by their transfer value with an alliance",arguments:{alliance:{name:"alliance",type:"DBAlliance"},cutoffMs:{name:"cutoffMs",optional:!0,type:"Long[Timestamp]"},transfer_count:{name:"transfer_count",optional:!0,flag:"c",desc:"Display the transfer count instead of value",type:"boolean"}}},for_enemies:{help:"",desc:"Return potential offshores for a list of enemy alliances\nIf allies are specified, only offshores that are not allied with any of the allies will be returned",arguments:{cutoff:{name:"cutoff",type:"long[Timestamp]"},enemiesList:{name:"enemiesList",type:"Set<DBAlliance>"},alliesList:{name:"alliesList",optional:!0,type:"Set<DBAlliance>"}}}},list:{all:{help:"",desc:"List all possible offshore alliances in the game"},prolific:{help:"",desc:"List potential offshore alliances by the value of their bank transfers to nations over a period of time",arguments:{days:{name:"days",type:"int",min:1,max:365},upload_file:{name:"upload_file",optional:!0,flag:"f",type:"boolean"}}}},markasoffshore:{help:"",desc:"Mark an alliance as the offshore of another\nThis is solely for informational purposes such as when displaying an alliance's info or militarization",arguments:{offshore:{name:"offshore",type:"DBAlliance"},parent:{name:"parent",type:"DBAlliance"}}},send:{help:"",desc:"Send the funds in the alliance bank to an alliance added to the `offshore` coalition in the bot\nOptionally specify warchest and offshoring account",groups:["Account Settings","Resource Amounts"],annotations:{role:{value:["MEMBER","ECON","ECON_STAFF"],any:!0,alliance:!0},hasoffshore:!0,isalliance:!0},arguments:{to:{name:"to",optional:!0,desc:"Specify an alternative Offshore alliance to send funds in-game to\nDefaults to the currently set offshore coalition",group:0,type:"DBAlliance"},account:{name:"account",optional:!0,desc:"Specify an alternative account to offshore with\nDefaults to the sender alliance",group:0,type:"NationOrAllianceOrGuild"},keepAmount:{name:"keepAmount",optional:!0,desc:"The amount of resources to keep in the bank\nDefaults to the `OFFSHORE_KEEP_AMOUNT` setting, else nothing",group:1,type:"Map<ResourceType,Double>"},sendAmount:{name:"sendAmount",optional:!0,desc:"Specify specific resource amounts to offshore\nDefaults to all resources\nThe send amount is auto capped by the resources available and `keepAmount`",group:1,type:"Map<ResourceType,Double>"}}},unlocktransfers:{help:"",desc:"Unlock transfers for an alliance or guild using this guild as an offshore\nAccounts are automatically locked if there is an error accessing the api, a game captcha, or if an admin of the account is banned in-game\nOnly locks from game bans persist across restarts",annotations:{role:{value:["ADMIN"]}},arguments:{nationOrAllianceOrGuild:{name:"nationOrAllianceOrGuild",optional:!0,type:"NationOrAllianceOrGuild"},unlockAll:{name:"unlockAll",optional:!0,flag:"a",type:"boolean"}}}},project:{cost:{help:"",desc:"Shows the cost of a project",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{projects:{name:"projects",type:"Set<Project>"},technologicalAdvancement:{name:"technologicalAdvancement",optional:!0,type:"boolean",def:"false"},governmentSupportAgency:{name:"governmentSupportAgency",optional:!0,type:"boolean",def:"false"},domesticAffairs:{name:"domesticAffairs",optional:!0,type:"boolean",def:"false"},nations:{name:"nations",optional:!0,flag:"n",type:"Set<DBNation>"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"},ignoreProjectSlots:{name:"ignoreProjectSlots",optional:!0,flag:"p",type:"boolean"},ignoreRequirements:{name:"ignoreRequirements",optional:!0,flag:"r",type:"boolean"},ignoreProjectCity:{name:"ignoreProjectCity",optional:!0,flag:"c",type:"boolean"}}},costsheet:{help:"",desc:"Generate csv file of project costs"},roi:{help:"",desc:"Calculate the ROI of various projects for your set of cities and infra",arguments:{nation:{name:"nation",type:"DBNation"},days:{name:"days",type:"int"},projects:{name:"projects",optional:!0,flag:"p",type:"Set<Project>"},continent:{name:"continent",optional:!0,flag:"c",type:"Continent"},rad_index:{name:"rad_index",optional:!0,flag:"r",type:"Double"},mmr:{name:"mmr",optional:!0,flag:"m",type:"MMRInt"},infra:{name:"infra",optional:!0,flag:"i",type:"Integer"},land:{name:"land",optional:!0,flag:"l",type:"Integer"}}},sheet:{help:"",desc:"Sheet of projects each nation has",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"},snapshotTime:{name:"snapshotTime",optional:!0,flag:"t",type:"Long[Timestamp]"}}},slots:{help:"",desc:"Check how many projects slots a nation has",arguments:{nation:{name:"nation",type:"DBNation"}}}},register:{help:"",desc:"Register your discord user with your Politics And War nation.",arguments:{nation:{name:"nation",type:"DBNation"}}},report:{add:{help:"",desc:"Report a nation or user's game behavior to the bot for things such as fraud\nNote: Submitting spam or maliciously false reports may result in being locked out of reporting commands",arguments:{type:{name:"type",type:"ReportType"},message:{name:"message",desc:"Description of report",type:"String[TextArea]"},nation:{name:"nation",optional:!0,desc:"Nation to report",type:"DBNation"},discord_user_id:{name:"discord_user_id",optional:!0,desc:"Discord user to report",type:"Long"},imageEvidenceUrl:{name:"imageEvidenceUrl",optional:!0,flag:"i",desc:"Image evidence of report",type:"String"},forum_post:{name:"forum_post",optional:!0,flag:"p",desc:"Link to relevant forum post",type:"String"},news_post:{name:"news_post",optional:!0,flag:"m",desc:"Link to relevant news post",type:"String"},updateReport:{name:"updateReport",optional:!0,flag:"u",type:"Report"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},analyze:{help:"",desc:"Show an analysis of a nation's risk factors including: Reports, loans, discord & game bans, money trades and proximity with blacklisted nations, multi info, user account age, inactivity predictors",arguments:{nation:{name:"nation",type:"DBNation"}}},approve:{help:"",desc:"Approve a report for a nation or user",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","INTERNAL_AFFAIRS"],root:!0,any:!0}},arguments:{report:{name:"report",type:"Report[ReportPerms]"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},ban:{help:"",desc:"Ban a nation from submitting new reports\nReports they have already submitted will remain\nUse the purge command to delete existing reports",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","INTERNAL_AFFAIRS"],root:!0,any:!0}},arguments:{nation:{name:"nation",type:"DBNation"},timestamp:{name:"timestamp",type:"long[Timestamp]"},reason:{name:"reason",type:"String"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},comment:{add:{help:"",desc:"Add a short comment to a report",arguments:{report:{name:"report",type:"Report"},comment:{name:"comment",type:"String"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},delete:{help:"",desc:"Remove a comment on a report",arguments:{report:{name:"report",type:"Report[ReportPerms]"},nationCommenting:{name:"nationCommenting",optional:!0,type:"DBNation"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},purge:{help:"",desc:"Mass delete reports about or submitted by a user or nation",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","INTERNAL_AFFAIRS"],root:!0,any:!0}},arguments:{report:{name:"report",optional:!0,flag:"r",type:"Report"},nation_id:{name:"nation_id",optional:!0,flag:"i",type:"Integer"},discord_id:{name:"discord_id",optional:!0,flag:"u",type:"Long"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}}},loan:{add:{help:"",desc:"Add a loan for a nation or alliance",annotations:{role:{value:["INTERNAL_AFFAIRS","ECON"],any:!0}},arguments:{receiver:{name:"receiver",type:"NationOrAlliance"},status:{name:"status",optional:!0,type:"Status"},overwriteLoan:{name:"overwriteLoan",optional:!0,flag:"o",type:"DBLoan[GuildLoan]"},principal:{name:"principal",optional:!0,flag:"p",type:"Map<ResourceType,Double>"},remaining:{name:"remaining",optional:!0,flag:"r",type:"Map<ResourceType,Double>"},amountPaid:{name:"amountPaid",optional:!0,flag:"c",type:"Map<ResourceType,Double>"},dueDate:{name:"dueDate",optional:!0,flag:"d",type:"Long[Timestamp]"},allianceLending:{name:"allianceLending",optional:!0,flag:"a",type:"DBAlliance"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},purge:{help:"",desc:"Delete all loan information",annotations:{role:{value:["INTERNAL_AFFAIRS","ECON"],any:!0}},arguments:{guildOrAllianceId:{name:"guildOrAllianceId",optional:!0,desc:"Purge all loans created by this guild or alliance id",type:"Long"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},remove:{help:"",desc:"Delete a loan for a nation or alliance\nNote: To delete all loans use the loan purge command",annotations:{role:{value:["INTERNAL_AFFAIRS","ECON"],any:!0}},arguments:{loan:{name:"loan",type:"DBLoan[GuildLoan]"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},sheet:{help:"",desc:"Generate a google sheet of all loan information banks and alliances have submitted\nIf no nations are provided, only the loans for this server are returned\nIf no loan status is provided, all loans are returned",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nations:{name:"nations",optional:!0,type:"Set<DBNation>"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"},loanStatus:{name:"loanStatus",optional:!0,flag:"l",type:"Set<Status>"}}},update:{help:"",desc:"Update a loan for a nation or alliance\nIf no other arguments are provided, only the last updated date will be set",annotations:{role:{value:["INTERNAL_AFFAIRS","ECON"],any:!0}},arguments:{loan:{name:"loan",type:"DBLoan[GuildLoan]"},principal:{name:"principal",optional:!0,flag:"p",type:"Map<ResourceType,Double>"},remaining:{name:"remaining",optional:!0,flag:"r",type:"Map<ResourceType,Double>"},amountPaid:{name:"amountPaid",optional:!0,flag:"c",type:"Map<ResourceType,Double>"},dueDate:{name:"dueDate",optional:!0,flag:"d",type:"Long[Timestamp]"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},update_all:{help:"",desc:"Mark all active loans by this guild as up to date\nIt is useful for loan reporting to remain accurate",annotations:{role:{value:["INTERNAL_AFFAIRS","ECON"],any:!0}},arguments:{loanStatus:{name:"loanStatus",optional:!0,type:"Set<Status>"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},upload:{help:"",desc:"Import loan report data from a google sheet\nExpects the columns: Receiver, Principal, Remaining, Status, Due Date, Loan Date, Paid, Interest\nThis is not affect member balances and is solely for sharing information with the public",annotations:{role:{value:["INTERNAL_AFFAIRS","ECON"],any:!0}},arguments:{sheet:{name:"sheet",type:"SpreadSheet"},defaultStatus:{name:"defaultStatus",optional:!0,type:"Status"},overwriteLoans:{name:"overwriteLoans",optional:!0,flag:"o",type:"boolean"},overwriteSameNation:{name:"overwriteSameNation",optional:!0,flag:"m",type:"boolean"},addLoans:{name:"addLoans",optional:!0,flag:"a",type:"boolean"}}}},purge:{help:"",desc:"Mass delete reports about or submitted by a user or nation",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","INTERNAL_AFFAIRS"],root:!0,any:!0}},arguments:{nationIdReported:{name:"nationIdReported",optional:!0,flag:"n",type:"Integer"},userIdReported:{name:"userIdReported",optional:!0,flag:"d",type:"Long"},reportingNation:{name:"reportingNation",optional:!0,flag:"i",type:"Integer"},reportingUser:{name:"reportingUser",optional:!0,flag:"u",type:"Long"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},remove:{help:"",desc:"Remove a report of a nation or user",arguments:{report:{name:"report",type:"Report[ReportPerms]"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},search:{help:"",desc:"List all reports about or submitted by a nation or user",arguments:{nationIdReported:{name:"nationIdReported",optional:!0,flag:"n",type:"Integer"},userIdReported:{name:"userIdReported",optional:!0,flag:"d",type:"Long"},reportingNation:{name:"reportingNation",optional:!0,flag:"i",type:"Integer"},reportingUser:{name:"reportingUser",optional:!0,flag:"u",type:"Long"}}},sheet:{generate:{help:"",desc:"Generate a sheet of all the community reports for players",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}}},show:{help:"",desc:"View a report and its comments",arguments:{report:{name:"report",type:"Report"}}},unban:{help:"",desc:"Remove a ban on a nation submitting new reports",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","INTERNAL_AFFAIRS"],root:!0,any:!0}},arguments:{nation:{name:"nation",type:"DBNation"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},upload:{legacy_reports:{help:"",desc:"Import the legacy sheet of reports from a google sheet\nExpects the columns: `Discord ID`, `Nation ID`, `Reason`, `Reporting Entity`",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","INTERNAL_AFFAIRS"],root:!0,any:!0}},arguments:{sheet:{name:"sheet",type:"SpreadSheet"}}}}},research:{cost:{help:"",desc:"Get the cost of a research upgrade",arguments:{end_level:{name:"end_level",type:"Map<Research,Integer>"},start_level:{name:"start_level",optional:!0,type:"Map<Research,Integer>"},military_doctrine:{name:"military_doctrine",optional:!0,type:"Boolean"}}},sheet:{help:"",desc:"Get the research sheet",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},sync:{help:"",desc:"Force update of research data",annotations:{role:{value:["ADMIN"],root:!0}},arguments:{nations:{name:"nations",type:"Set<DBNation>"}}},table:{help:"",desc:"Generate a sheet of the max research level buyable for each city cost",arguments:{research:{name:"research",type:"Set<Research>"},percent_of_city_cost:{name:"percent_of_city_cost",optional:!0,type:"Double",def:"100"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"},gov_support_agency:{name:"gov_support_agency",optional:!0,flag:"g",type:"boolean"},domestic_affairs:{name:"domestic_affairs",optional:!0,flag:"b",type:"boolean"},military_doctrine:{name:"military_doctrine",optional:!0,flag:"d",type:"boolean"}}},view_nation:{help:"",desc:"Show the research a nation has",arguments:{nation:{name:"nation",type:"DBNation"}}}},role:{addroletoallmembers:{help:"",desc:"Add a discord role to all users in a server",annotations:{role:{value:["ADMIN"]}},arguments:{role:{name:"role",type:"Role"}}},autoassign:{help:"",desc:"Add or remove the configured auto roles to all users in this discord guild",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},autorole:{help:"",desc:"Give the configured bot auto roles to a user on discord",arguments:{member:{name:"member",type:"Member"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},clearallianceroles:{help:"",desc:"Clear the bot managed alliance roles on discord\nUNUSED: `Alliance name roles which have no members`\nALLIANCE: `All alliance name roles`\nDELETED_ALLIANCES: `Alliance name roles with no valid in-game alliance`\nINACTIVE_ALLIANCES: `Alliance name roles with no active members`\nNOT_ALLOW_LISTED: `Alliance name roles not in the allow list (defined by settings:`AUTOROLE_ALLIANCES,AUTOROLE_TOP_X` and coalition:`MASKEDALLIANCES``\nNON_MEMBERS: `Users who are not in the alliance in-game`\nNON_ALLIES: `Users who are not in the alliance, or the `allies` / `offshore` coalition in-game`\n",annotations:{role:{value:["ADMIN"]}},arguments:{type:{name:"type",desc:"What role types do you want to remove",type:"ClearRolesEnum"}}},clearnicks:{help:"",desc:"Clear all nicknames on discord",annotations:{role:{value:["ADMIN"]}},arguments:{undo:{name:"undo",optional:!0,desc:"Undo the last recent use of this command",type:"Boolean"}}},hasrole:{help:"",desc:"Lists the shared servers where a user has a role.",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{user:{name:"user",type:"User"},role:{name:"role",type:"Roles"}}},mask:{help:"",desc:"Add or remove a role from a set of members on discord",annotations:{role:{value:["ADMIN"]}},arguments:{members:{name:"members",type:"Set<Member>"},role:{name:"role",type:"Role"},value:{name:"value",type:"boolean"},toggleMaskFromOthers:{name:"toggleMaskFromOthers",optional:!0,flag:"r",desc:"If the role should be added or removed from all other members\nIf `value` is true, the role will be removed, else added",type:"boolean"}}},mask_sheet:{help:"",desc:"Add or remove a role from a set of members on discord based on a spreadsheet\nBy default only roles will be added, specify `removeRoles` to remove roles from users not assigned the role in the sheet\nSpecify `listMissing` to list nations that are not assigned a role in the sheet\nColumns:\n- `nation`, `leader`, `user`, `member` (at least one)\n- `role`, `role1`, `roleN` (multiple, or use comma separated values in one cell)",annotations:{role:{value:["ADMIN"]}},arguments:{sheet:{name:"sheet",type:"SpreadSheet"},removeRoles:{name:"removeRoles",optional:!0,flag:"u",desc:"Remove these roles from users not assigned the role in the sheet",type:"Set<Role>"},removeAll:{name:"removeAll",optional:!0,flag:"ra",desc:"Remove all roles mentioned in the sheet",type:"boolean"},listMissing:{name:"listMissing",optional:!0,flag:"ln",desc:"List nations that are not assigned a role in the sheet",type:"Set<DBNation>"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},optout:{help:"",desc:"Opt out of war room relays and ia channel logging",arguments:{optOut:{name:"optOut",optional:!0,type:"boolean",def:"true"}}},removeassignablerole:{help:"",desc:"Remove a role from adding/removing specified roles\n(having manage roles perm on discord overrides this)",annotations:{role:{value:["ADMIN"]}},arguments:{requireRole:{name:"requireRole",type:"Role"},assignableRoles:{name:"assignableRoles",type:"Set<Role>"}}},setalias:{help:"",desc:"Set the discord roles the bot uses for command permissions",annotations:{role:{value:["ADMIN"]}},arguments:{locutusRole:{name:"locutusRole",optional:!0,type:"Roles"},discordRole:{name:"discordRole",optional:!0,type:"Role"},alliance:{name:"alliance",optional:!0,desc:"If the role mapping is only for a specific alliance (WIP)",type:"DBAlliance"},removeRole:{name:"removeRole",optional:!0,flag:"r",desc:"Remove the existing mapping instead of setting it",type:"boolean"}}},unregister:{help:"",desc:"Remove a discord role the bot uses for command permissions",annotations:{role:{value:["ADMIN"]}},arguments:{locutusRole:{name:"locutusRole",type:"Roles"},alliance:{name:"alliance",optional:!0,desc:"Only remove a role mapping for this alliance",type:"DBAlliance"}}}},selection_alias:{add:{alliance:{help:"",desc:"Add an alias for a selection of alliances",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{name:{name:"name",type:"String"},alliances:{name:"alliances",type:"Set<DBAlliance>"}}},attacktype:{help:"",desc:"Add an alias for a selection of attack types",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{name:{name:"name",type:"String"},attack_types:{name:"attack_types",type:"Set<AttackType>"}}},audittype:{help:"",desc:"Add an alias for a selection of Audit Types",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{name:{name:"name",type:"String"},audit_types:{name:"audit_types",type:"Set<AuditType>"}}},ban:{help:"",desc:"Add an alias for a selection of bans",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{name:{name:"name",type:"String"},bans:{name:"bans",type:"Set<DBBan>"}}},bounty:{help:"",desc:"Add an alias for a selection of bounties",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{name:{name:"name",type:"String"},bounties:{name:"bounties",type:"Set<DBBounty>"}}},building:{help:"",desc:"Add an alias for a selection of Buildings",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{name:{name:"name",type:"String"},Buildings:{name:"Buildings",type:"Set<Building>"}}},city:{help:"",desc:"Add an alias for a selection of cities",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{name:{name:"name",type:"String"},cities:{name:"cities",type:"Set<DBCity>"}}},continent:{help:"",desc:"Add an alias for a selection of continents",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{name:{name:"name",type:"String"},continents:{name:"continents",type:"Set<Continent>"}}},guild:{help:"",desc:"Add an alias for a selection of guilds",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{name:{name:"name",type:"String"},guilds:{name:"guilds",type:"Set<GuildDB>"}}},guildsetting:{help:"",desc:"Add an alias for a selection of guild settings",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{name:{name:"name",type:"String"},settings:{name:"settings",type:"Set<GuildSetting>"}}},iattack:{help:"",desc:"Add an alias for a selection of attacks",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{name:{name:"name",type:"String"},attacks:{name:"attacks",type:"Set<IAttack>"}}},militaryunit:{help:"",desc:"Add an alias for a selection of Military Units",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{name:{name:"name",type:"String"},military_units:{name:"military_units",type:"Set<MilitaryUnit>"}}},nation:{help:"",desc:"Add an alias for a selection of Nations",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{name:{name:"name",type:"String"},nations:{name:"nations",type:"Set<DBNation>"}}},nationcolor:{help:"",desc:"Add an alias for a selection of Nation Colors",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{name:{name:"name",type:"String"},colors:{name:"colors",type:"Set<NationColor>"}}},nationlist:{help:"",desc:"Add an alias for a selection of nationlists",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{name:{name:"name",type:"String"},nationlists:{name:"nationlists",type:"Set<NationList>"}}},nationoralliance:{help:"",desc:"Add an alias for a selection of NationOrAlliances",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{name:{name:"name",type:"String"},nationoralliances:{name:"nationoralliances",type:"Set<NationOrAlliance>"}}},project:{help:"",desc:"Add an alias for a selection of Projects",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{name:{name:"name",type:"String"},projects:{name:"projects",type:"Set<Project>"}}},resourcetype:{help:"",desc:"Add an alias for a selection of resources",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{name:{name:"name",type:"String"},resources:{name:"resources",type:"Set<ResourceType>"}}},taxbracket:{help:"",desc:"Add an alias for a selection of tax brackets",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{name:{name:"name",type:"String"},taxbrackets:{name:"taxbrackets",type:"Set<TaxBracket>"}}},taxdeposit:{help:"",desc:"Add an alias for a selection of tax records",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{name:{name:"name",type:"String"},taxes:{name:"taxes",type:"Set<TaxDeposit>"}}},treasure:{help:"",desc:"Add an alias for a selection of Treasures",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{name:{name:"name",type:"String"},treasures:{name:"treasures",type:"Set<DBTreasure>"}}},treaty:{help:"",desc:"Add an alias for a selection of treaties",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{name:{name:"name",type:"String"},treaties:{name:"treaties",type:"Set<Treaty>"}}},treatytype:{help:"",desc:"Add an alias for a selection of Treaty Types",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{name:{name:"name",type:"String"},treaty_types:{name:"treaty_types",type:"Set<TreatyType>"}}},user:{help:"",desc:"Add an alias for a selection of users",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{name:{name:"name",type:"String"},users:{name:"users",type:"Set<UserWrapper>"}}},war:{help:"",desc:"Add an alias for a selection of wars",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{name:{name:"name",type:"String"},wars:{name:"wars",type:"Set<DBWar>"}}}},list:{help:"",desc:"List selection aliases for this guild",arguments:{type:{name:"type",optional:!0,type:"Class[PlaceholderType]"}}},remove:{help:"",desc:"View a custom sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{selection:{name:"selection",type:"SelectionAlias"}}},rename:{help:"",desc:"Rename a selection alias",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",type:"SelectionAlias"},name:{name:"name",type:"String"}}}},self:{add:{help:"",desc:"Add discord role to a user\nSee: `/self list`",arguments:{member:{name:"member",type:"Member"},addRole:{name:"addRole",type:"Role"}}},create:{help:"",desc:"Allow a role to add/remove roles from users",annotations:{role:{value:["ADMIN"]}},arguments:{requireRole:{name:"requireRole",desc:"Require this role in order to use the specified self roles",type:"Role"},assignableRoles:{name:"assignableRoles",type:"Set<Role>"}}},list:{help:"",desc:"List the self roles that you can assign yourself via the bot"},remove:{help:"",desc:"Remove a role to a user\nSee: `/self list`",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","INTERNAL_AFFAIRS","ECON_STAFF","ECON","MILCOM","MILCOM_NO_PINGS","FOREIGN_AFFAIRS","FOREIGN_AFFAIRS_STAFF"],any:!0}},arguments:{member:{name:"member",type:"Member"},addRole:{name:"addRole",type:"Role"}}}},settings:{delete:{help:"",desc:"Delete an alliance or guild setting",annotations:{role:{value:["ADMIN","INTERNAL_AFFAIRS","ECON","MILCOM","FOREIGN_AFFAIRS"],any:!0}},arguments:{key:{name:"key",type:"GuildSetting"}}},info:{help:"",desc:"Configure any alliance or guild settings",annotations:{role:{value:["ADMIN","INTERNAL_AFFAIRS","ECON","MILCOM","FOREIGN_AFFAIRS"],any:!0}},arguments:{key:{name:"key",optional:!0,desc:"The setting to change or view",type:"GuildSetting"},value:{name:"value",optional:!0,desc:"The value to set the setting to",type:"String[TextArea]"},listAll:{name:"listAll",optional:!0,flag:"a",type:"boolean"}}},sheets:{help:"",desc:"View set or delete alliance or guild google sheets",annotations:{role:{value:["ADMIN","INTERNAL_AFFAIRS","ECON","MILCOM","FOREIGN_AFFAIRS"],any:!0}}}},settings_artificial_intelligence:{enable_github_copilot:{help:"",desc:"Enable GitHub Copilot for generating AI text responses\nSee: <https://github.com/features/copilot>\nThis is an alternative to an open ai key",annotations:{role:{value:["ADMIN"]}},arguments:{value:{name:"value",type:"boolean"}}},gpt_usage_limits:{help:"",desc:"gpt user and guild usage limits, by turn and day\nUsed to limit costs incurred from excessive usageUsage is only tracked per session, and is reset each time the bot restarts",annotations:{role:{value:["ADMIN"]}},arguments:{userTurnLimit:{name:"userTurnLimit",type:"int"},userDayLimit:{name:"userDayLimit",type:"int"},guildTurnLimit:{name:"guildTurnLimit",type:"int"},guildDayLimit:{name:"guildDayLimit",type:"int"}}},register_openai_key:{help:"",desc:"OpenAI API key\nUsed for chat responses and completion\nGet a key from: <https://platform.openai.com/account/api-keys>",annotations:{role:{value:["ADMIN"]}},arguments:{apiKey:{name:"apiKey",type:"String"}}}},settings_audit:{disabled_member_audits:{help:"",desc:"A comma separated list of audit types to ignore:\n{ GRAY,HIGH_INFRA,UNPROFITABLE_FARMS,UNEVEN_INFRA,WIND_POWER,WAR_TYPE_NOT_RAID,WAR_POLICY,INACTIVE,WRONG_COLOR }",annotations:{role:{value:["ADMIN"]}},arguments:{audits:{name:"audits",type:"Set<AutoAuditType>"}}},mail_demoted_members:{help:"",desc:"If demoted applicants should be sent an ingame mail with instructions on how to re-join the discord",annotations:{role:{value:["ADMIN"]}},arguments:{enabled:{name:"enabled",type:"boolean"}}},member_audit_alerts:{help:"",desc:"The #channel to ping members about audits",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},member_leave_alert_channel:{help:"",desc:"The channel to receive alerts when a member leaves",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},member_rebuy_infra_alert:{help:"",desc:"The channel to receive alerts when a member buys infra",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},required_mmr:{help:"",desc:"Set the required MMR based on nation criteria\nSee: <https://github.com/xdnw/locutus/wiki/nation_placeholders>\nAccepts a list of filters to the required MMR.\nIn the form:\n```\n#cities<10:505X\n#cities>=10:0250\n```\nUse `*` as the filter to match all nations.",annotations:{role:{value:["ADMIN"]}},arguments:{mmrMap:{name:"mmrMap",type:"Map<NationFilter,MMRMatcher>"}}},warchest_per_city:{help:"",desc:"Amount of warchest to recommend per city in form `{steel=1234,aluminum=5678,gasoline=69,munitions=420}`",annotations:{role:{value:["ADMIN"]}},arguments:{amount:{name:"amount",type:"Map<ResourceType,Double>"}}},addrequiredmmr:{help:"",desc:"Set the required MMR based on nation criteria\nSee: <https://github.com/xdnw/locutus/wiki/nation_placeholders>\nAccepts a list of filters to the required MMR.\nIn the form:\n```\n#cities<10:505X\n#cities>=10:0250\n```\nUse `*` as the filter to match all nations.",annotations:{role:{value:["ADMIN"]}},arguments:{filter:{name:"filter",type:"Predicate<DBNation>"},mmr:{name:"mmr",type:"MMRMatcher"}}}},settings_bank_access:{add_rss_conversion_rate:{help:"",desc:"Set the rate (as a percent of market value) each resource converts to cash\nConversion rates can be set for different nations or roles. Use `*` to apply to everyone\n- note: If a discord role is set for RESOURCE_CONVERSION, they will still need that role\nIn the form: `*:{FOOD=75, COAL=90, OIL=90, URANIUM=90, LEAD=90, IRON=90, BAUXITE=90, GASOLINE=80, MUNITIONS=80, STEEL=80, ALUMINUM=80}`\nSee: <https://github.com/xdnw/locutus/wiki/Nation_placeholders>\nA value of 75 = 75%\nSet to 0 to disable conversion for that resource\nIf no value is set for a resource it will default to 100% of weekly market average\n**It is recommended to set both a default `*` and a specific value for each resource**",annotations:{role:{value:["ADMIN"]}},arguments:{filter:{name:"filter",type:"Predicate<DBNation>"},prices:{name:"prices",type:"Map<ResourceType,Double>"}}},allow_negative_resources:{help:"",desc:"If members can withdraw resources they don't have, so long as the total value of their balance is positive.\nThis is done virtually in `/deposits check`Resources are converted using market average\nUse `#cash` as the note when depositing or transferring funds to convert to #cash",annotations:{role:{value:["ADMIN"]}},arguments:{enabled:{name:"enabled",type:"boolean"}}},allow_unverified_banking:{help:"",desc:"Allow unregistered nations to withdraw via a web banking portal",annotations:{role:{value:["ADMIN"]}},arguments:{value:{name:"value",type:"boolean"}}},banker_withdraw_limit:{help:"",desc:"The daily withdraw limit (from the offshore) of non admins",annotations:{role:{value:["ADMIN"]}},arguments:{amount:{name:"amount",type:"long"}}},banker_withdraw_limit_interval:{help:"",desc:"The time period the withdraw limit applies to (defaults to 1 day)",annotations:{role:{value:["ADMIN"]}},arguments:{timediff:{name:"timediff",type:"Long[Timediff]"}}},default_offshore_account:{help:"",desc:"The default account to offshore into via `/offshore send`",annotations:{role:{value:["ADMIN"]}},arguments:{natOrAA:{name:"natOrAA",type:"GuildOrAlliance"}}},force_rss_conversion:{help:"",desc:"If set, all allowed resources will be converted to cash at the rates set, regardless of #cash being present as a note\nThis is performed when deposits are checked, and only to new deposits\nRequires resource conversion to be enabled for the nation\nIf no RESOURCE_CONVERSION role is set, then this applies to everyone\nSee also:`/deposits convert`",annotations:{role:{value:["ADMIN"]}},arguments:{enabled:{name:"enabled",type:"boolean"}}},grant_limit_delay:{help:"",desc:"The timeframe the GRANT_TEMPLATE_LIMITS is for, which restricts max funds that a user can grant using templates over this timeframe.",annotations:{role:{value:["ADMIN"]}},arguments:{timediff:{name:"timediff",type:"Long[Timediff]"}}},member_can_escrow:{help:"",desc:"Whether members can use `/escrow withdraw` to withdraw their escrowed funds",annotations:{role:{value:["ADMIN"]}},arguments:{enabled:{name:"enabled",type:"boolean"}}},member_can_offshore:{help:"",desc:"Whether members can use `/offshore send` (true/false)",annotations:{role:{value:["ADMIN"]}},arguments:{value:{name:"value",type:"boolean"}}},member_can_withdraw:{help:"",desc:"Whether members can use `/transfer resources` or !grant` to access their own funds (true/false)",annotations:{role:{value:["ADMIN"]}},arguments:{enabled:{name:"enabled",type:"boolean"}}},member_can_withdraw_wartime:{help:"",desc:"Whether members can withdraw during wartime (true/false)",annotations:{role:{value:["ADMIN"]}},arguments:{enabled:{name:"enabled",type:"boolean"}}},non_aa_members_can_bank:{help:"",desc:"Whether nations which are a member of the alliance in-game but lack the discord roles can access member withdrawals (if enabled)",annotations:{role:{value:["ADMIN"]}},arguments:{enabled:{name:"enabled",type:"boolean"}}},offshore_keep_amount:{help:"",desc:"Amount of warchest to retain in the alliance bank when running `/offshore send`",annotations:{role:{value:["ADMIN"]}},arguments:{amount:{name:"amount",type:"Map<ResourceType,Double>"}}},public_offshoring:{help:"",desc:"Public offshores allow other alliances to see and register to use this alliance as an offshore without approval",annotations:{role:{value:["ADMIN"]}},arguments:{enabled:{name:"enabled",type:"boolean"}}},resource_conversion:{help:"",desc:"If members can convert resources to cash.\nThis is done virtually in `/deposits check`Resources are converted using market average\nUse `#cash` as the note when depositing or transferring funds",annotations:{role:{value:["ADMIN"]}},arguments:{enabled:{name:"enabled",type:"boolean"}}},route_alliance_bank:{help:"",desc:"If true, all transfers from the offshore will send via the alliance bank",annotations:{role:{value:["ADMIN"]}},arguments:{value:{name:"value",type:"boolean"}}},withdraw_ignores_expire:{help:"",desc:"Whether members's withdraw limit ignores their expiring grants (true/false)",annotations:{role:{value:["ADMIN"]}},arguments:{enabled:{name:"enabled",type:"boolean"}}},addgranttemplatelimit:{help:"",desc:"The global grant template send limits for each role, limiting how much each granter can send per interval.\nThis applies in addition to any limits set in the individual template.\nThe ECON role overrides grant template limits. See: `/role setalias`\nThe highest value for each resource will be usedFormat: `role_id:resource1,resource2,resource3`",annotations:{role:{value:["ADMIN"]}},arguments:{role:{name:"role",type:"Role"},marketValue:{name:"marketValue",type:"Double",min:1}}},addresourcechannel:{help:"",desc:"Set the resource withdrawal channel to the current channel\nDo not specify an alliance to set the default withdraw channel",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"},alliance:{name:"alliance",optional:!0,type:"DBAlliance"}}},removeresourcechannel:{help:"",desc:"The #channel for users to request resources in.\nFor multiple alliances, use the form:\n```\n#defaultChannel\nalliance1:#channel\n```\n",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},togglegrants:{help:"",desc:"The id of the member you want to add to the blacklist",annotations:{role:{value:["ECON"]}},arguments:{nation:{name:"nation",type:"DBNation"}}}},settings_bank_info:{addbalance_alert_channel:{help:"",desc:"The #channel to receive alerts when there is a large tranfer in the game or a nation VMs with resources",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},deposit_alert_channel:{help:"",desc:"The #channel to receive alerts when a nation makes a deposit (this will no longer reliably alert)",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},display_condensed_deposits:{help:"",desc:"Display deposits in a condensed format",annotations:{role:{value:["ADMIN"]}},arguments:{enabled:{name:"enabled",type:"boolean"}}},display_itemized_deposits:{help:"",desc:"Whether members's deposits are displayed by default with a breakdown of each category (true/false)",annotations:{role:{value:["ADMIN"]}},arguments:{enabled:{name:"enabled",type:"boolean"}}},grant_request_channel:{help:"",desc:"The #channel for users to request grants in. No additional functionality is added, you can setup a ticket bot or an embed there",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},grant_request_decay:{help:"",desc:"A #decay duration to apply to grant requests approved via the grant request channel",annotations:{role:{value:["ADMIN"]}},arguments:{expire:{name:"expire",type:"long[Timediff]"}}},grant_request_expire:{help:"",desc:"An #expire duration to apply to grant requests approved via the grant request channel",annotations:{role:{value:["ADMIN"]}},arguments:{expire:{name:"expire",type:"long[Timediff]"}}},grant_request_note:{help:"",desc:"The default note to apply to approved grant requests, such as `#ignore`",annotations:{role:{value:["ADMIN"]}},arguments:{bank_note:{name:"bank_note",type:"DepositType"}}},grant_request_tax_account:{help:"",desc:"Use the tax account of the nation requesting a grant for grants requested via the grant request channel",annotations:{role:{value:["ADMIN"]}},arguments:{value:{name:"value",type:"boolean"}}},large_transfers_channel:{help:"",desc:"The #channel to receive alerts e.g. for custom `!BankAlerts`",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},withdraw_alert_channel:{help:"",desc:"The #channel to receive alerts when a nation requests a transfer",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}}},settings_beige_alerts:{beige_alert_channel:{help:"",desc:"The #channel to receive alerts when a raid target leaves beige.\n`/role setalias locutusrole: BEIGE_ALERT` must also be set and have members in range",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},beige_violation_mail:{help:"",desc:"Whether to send a mail to the nation when a beige violation occurs\nDefault: False",annotations:{role:{value:["ADMIN"]}},arguments:{value:{name:"value",type:"boolean"}}},enemy_alert_channel:{help:"",desc:"The #channel to receive alerts when an enemy nation leaves beige\nRequirements for receiving alerts:\n- Must have the `BEIGE_ALERT` or `ENEMY_ALERT_OFFLINE` role\n- Be in range (score)\n- active in the past 24h- Have a free offensive war slot\n- Have at least 70% of the target's military\n- Are online, away, or DND on discord, or have the `ENEMY_ALERT_OFFLINE` role",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},enemy_alert_channel_mode:{help:"",desc:"The mode for the enemy alert channel to determine what alerts are posted and who is pinged\nOptions:\n- PING_USERS_IN_RANGE\n- PING_ROLE_IN_RANGE\n- PING_ROLE_ALL",annotations:{role:{value:["ADMIN"]}},arguments:{mode:{name:"mode",type:"EnemyAlertChannelMode"}}},enemy_alert_filter:{help:"",desc:"A filter for enemies to alert on when they leave beige\nDefaults to `#active_m<7200` (active in the past 5 days)",annotations:{role:{value:["ADMIN"]}},arguments:{filter:{name:"filter",type:"Predicate<DBNation>"}}},enemy_beiged_alert:{help:"",desc:"The #channel to receive alerts when an enemy gets beiged",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},enemy_beiged_alert_violations:{help:"",desc:"The #channel to receive alerts when an enemy gets beiged (without reason)",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},addbeigereasons:{help:"",desc:"A list of city ranges to beige reasons that are permitted.\nIn the form:\n```\nc1-9:*\nc10+:INACTIVE,VACATION_MODE,APPLICANT\n```\n Options:\n- VACATION_MODE: You can beige enemies in Vacation Mode\n- NOT_AN_ENEMY: Non enemies are not subject to beige/cycle orders\n- INACTIVE: Nations who are inactive (2 days)\n- APPLICANT: Applicants aren't subject to beige/cycle orders\n- UNDER_C10_SLOG: If the enemy has less than 10 cities\n- OFFENSIVE_WAR: War is offensive\n- ALREADY_BEIGE_STACKED: Enemies already with enough beige to rebuild (6 days)\n- NO_ENEMY_OFFENSIVE_WARS: Enemies not declaring any offensive wars\n- MISSILE_TURRET: Enemies with high number of missiles\n- NUKE_TURRET: Enemies with high numbers of nukes\n- NO_RECENT_WARS: Enemy is has not declared a war in the past 20 days\n- NO_RECENT_3_CONSECUTIVE_LOGINS: Enemy has not had 3 consecutive logins in the past 120 days\n- NO_RECENT_5_CONSECUTIVE_LOGINS: Enemy has not had 5 consecutive logins in the past 120 days\n- INCORRECT_ENEMY_MMR: Enemy does not have 5 barracks/factories\n- USELESS: Enemy has no recent wars and no recent consecutive logins OR incorrect MMR\n- BEIGE_CYCLE: If the enemy does not have beige, and two other strong nations can sit them whilst beige. DO NOT BEIGE DEFENSIVE WARS\n- BEIGE_CYCLE_4D: If the enemy does not have beige, and one other strong nation can sit them whilst beige for 4d. DO NOT BEIGE DEFENSIVE WARS\n- BEIGE_CYCLE_1: If the enemy does not have beige, and one other strong nation can sit them whilst beige for 2d. DO NOT BEIGE DEFENSIVE WARS\n- BLOCKADED: If you are being sat on/blockaded and need to restock on warchest\n- LOW_RESISTANCE: Low resistance, at risk of getting beiged (use your best judgement)\n- LOW_RESISTANCE_OFFENSIVE: Low resistance, at risk of getting beiged (use your best judgement)\n- DO_NOT_RAID: Try to peace nations that are on the Do Not Raid list\n- NO_REASON: \n\nAlso set: `/coalition create` with ENEMIES: `Enemies`",annotations:{role:{value:["ADMIN"]}},arguments:{range:{name:"range",type:"CityRanges"},reasons:{name:"reasons",type:"Set<BeigeReason>"}}},removebeigereasons:{help:"",desc:"A list of city ranges to beige reasons that are permitted.\nIn the form:\n```\nc1-9:*\nc10+:INACTIVE,VACATION_MODE,APPLICANT\n```\n Options:\n- VACATION_MODE: You can beige enemies in Vacation Mode\n- NOT_AN_ENEMY: Non enemies are not subject to beige/cycle orders\n- INACTIVE: Nations who are inactive (2 days)\n- APPLICANT: Applicants aren't subject to beige/cycle orders\n- UNDER_C10_SLOG: If the enemy has less than 10 cities\n- OFFENSIVE_WAR: War is offensive\n- ALREADY_BEIGE_STACKED: Enemies already with enough beige to rebuild (6 days)\n- NO_ENEMY_OFFENSIVE_WARS: Enemies not declaring any offensive wars\n- MISSILE_TURRET: Enemies with high number of missiles\n- NUKE_TURRET: Enemies with high numbers of nukes\n- NO_RECENT_WARS: Enemy is has not declared a war in the past 20 days\n- NO_RECENT_3_CONSECUTIVE_LOGINS: Enemy has not had 3 consecutive logins in the past 120 days\n- NO_RECENT_5_CONSECUTIVE_LOGINS: Enemy has not had 5 consecutive logins in the past 120 days\n- INCORRECT_ENEMY_MMR: Enemy does not have 5 barracks/factories\n- USELESS: Enemy has no recent wars and no recent consecutive logins OR incorrect MMR\n- BEIGE_CYCLE: If the enemy does not have beige, and two other strong nations can sit them whilst beige. DO NOT BEIGE DEFENSIVE WARS\n- BEIGE_CYCLE_4D: If the enemy does not have beige, and one other strong nation can sit them whilst beige for 4d. DO NOT BEIGE DEFENSIVE WARS\n- BEIGE_CYCLE_1: If the enemy does not have beige, and one other strong nation can sit them whilst beige for 2d. DO NOT BEIGE DEFENSIVE WARS\n- BLOCKADED: If you are being sat on/blockaded and need to restock on warchest\n- LOW_RESISTANCE: Low resistance, at risk of getting beiged (use your best judgement)\n- LOW_RESISTANCE_OFFENSIVE: Low resistance, at risk of getting beiged (use your best judgement)\n- DO_NOT_RAID: Try to peace nations that are on the Do Not Raid list\n- NO_REASON: \n\nAlso set: `/coalition create` with ENEMIES: `Enemies`",annotations:{role:{value:["ADMIN"]}},arguments:{range:{name:"range",type:"CityRanges"}}},setbeigereasons:{help:"",desc:"A list of city ranges to beige reasons that are permitted.\nIn the form:\n```\nc1-9:*\nc10+:INACTIVE,VACATION_MODE,APPLICANT\n```\n Options:\n- VACATION_MODE: You can beige enemies in Vacation Mode\n- NOT_AN_ENEMY: Non enemies are not subject to beige/cycle orders\n- INACTIVE: Nations who are inactive (2 days)\n- APPLICANT: Applicants aren't subject to beige/cycle orders\n- UNDER_C10_SLOG: If the enemy has less than 10 cities\n- OFFENSIVE_WAR: War is offensive\n- ALREADY_BEIGE_STACKED: Enemies already with enough beige to rebuild (6 days)\n- NO_ENEMY_OFFENSIVE_WARS: Enemies not declaring any offensive wars\n- MISSILE_TURRET: Enemies with high number of missiles\n- NUKE_TURRET: Enemies with high numbers of nukes\n- NO_RECENT_WARS: Enemy is has not declared a war in the past 20 days\n- NO_RECENT_3_CONSECUTIVE_LOGINS: Enemy has not had 3 consecutive logins in the past 120 days\n- NO_RECENT_5_CONSECUTIVE_LOGINS: Enemy has not had 5 consecutive logins in the past 120 days\n- INCORRECT_ENEMY_MMR: Enemy does not have 5 barracks/factories\n- USELESS: Enemy has no recent wars and no recent consecutive logins OR incorrect MMR\n- BEIGE_CYCLE: If the enemy does not have beige, and two other strong nations can sit them whilst beige. DO NOT BEIGE DEFENSIVE WARS\n- BEIGE_CYCLE_4D: If the enemy does not have beige, and one other strong nation can sit them whilst beige for 4d. DO NOT BEIGE DEFENSIVE WARS\n- BEIGE_CYCLE_1: If the enemy does not have beige, and one other strong nation can sit them whilst beige for 2d. DO NOT BEIGE DEFENSIVE WARS\n- BLOCKADED: If you are being sat on/blockaded and need to restock on warchest\n- LOW_RESISTANCE: Low resistance, at risk of getting beiged (use your best judgement)\n- LOW_RESISTANCE_OFFENSIVE: Low resistance, at risk of getting beiged (use your best judgement)\n- DO_NOT_RAID: Try to peace nations that are on the Do Not Raid list\n- NO_REASON: \n\nAlso set: `/coalition create` with ENEMIES: `Enemies`",annotations:{role:{value:["ADMIN"]}},arguments:{reasons:{name:"reasons",type:"Map<CityRanges,Set<BeigeReason>>"}}}},settings_bounty:{bounty_alert_channel:{help:"",desc:"The channel to receive alerts when a bounty is placed",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},treasure_alert_channel:{help:"",desc:"The channel to receive alerts when a treasure moves to another nation or is about to reset",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}}},settings_default:{delegate_server:{help:"",desc:"The guild to delegate unset settings to",annotations:{role:{value:["ADMIN"]}},arguments:{guild:{name:"guild",type:"Guild"}}},hide_legacy_notice:{help:"",desc:"If the notice about legacy message commands is hidden in the server",annotations:{role:{value:["ADMIN"]}},arguments:{value:{name:"value",type:"boolean"}}},registeralliance:{help:"",desc:"Your alliance id",annotations:{role:{value:["ADMIN"]}},arguments:{alliances:{name:"alliances",type:"Set<DBAlliance>"}}},registerapikey:{help:"",desc:"API key found at the bottom of: <https://test.politicsandwar.com/account/>\nBe sure to enable all access you wish the bot to have, and have a sufficient position in-game (e.g. leader)\nNeeded for alliance functions and information access, such as calculating resource dispersal, sending mail\n![Api Key Example](https://github.com/xdnw/locutus/blob/master/src/main/resources/img/api_key.png?raw=true)",annotations:{role:{value:["ADMIN"]}},arguments:{apiKeys:{name:"apiKeys",type:"List<String>[TextArea]"}}},unregisteralliance:{help:"",desc:"Your alliance id",annotations:{role:{value:["ADMIN"]}},arguments:{alliances:{name:"alliances",type:"Set<DBAlliance>"}}}},settings_foreign_affairs:{alliance_create_alerts:{help:"",desc:"The #channel to receive alerts for alliance creation",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},do_not_raid_top_x:{help:"",desc:"The number of top alliances to include in the Do Not Raid (DNR) list\nMembers are not permitted to declare on members of these alliances or their direct allies\nResults in the DNR will be excluded from commands, and will alert Foreign Affairs if violated\nDefaults to `0`",annotations:{role:{value:["ADMIN"]}},arguments:{topAllianceScore:{name:"topAllianceScore",type:"Integer"}}},embassy_category:{help:"",desc:"The name or id of the CATEGORY you would like embassy channels created in (for `/embassy`)",annotations:{role:{value:["ADMIN"]}},arguments:{category:{name:"category",type:"Category"}}},fa_server:{help:"",desc:"The guild to defer coalitions to",annotations:{role:{value:["ADMIN"]}},arguments:{guild:{name:"guild",type:"Guild"}}},treaty_alerts:{help:"",desc:"The #channel to receive alerts for treaty changes",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}}},settings_interview:{archive_category:{help:"",desc:"The name or id of the CATEGORY you would like `/channel close current` to move channels to",annotations:{role:{value:["ADMIN"]}},arguments:{category:{name:"category",type:"Category"}}},interview_category:{help:"",desc:"The name or id of the CATEGORY you would like to use for new interviews",annotations:{role:{value:["ADMIN"]}},arguments:{category:{name:"category",type:"Category"}}},interview_info_spam:{help:"",desc:"The channel to receive info spam about expired interview channels",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},interview_pending_alerts:{help:"",desc:"The channel to receive alerts when a member requests an interview",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}}},settings_orbis_alerts:{aa_ground_top_x:{help:"",desc:"Only do alliance ground unit alerts for the top X alliances (by active member score)",annotations:{role:{value:["ADMIN"]}},arguments:{topX:{name:"topX",type:"int"}}},aa_ground_unit_alerts:{help:"",desc:"The channel to send alerts when alliance ground units increase by more than 2.5%\nSee also setting `AA_GROUND_TOP_X` and coalition: `GROUND_ALERTS` and role alias: `GROUND_MILITARIZE_ALERT`",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},activity_alerts:{help:"",desc:"The #channel to receive alerts for activity (e.g. pre blitz)",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},alliance_exodus_top_x:{help:"",desc:"The rank threshold to post exodus alerts for",annotations:{role:{value:["ADMIN"]}},arguments:{rank:{name:"rank",type:"int"}}},ban_alert_channel:{help:"",desc:"The channel to receive alerts when any nation in the game is banned)",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},deletion_alert_channel:{help:"",desc:"The channel to receive alerts when any nation in the game deletes",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},escalation_alerts:{help:"",desc:"The #channel to receive alerts for war escalation alerts in orbis",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},orbis_alliance_exodus_alerts:{help:"",desc:"The #channel to receive alerts when multiple 5+ members leave an alliance\nSee also: `/settings_orbis_alerts alliance_exodus_top_x`",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},orbis_leader_change_alert:{help:"",desc:"The #channel to receive alerts when a nation is promoted to leader in an alliance (top 80)",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},orbis_officer_leave_alerts:{help:"",desc:"The #channel to receive alerts when officers leave an alliance  (top 50)",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},orbis_officer_mmr_change_alerts:{help:"",desc:"The #channel to receive alerts when gov members increase MMR (top 80)",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},report_alert_channel:{help:"",desc:"The channel to receive alerts when any nation or user is reported to the bot\nSee `/report add`",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},reroll_alert_channel:{help:"",desc:"The #channel to receive alerts for nation rerolls",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},vm_alert_channel:{help:"",desc:"The #channel to receive alerts when a nation goes into VM",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}}},settings_recruit:{mail_new_applicants:{help:"",desc:"If new applicants are sent an ingame mail with instructions on how to join the discord",annotations:{role:{value:["ADMIN"]}},arguments:{enabled:{name:"enabled",type:"boolean"}}},mail_new_applicants_text:{help:"",desc:"The message to send to new applicants via in-game mail.\nSupports nation placeholders, see: <https://github.com/xdnw/locutus/wiki/nation_placeholders>",annotations:{role:{value:["ADMIN"]}},arguments:{message:{name:"message",type:"String"}}},recruit_message_content:{help:"",desc:"The recruit message body\nMust also set `/settings_recruit recruit_message_output`",annotations:{role:{value:["ADMIN"]}},arguments:{message:{name:"message",type:"String"}}},recruit_message_delay:{help:"",desc:"The amount of time to delay recruitment messages by",annotations:{role:{value:["ADMIN"]}},arguments:{timediff:{name:"timediff",type:"Long[Timediff]"}}},recruit_message_output:{help:"",desc:"The #channel to receive recruitment message output",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},recruit_message_subject:{help:"",desc:"The recruit message subject\nMust also set `/settings_recruit recruit_message_content`",annotations:{role:{value:["ADMIN"]}},arguments:{value:{name:"value",type:"String"}}},add_timed_message:{help:"",desc:"Add a timed message to be sent to new members after a delay\n- CREATION\n - When a nation is created\n - Messages will not send to nations that are inactive, or created before the message was created\n- MEMBER_DEPARTURE\n - When an applicant or member (but not officer) leaves an alliance\n - Messages will not send if another message has been sent recently, if the nation is inactive, or it was created recently\n- GRAVEYARD_ACTIVE\n - When a nation not part of a functioning alliance becomes active\n - Nations must be inactive for at least the time specified to be sent the custom messageMessages will not send if another message has been sent recently\n\nNote: If multiple messages qualify, only the last one will be sent. This task runs every 5 minutes",annotations:{role:{value:["ADMIN"]}},arguments:{timeDelay:{name:"timeDelay",type:"long[Timediff]"},subject:{name:"subject",type:"String"},message:{name:"message",type:"String"},trigger:{name:"trigger",optional:!0,flag:"t",type:"MessageTrigger",def:"CREATION"}}},remove_timed_message:{help:"",desc:"Remove a timed message with a specific time-delay for a trigger",annotations:{role:{value:["ADMIN"]}},arguments:{trigger:{name:"trigger",desc:"The type of message to remove\nThe default type is `CREATION`",type:"MessageTrigger"},timeDelay:{name:"timeDelay",desc:"The time delay of the message to remove",type:"long[Timediff]"}}}},settings_reward:{reward_mentor:{help:"",desc:"The reward (resources) for mentoring a nation in the form `{food=1,money=3.2}`",annotations:{role:{value:["ADMIN"]}},arguments:{amount:{name:"amount",type:"Map<ResourceType,Double>"}}},reward_referral:{help:"",desc:"The reward (resources) for referring a nation in the form `{food=1,money=3.2}`",annotations:{role:{value:["ADMIN"]}},arguments:{amount:{name:"amount",type:"Map<ResourceType,Double>"}}}},settings_role:{assignable_roles:{help:"",desc:"Map roles that can be assigned (or removed). See `/self create` `/role removeassignablerole` `/self add` `/self remove`",annotations:{role:{value:["ADMIN"]}},arguments:{value:{name:"value",type:"Map<Role,Set<Role>>"}}},autonick:{help:"",desc:"Options: { FALSE,LEADER,NATION,DISCORD,NICKNAME }\nSee also: `/role clearnicks`",annotations:{role:{value:["ADMIN"]}},arguments:{mode:{name:"mode",type:"AutoNickOption"}}},autorole_alliances:{help:"",desc:"Options: { FALSE,ALL,ALLIES }\nSee also:\n- `/coalition create coalitionname: MASKEDALLIANCES`\n- `/role clearallianceroles`\n- `/settings_role autorole_alliance_rank`\n- `/settings_role autorole_member_apps`\n- `/settings_role autorole_top_x`",annotations:{role:{value:["ADMIN"]}},arguments:{mode:{name:"mode",type:"AutoRoleOption"}}},autorole_alliance_rank:{help:"",desc:"The ingame rank required to get an alliance role.\nDefault: member\nOptions: { LEADER,HEIR,OFFICER,MEMBER,APPLICANT,REMOVE,BAN,UNBAN,INVITE,UNINVITE }",annotations:{role:{value:["ADMIN"]}},arguments:{allianceRank:{name:"allianceRank",type:"Rank"}}},autorole_ally_gov:{help:"",desc:"Whether to give gov/member roles to allies (this is intended for coalition servers), `true` or `false`",annotations:{role:{value:["ADMIN"]}},arguments:{enabled:{name:"enabled",type:"boolean"}}},autorole_ally_roles:{help:"",desc:"List of roles to autorole from ally servers\n(this is intended for coalition servers to give gov roles to allies)",annotations:{role:{value:["ADMIN"]}},arguments:{roles:{name:"roles",type:"Set<Roles>"}}},autorole_member_apps:{help:"",desc:"Whether member and applicant roles are automatically added or removed.\nNote: Set `WAR_ALERT_FOR_OFFSHORES` to false to not give member roles to offshore nations\nCannot be used in conjuction with `AUTOROLE_ALLY_GOV`",annotations:{role:{value:["ADMIN"]}},arguments:{enabled:{name:"enabled",type:"boolean"}}},autorole_top_x:{help:"",desc:"The number of top alliances to provide roles for, defaults to `0`\nAlliances added to `MASKEDALLIANCES: `Additional alliances to mask with `/role autoassign` (if alliance masking is enabled)`` are still included outside this range",annotations:{role:{value:["ADMIN"]}},arguments:{topScoreRank:{name:"topScoreRank",type:"Integer"}}},conditional_roles:{help:"",desc:"Auto assign roles based on conditions\nSee: <https://github.com/xdnw/locutus/wiki/nation_placeholders>\nAccepts a list of filters to a role.\nIn the form:\n```\n#cities<10:@someRole\n#cities>=10:@otherRole\n```\nUse `*` as the filter to match all nations.\nOnly alliance members can be given roles\nUse `/role autoassign` to auto assign",annotations:{role:{value:["ADMIN"]}},arguments:{roleMap:{name:"roleMap",type:"Map<NationFilter,Role>"}}},addassignablerole:{help:"",desc:"Map roles that can be assigned (or removed). See `/self create` `/role removeassignablerole` `/self add` `/self remove`",annotations:{role:{value:["ADMIN"]}},arguments:{role:{name:"role",type:"Role"},roles:{name:"roles",type:"Set<Role>"}}},addconditionalrole:{help:"",desc:"Auto assign roles based on conditions\nSee: <https://github.com/xdnw/locutus/wiki/nation_placeholders>\nAccepts a list of filters to a role.\nIn the form:\n```\n#cities<10:@someRole\n#cities>=10:@otherRole\n```\nUse `*` as the filter to match all nations.\nOnly alliance members can be given roles\nUse `/role autoassign` to auto assign",annotations:{role:{value:["ADMIN"]}},arguments:{filter:{name:"filter",type:"Predicate<DBNation>"},role:{name:"role",type:"Role"}}}},settings_sheet:{list:{help:"",desc:"List the sheet keys in use",annotations:{role:{value:["ADMIN"]}}},set:{help:"",desc:"Set the url used for a sheet key",annotations:{role:{value:["ADMIN"]}},arguments:{key:{name:"key",type:"SheetKey"},sheetId:{name:"sheetId",type:"String"},tab:{name:"tab",optional:!0,type:"String"}}}},settings_tax:{allowed_tax_brackets:{help:"",desc:"The tax bracket ids allowed to be set by members, if enabled ",annotations:{role:{value:["ADMIN"]}},arguments:{brackets:{name:"brackets",type:"Set<TaxBracket>"}}},member_can_set_bracket:{help:"",desc:"Whether members can use `/nation set taxbracket`",annotations:{role:{value:["ADMIN"]}},arguments:{value:{name:"value",type:"boolean"}}},required_internal_taxrate:{help:"",desc:"This setting maps nation filters to internal tax rate for bulk automation.\nTo list nations current rates: `/tax listbracketauto`\nTo bulk move nations: `/nation set taxinternalauto`\nTax rate is in the form: `money/rss`\nIn the form: \n```\n#cities<10:100/100\n#cities>=10:25/25\n```\nAll nation filters are supported (e.g. roles)\nPriority is first to last (so put defaults at the bottom)",annotations:{role:{value:["ADMIN"]}},arguments:{value:{name:"value",type:"Map<NationFilter,TaxRate>"}}},required_tax_bracket:{help:"",desc:"This setting maps nation filters to tax bracket for bulk automation.\nTo list nations current rates: `/tax listbracketauto`\nTo bulk move nations: `/nation set taxbracketauto`\nIn the form: \n```\n#cities<10:1234\n#cities>=10:2345\n```\nAll nation filters are supported (e.g. roles)\nPriority is first to last (so put defaults at the bottom)",annotations:{role:{value:["ADMIN"]}},arguments:{brackets:{name:"brackets",type:"Map<NationFilter,Integer>"}}},tax_base:{help:"",desc:"The internal tax amount ($/rss) in the format e.g. `25/25` to be excluded in deposits.\nDefaults to `100/100` (i.e. no taxes are included in depos).\nSetting is retroactive. See also: `/nation set taxinternal`",annotations:{role:{value:["ADMIN"]}},arguments:{taxRate:{name:"taxRate",type:"TaxRate"}}},addrequiredbracket:{help:"",desc:"This setting maps nation filters to tax bracket for bulk automation.\nTo list nations current rates: `/tax listbracketauto`\nTo bulk move nations: `/nation set taxbracketauto`\nIn the form: \n```\n#cities<10:1234\n#cities>=10:2345\n```\nAll nation filters are supported (e.g. roles)\nPriority is first to last (so put defaults at the bottom)",annotations:{role:{value:["ADMIN"]}},arguments:{filter:{name:"filter",type:"Predicate<DBNation>"},bracket:{name:"bracket",type:"TaxBracket"}}},addrequiredinternaltaxrate:{help:"",desc:"This setting maps nation filters to internal tax rate for bulk automation.\nTo list nations current rates: `/tax listbracketauto`\nTo bulk move nations: `/nation set taxinternalauto`\nTax rate is in the form: `money/rss`\nIn the form: \n```\n#cities<10:100/100\n#cities>=10:25/25\n```\nAll nation filters are supported (e.g. roles)\nPriority is first to last (so put defaults at the bottom)",annotations:{role:{value:["ADMIN"]}},arguments:{filter:{name:"filter",type:"Predicate<DBNation>"},bracket:{name:"bracket",type:"TaxRate"}}}},settings_trade:{trade_alert_channel:{help:"",desc:"The #channel to receive alerts for trades",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}}},settings_war_alerts:{blockaded_alerts:{help:"",desc:"The #channel to receive alerts for blockades",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},defense_war_channel:{help:"",desc:"The #channel to receive alerts for defensive wars\nMembers and `MILCOM` are pinged for defensive wars\nTo set the `MILCOM` role, see: `/role setalias locutusrole: MILCOM discordrole: `",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},enemy_mmr_change_alerts:{help:"",desc:"The #channel to receive alerts when a member in `enemies` coalitions changes MMR",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},espionage_alert_channel:{help:"",desc:"The channel to get alerts when a member has their units spied successfully",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},hide_applicant_wars:{help:"",desc:"Whether to hide war alerts for applicants",annotations:{role:{value:["ADMIN"]}},arguments:{value:{name:"value",type:"boolean"}}},lost_war_channel:{help:"",desc:"The #channel to post wars when our side loses a war",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},mention_milcom_counters:{help:"",desc:"If the MILCOM role is pinged for defensive wars that are counters",annotations:{role:{value:["ADMIN"]}},arguments:{value:{name:"value",type:"boolean"}}},mention_milcom_filter:{help:"",desc:"A nation filter to apply to limit what wars milcom gets pinged for. ",annotations:{role:{value:["ADMIN"]}},arguments:{value:{name:"value",type:"Predicate<DBNation>"}}},offensive_war_channel:{help:"",desc:"The #channel to receive alerts for offensive wars\nMembers and `FOREIGN_AFFAIRS` role are pinged for Do Not Raid (DNR) violations\nTo set the `FOREIGN_AFFAIRS` role, see: `/role setalias locutusrole: FOREIGN_AFFAIRS discordrole: `\nWars against inactive nones do not create alerts",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},show_ally_defensive_wars:{help:"",desc:"Whether to show defensive war alerts for allies (true/false)",annotations:{role:{value:["ADMIN"]}},arguments:{enabled:{name:"enabled",type:"boolean"}}},show_ally_offensive_wars:{help:"",desc:"Whether to show offensive war alerts for allies (true/false)",annotations:{role:{value:["ADMIN"]}},arguments:{enabled:{name:"enabled",type:"boolean"}}},unblockaded_alerts:{help:"",desc:"The #channel to receive alerts for unblockades",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},unblockade_requests:{help:"",desc:"The #channel to receive alerts for unblockade requests",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},war_alert_for_offshores:{help:"",desc:"Whether to do war alerts for offshore alliances",annotations:{role:{value:["ADMIN"]}},arguments:{enabled:{name:"enabled",type:"boolean"}}},war_peace_alerts:{help:"",desc:"The #channel to receive alerts for changes to any war peace offers",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},war_room_filter:{help:"",desc:"A an additional filter to limit which nations are allowed for a war room.\nWar rooms are only created and maintained when attacker and defender match this filter\n",annotations:{role:{value:["ADMIN"]}},arguments:{value:{name:"value",type:"Predicate<DBNation>"}}},won_war_channel:{help:"",desc:"The #channel to post wars when our side wins a war (only includes actives)",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}}},settings_war_room:{enable_war_rooms:{help:"",desc:"If war rooms should be enabled (i.e. auto generate a channel for wars against active nations)\nNote: Defensive war channels must be enabled to have auto war room creation",annotations:{role:{value:["ADMIN"]}},arguments:{enabled:{name:"enabled",type:"boolean"}}},war_room_log:{help:"",desc:"The #channel to post creation and deletion of war rooms in",annotations:{role:{value:["ADMIN"]}},arguments:{channel:{name:"channel",type:"TextChannel"}}},war_server:{help:"",desc:"The guild to defer war rooms to",annotations:{role:{value:["ADMIN"]}},arguments:{guild:{name:"guild",type:"Guild"}}}},sheet_custom:{add_tab:{help:"",desc:"Add a tab to a custom sheet\nTabs are named and are comprised of a selection alias (rows) and a sheet template (columns)\nYou must create a selection alias and sheet template first\nSheets must be generated/updated with the update command",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",type:"CustomSheet"},tabName:{name:"tabName",type:"String"},select:{name:"select",type:"SelectionAlias"},columns:{name:"columns",type:"SheetTemplate"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},auto:{help:"",desc:"Generate or update a spreadsheet from a url\nEach tab must be a valid selection, prefixed by the type e.g. `nation:*`\nThe first row must have placeholders in each column, such as `{nation}` `{cities}` `{score}`",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","INTERNAL_AFFAIRS","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",type:"SpreadSheet"},saveSheet:{name:"saveSheet",optional:!0,flag:"s",type:"boolean"}}},from_file:{help:"",desc:"Reads a CSV file from a discord message attachment and updates the provided Google Sheet\nThe sheet must be in a valid TSV or CSV format, with the header row as the first row\nSpecify the index of the attachment if there are multiple attachments",arguments:{message:{name:"message",type:"Message"},sheet:{name:"sheet",type:"SpreadSheet"},index:{name:"index",optional:!0,flag:"i",type:"Integer"}}},list:{help:"",desc:"List custom sheets for this guild",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}}},remove_tab:{help:"",desc:"Unregister a tab from a custom sheet\nThe tab wont be deleted from the google sheet, but it will no longer be updated. You may manually delete it from the google sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",type:"CustomSheet"},tabName:{name:"tabName",type:"String"}}},update:{help:"",desc:"Update the tabs in a custom sheet and return the url\nA sheet update may produce errors if a selection is no longer valid\nTabs in the google sheet which aren't registered will be ignored",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",type:"CustomSheet"}}},view:{help:"",desc:"Get the google sheet url and view the tabs for a custom sheet, and their respective selection alias (rows) and sheet template (columns)",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",type:"CustomSheet"}}}},sheet_template:{add:{alliance:{help:"",desc:"Add columns to a Alliance sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SheetTemplate"},a:{name:"a",optional:!0,type:"TypedFunction<DBAlliance,String>"},b:{name:"b",optional:!0,type:"TypedFunction<DBAlliance,String>"},c:{name:"c",optional:!0,type:"TypedFunction<DBAlliance,String>"},d:{name:"d",optional:!0,type:"TypedFunction<DBAlliance,String>"},e:{name:"e",optional:!0,type:"TypedFunction<DBAlliance,String>"},f:{name:"f",optional:!0,type:"TypedFunction<DBAlliance,String>"},g:{name:"g",optional:!0,type:"TypedFunction<DBAlliance,String>"},h:{name:"h",optional:!0,type:"TypedFunction<DBAlliance,String>"},i:{name:"i",optional:!0,type:"TypedFunction<DBAlliance,String>"},j:{name:"j",optional:!0,type:"TypedFunction<DBAlliance,String>"},k:{name:"k",optional:!0,type:"TypedFunction<DBAlliance,String>"},l:{name:"l",optional:!0,type:"TypedFunction<DBAlliance,String>"},m:{name:"m",optional:!0,type:"TypedFunction<DBAlliance,String>"},n:{name:"n",optional:!0,type:"TypedFunction<DBAlliance,String>"},o:{name:"o",optional:!0,type:"TypedFunction<DBAlliance,String>"},p:{name:"p",optional:!0,type:"TypedFunction<DBAlliance,String>"},q:{name:"q",optional:!0,type:"TypedFunction<DBAlliance,String>"},r:{name:"r",optional:!0,type:"TypedFunction<DBAlliance,String>"},s:{name:"s",optional:!0,type:"TypedFunction<DBAlliance,String>"},t:{name:"t",optional:!0,type:"TypedFunction<DBAlliance,String>"},u:{name:"u",optional:!0,type:"TypedFunction<DBAlliance,String>"},v:{name:"v",optional:!0,type:"TypedFunction<DBAlliance,String>"},w:{name:"w",optional:!0,type:"TypedFunction<DBAlliance,String>"},x:{name:"x",optional:!0,type:"TypedFunction<DBAlliance,String>"}}},attacktype:{help:"",desc:"Add columns to a AttackType sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SheetTemplate"},a:{name:"a",optional:!0,type:"TypedFunction<AttackType,String>"},b:{name:"b",optional:!0,type:"TypedFunction<AttackType,String>"},c:{name:"c",optional:!0,type:"TypedFunction<AttackType,String>"},d:{name:"d",optional:!0,type:"TypedFunction<AttackType,String>"},e:{name:"e",optional:!0,type:"TypedFunction<AttackType,String>"},f:{name:"f",optional:!0,type:"TypedFunction<AttackType,String>"},g:{name:"g",optional:!0,type:"TypedFunction<AttackType,String>"},h:{name:"h",optional:!0,type:"TypedFunction<AttackType,String>"},i:{name:"i",optional:!0,type:"TypedFunction<AttackType,String>"},j:{name:"j",optional:!0,type:"TypedFunction<AttackType,String>"},k:{name:"k",optional:!0,type:"TypedFunction<AttackType,String>"},l:{name:"l",optional:!0,type:"TypedFunction<AttackType,String>"},m:{name:"m",optional:!0,type:"TypedFunction<AttackType,String>"},n:{name:"n",optional:!0,type:"TypedFunction<AttackType,String>"},o:{name:"o",optional:!0,type:"TypedFunction<AttackType,String>"},p:{name:"p",optional:!0,type:"TypedFunction<AttackType,String>"},q:{name:"q",optional:!0,type:"TypedFunction<AttackType,String>"},r:{name:"r",optional:!0,type:"TypedFunction<AttackType,String>"},s:{name:"s",optional:!0,type:"TypedFunction<AttackType,String>"},t:{name:"t",optional:!0,type:"TypedFunction<AttackType,String>"},u:{name:"u",optional:!0,type:"TypedFunction<AttackType,String>"},v:{name:"v",optional:!0,type:"TypedFunction<AttackType,String>"},w:{name:"w",optional:!0,type:"TypedFunction<AttackType,String>"},x:{name:"x",optional:!0,type:"TypedFunction<AttackType,String>"}}},audittype:{help:"",desc:"Add columns to a Audit Type sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SheetTemplate"},a:{name:"a",optional:!0,type:"TypedFunction<AuditType,String>"},b:{name:"b",optional:!0,type:"TypedFunction<AuditType,String>"},c:{name:"c",optional:!0,type:"TypedFunction<AuditType,String>"},d:{name:"d",optional:!0,type:"TypedFunction<AuditType,String>"},e:{name:"e",optional:!0,type:"TypedFunction<AuditType,String>"},f:{name:"f",optional:!0,type:"TypedFunction<AuditType,String>"},g:{name:"g",optional:!0,type:"TypedFunction<AuditType,String>"},h:{name:"h",optional:!0,type:"TypedFunction<AuditType,String>"},i:{name:"i",optional:!0,type:"TypedFunction<AuditType,String>"},j:{name:"j",optional:!0,type:"TypedFunction<AuditType,String>"},k:{name:"k",optional:!0,type:"TypedFunction<AuditType,String>"},l:{name:"l",optional:!0,type:"TypedFunction<AuditType,String>"},m:{name:"m",optional:!0,type:"TypedFunction<AuditType,String>"},n:{name:"n",optional:!0,type:"TypedFunction<AuditType,String>"},o:{name:"o",optional:!0,type:"TypedFunction<AuditType,String>"},p:{name:"p",optional:!0,type:"TypedFunction<AuditType,String>"},q:{name:"q",optional:!0,type:"TypedFunction<AuditType,String>"},r:{name:"r",optional:!0,type:"TypedFunction<AuditType,String>"},s:{name:"s",optional:!0,type:"TypedFunction<AuditType,String>"},t:{name:"t",optional:!0,type:"TypedFunction<AuditType,String>"},u:{name:"u",optional:!0,type:"TypedFunction<AuditType,String>"},v:{name:"v",optional:!0,type:"TypedFunction<AuditType,String>"},w:{name:"w",optional:!0,type:"TypedFunction<AuditType,String>"},x:{name:"x",optional:!0,type:"TypedFunction<AuditType,String>"}}},ban:{help:"",desc:"Add columns to a Ban sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SheetTemplate"},a:{name:"a",optional:!0,type:"TypedFunction<DBBan,String>"},b:{name:"b",optional:!0,type:"TypedFunction<DBBan,String>"},c:{name:"c",optional:!0,type:"TypedFunction<DBBan,String>"},d:{name:"d",optional:!0,type:"TypedFunction<DBBan,String>"},e:{name:"e",optional:!0,type:"TypedFunction<DBBan,String>"},f:{name:"f",optional:!0,type:"TypedFunction<DBBan,String>"},g:{name:"g",optional:!0,type:"TypedFunction<DBBan,String>"},h:{name:"h",optional:!0,type:"TypedFunction<DBBan,String>"},i:{name:"i",optional:!0,type:"TypedFunction<DBBan,String>"},j:{name:"j",optional:!0,type:"TypedFunction<DBBan,String>"},k:{name:"k",optional:!0,type:"TypedFunction<DBBan,String>"},l:{name:"l",optional:!0,type:"TypedFunction<DBBan,String>"},m:{name:"m",optional:!0,type:"TypedFunction<DBBan,String>"},n:{name:"n",optional:!0,type:"TypedFunction<DBBan,String>"},o:{name:"o",optional:!0,type:"TypedFunction<DBBan,String>"},p:{name:"p",optional:!0,type:"TypedFunction<DBBan,String>"},q:{name:"q",optional:!0,type:"TypedFunction<DBBan,String>"},r:{name:"r",optional:!0,type:"TypedFunction<DBBan,String>"},s:{name:"s",optional:!0,type:"TypedFunction<DBBan,String>"},t:{name:"t",optional:!0,type:"TypedFunction<DBBan,String>"},u:{name:"u",optional:!0,type:"TypedFunction<DBBan,String>"},v:{name:"v",optional:!0,type:"TypedFunction<DBBan,String>"},w:{name:"w",optional:!0,type:"TypedFunction<DBBan,String>"},x:{name:"x",optional:!0,type:"TypedFunction<DBBan,String>"}}},bounty:{help:"",desc:"Add columns to a bounty sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SheetTemplate"},a:{name:"a",optional:!0,type:"TypedFunction<DBBounty,String>"},b:{name:"b",optional:!0,type:"TypedFunction<DBBounty,String>"},c:{name:"c",optional:!0,type:"TypedFunction<DBBounty,String>"},d:{name:"d",optional:!0,type:"TypedFunction<DBBounty,String>"},e:{name:"e",optional:!0,type:"TypedFunction<DBBounty,String>"},f:{name:"f",optional:!0,type:"TypedFunction<DBBounty,String>"},g:{name:"g",optional:!0,type:"TypedFunction<DBBounty,String>"},h:{name:"h",optional:!0,type:"TypedFunction<DBBounty,String>"},i:{name:"i",optional:!0,type:"TypedFunction<DBBounty,String>"},j:{name:"j",optional:!0,type:"TypedFunction<DBBounty,String>"},k:{name:"k",optional:!0,type:"TypedFunction<DBBounty,String>"},l:{name:"l",optional:!0,type:"TypedFunction<DBBounty,String>"},m:{name:"m",optional:!0,type:"TypedFunction<DBBounty,String>"},n:{name:"n",optional:!0,type:"TypedFunction<DBBounty,String>"},o:{name:"o",optional:!0,type:"TypedFunction<DBBounty,String>"},p:{name:"p",optional:!0,type:"TypedFunction<DBBounty,String>"},q:{name:"q",optional:!0,type:"TypedFunction<DBBounty,String>"},r:{name:"r",optional:!0,type:"TypedFunction<DBBounty,String>"},s:{name:"s",optional:!0,type:"TypedFunction<DBBounty,String>"},t:{name:"t",optional:!0,type:"TypedFunction<DBBounty,String>"},u:{name:"u",optional:!0,type:"TypedFunction<DBBounty,String>"},v:{name:"v",optional:!0,type:"TypedFunction<DBBounty,String>"},w:{name:"w",optional:!0,type:"TypedFunction<DBBounty,String>"},x:{name:"x",optional:!0,type:"TypedFunction<DBBounty,String>"}}},building:{help:"",desc:"Add columns to a Building sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SheetTemplate"},a:{name:"a",optional:!0,type:"TypedFunction<Building,String>"},b:{name:"b",optional:!0,type:"TypedFunction<Building,String>"},c:{name:"c",optional:!0,type:"TypedFunction<Building,String>"},d:{name:"d",optional:!0,type:"TypedFunction<Building,String>"},e:{name:"e",optional:!0,type:"TypedFunction<Building,String>"},f:{name:"f",optional:!0,type:"TypedFunction<Building,String>"},g:{name:"g",optional:!0,type:"TypedFunction<Building,String>"},h:{name:"h",optional:!0,type:"TypedFunction<Building,String>"},i:{name:"i",optional:!0,type:"TypedFunction<Building,String>"},j:{name:"j",optional:!0,type:"TypedFunction<Building,String>"},k:{name:"k",optional:!0,type:"TypedFunction<Building,String>"},l:{name:"l",optional:!0,type:"TypedFunction<Building,String>"},m:{name:"m",optional:!0,type:"TypedFunction<Building,String>"},n:{name:"n",optional:!0,type:"TypedFunction<Building,String>"},o:{name:"o",optional:!0,type:"TypedFunction<Building,String>"},p:{name:"p",optional:!0,type:"TypedFunction<Building,String>"},q:{name:"q",optional:!0,type:"TypedFunction<Building,String>"},r:{name:"r",optional:!0,type:"TypedFunction<Building,String>"},s:{name:"s",optional:!0,type:"TypedFunction<Building,String>"},t:{name:"t",optional:!0,type:"TypedFunction<Building,String>"},u:{name:"u",optional:!0,type:"TypedFunction<Building,String>"},v:{name:"v",optional:!0,type:"TypedFunction<Building,String>"},w:{name:"w",optional:!0,type:"TypedFunction<Building,String>"},x:{name:"x",optional:!0,type:"TypedFunction<Building,String>"}}},city:{help:"",desc:"Add columns to a City sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SheetTemplate"},a:{name:"a",optional:!0,type:"TypedFunction<DBCity,String>"},b:{name:"b",optional:!0,type:"TypedFunction<DBCity,String>"},c:{name:"c",optional:!0,type:"TypedFunction<DBCity,String>"},d:{name:"d",optional:!0,type:"TypedFunction<DBCity,String>"},e:{name:"e",optional:!0,type:"TypedFunction<DBCity,String>"},f:{name:"f",optional:!0,type:"TypedFunction<DBCity,String>"},g:{name:"g",optional:!0,type:"TypedFunction<DBCity,String>"},h:{name:"h",optional:!0,type:"TypedFunction<DBCity,String>"},i:{name:"i",optional:!0,type:"TypedFunction<DBCity,String>"},j:{name:"j",optional:!0,type:"TypedFunction<DBCity,String>"},k:{name:"k",optional:!0,type:"TypedFunction<DBCity,String>"},l:{name:"l",optional:!0,type:"TypedFunction<DBCity,String>"},m:{name:"m",optional:!0,type:"TypedFunction<DBCity,String>"},n:{name:"n",optional:!0,type:"TypedFunction<DBCity,String>"},o:{name:"o",optional:!0,type:"TypedFunction<DBCity,String>"},p:{name:"p",optional:!0,type:"TypedFunction<DBCity,String>"},q:{name:"q",optional:!0,type:"TypedFunction<DBCity,String>"},r:{name:"r",optional:!0,type:"TypedFunction<DBCity,String>"},s:{name:"s",optional:!0,type:"TypedFunction<DBCity,String>"},t:{name:"t",optional:!0,type:"TypedFunction<DBCity,String>"},u:{name:"u",optional:!0,type:"TypedFunction<DBCity,String>"},v:{name:"v",optional:!0,type:"TypedFunction<DBCity,String>"},w:{name:"w",optional:!0,type:"TypedFunction<DBCity,String>"},x:{name:"x",optional:!0,type:"TypedFunction<DBCity,String>"}}},continent:{help:"",desc:"Add columns to a Continent sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SheetTemplate"},a:{name:"a",optional:!0,type:"TypedFunction<Continent,String>"},b:{name:"b",optional:!0,type:"TypedFunction<Continent,String>"},c:{name:"c",optional:!0,type:"TypedFunction<Continent,String>"},d:{name:"d",optional:!0,type:"TypedFunction<Continent,String>"},e:{name:"e",optional:!0,type:"TypedFunction<Continent,String>"},f:{name:"f",optional:!0,type:"TypedFunction<Continent,String>"},g:{name:"g",optional:!0,type:"TypedFunction<Continent,String>"},h:{name:"h",optional:!0,type:"TypedFunction<Continent,String>"},i:{name:"i",optional:!0,type:"TypedFunction<Continent,String>"},j:{name:"j",optional:!0,type:"TypedFunction<Continent,String>"},k:{name:"k",optional:!0,type:"TypedFunction<Continent,String>"},l:{name:"l",optional:!0,type:"TypedFunction<Continent,String>"},m:{name:"m",optional:!0,type:"TypedFunction<Continent,String>"},n:{name:"n",optional:!0,type:"TypedFunction<Continent,String>"},o:{name:"o",optional:!0,type:"TypedFunction<Continent,String>"},p:{name:"p",optional:!0,type:"TypedFunction<Continent,String>"},q:{name:"q",optional:!0,type:"TypedFunction<Continent,String>"},r:{name:"r",optional:!0,type:"TypedFunction<Continent,String>"},s:{name:"s",optional:!0,type:"TypedFunction<Continent,String>"},t:{name:"t",optional:!0,type:"TypedFunction<Continent,String>"},u:{name:"u",optional:!0,type:"TypedFunction<Continent,String>"},v:{name:"v",optional:!0,type:"TypedFunction<Continent,String>"},w:{name:"w",optional:!0,type:"TypedFunction<Continent,String>"},x:{name:"x",optional:!0,type:"TypedFunction<Continent,String>"}}},guild:{help:"",desc:"Add columns to a Guild sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SheetTemplate"},a:{name:"a",optional:!0,type:"TypedFunction<GuildDB,String>"},b:{name:"b",optional:!0,type:"TypedFunction<GuildDB,String>"},c:{name:"c",optional:!0,type:"TypedFunction<GuildDB,String>"},d:{name:"d",optional:!0,type:"TypedFunction<GuildDB,String>"},e:{name:"e",optional:!0,type:"TypedFunction<GuildDB,String>"},f:{name:"f",optional:!0,type:"TypedFunction<GuildDB,String>"},g:{name:"g",optional:!0,type:"TypedFunction<GuildDB,String>"},h:{name:"h",optional:!0,type:"TypedFunction<GuildDB,String>"},i:{name:"i",optional:!0,type:"TypedFunction<GuildDB,String>"},j:{name:"j",optional:!0,type:"TypedFunction<GuildDB,String>"},k:{name:"k",optional:!0,type:"TypedFunction<GuildDB,String>"},l:{name:"l",optional:!0,type:"TypedFunction<GuildDB,String>"},m:{name:"m",optional:!0,type:"TypedFunction<GuildDB,String>"},n:{name:"n",optional:!0,type:"TypedFunction<GuildDB,String>"},o:{name:"o",optional:!0,type:"TypedFunction<GuildDB,String>"},p:{name:"p",optional:!0,type:"TypedFunction<GuildDB,String>"},q:{name:"q",optional:!0,type:"TypedFunction<GuildDB,String>"},r:{name:"r",optional:!0,type:"TypedFunction<GuildDB,String>"},s:{name:"s",optional:!0,type:"TypedFunction<GuildDB,String>"},t:{name:"t",optional:!0,type:"TypedFunction<GuildDB,String>"},u:{name:"u",optional:!0,type:"TypedFunction<GuildDB,String>"},v:{name:"v",optional:!0,type:"TypedFunction<GuildDB,String>"},w:{name:"w",optional:!0,type:"TypedFunction<GuildDB,String>"},x:{name:"x",optional:!0,type:"TypedFunction<GuildDB,String>"}}},guildsetting:{help:"",desc:"Add columns to a Guild Setting sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SheetTemplate"},a:{name:"a",optional:!0,type:"TypedFunction<GuildSetting,String>"},b:{name:"b",optional:!0,type:"TypedFunction<GuildSetting,String>"},c:{name:"c",optional:!0,type:"TypedFunction<GuildSetting,String>"},d:{name:"d",optional:!0,type:"TypedFunction<GuildSetting,String>"},e:{name:"e",optional:!0,type:"TypedFunction<GuildSetting,String>"},f:{name:"f",optional:!0,type:"TypedFunction<GuildSetting,String>"},g:{name:"g",optional:!0,type:"TypedFunction<GuildSetting,String>"},h:{name:"h",optional:!0,type:"TypedFunction<GuildSetting,String>"},i:{name:"i",optional:!0,type:"TypedFunction<GuildSetting,String>"},j:{name:"j",optional:!0,type:"TypedFunction<GuildSetting,String>"},k:{name:"k",optional:!0,type:"TypedFunction<GuildSetting,String>"},l:{name:"l",optional:!0,type:"TypedFunction<GuildSetting,String>"},m:{name:"m",optional:!0,type:"TypedFunction<GuildSetting,String>"},n:{name:"n",optional:!0,type:"TypedFunction<GuildSetting,String>"},o:{name:"o",optional:!0,type:"TypedFunction<GuildSetting,String>"},p:{name:"p",optional:!0,type:"TypedFunction<GuildSetting,String>"},q:{name:"q",optional:!0,type:"TypedFunction<GuildSetting,String>"},r:{name:"r",optional:!0,type:"TypedFunction<GuildSetting,String>"},s:{name:"s",optional:!0,type:"TypedFunction<GuildSetting,String>"},t:{name:"t",optional:!0,type:"TypedFunction<GuildSetting,String>"},u:{name:"u",optional:!0,type:"TypedFunction<GuildSetting,String>"},v:{name:"v",optional:!0,type:"TypedFunction<GuildSetting,String>"},w:{name:"w",optional:!0,type:"TypedFunction<GuildSetting,String>"},x:{name:"x",optional:!0,type:"TypedFunction<GuildSetting,String>"}}},iattack:{help:"",desc:"Add columns to an Attack sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SheetTemplate"},a:{name:"a",optional:!0,type:"TypedFunction<IAttack,String>"},b:{name:"b",optional:!0,type:"TypedFunction<IAttack,String>"},c:{name:"c",optional:!0,type:"TypedFunction<IAttack,String>"},d:{name:"d",optional:!0,type:"TypedFunction<IAttack,String>"},e:{name:"e",optional:!0,type:"TypedFunction<IAttack,String>"},f:{name:"f",optional:!0,type:"TypedFunction<IAttack,String>"},g:{name:"g",optional:!0,type:"TypedFunction<IAttack,String>"},h:{name:"h",optional:!0,type:"TypedFunction<IAttack,String>"},i:{name:"i",optional:!0,type:"TypedFunction<IAttack,String>"},j:{name:"j",optional:!0,type:"TypedFunction<IAttack,String>"},k:{name:"k",optional:!0,type:"TypedFunction<IAttack,String>"},l:{name:"l",optional:!0,type:"TypedFunction<IAttack,String>"},m:{name:"m",optional:!0,type:"TypedFunction<IAttack,String>"},n:{name:"n",optional:!0,type:"TypedFunction<IAttack,String>"},o:{name:"o",optional:!0,type:"TypedFunction<IAttack,String>"},p:{name:"p",optional:!0,type:"TypedFunction<IAttack,String>"},q:{name:"q",optional:!0,type:"TypedFunction<IAttack,String>"},r:{name:"r",optional:!0,type:"TypedFunction<IAttack,String>"},s:{name:"s",optional:!0,type:"TypedFunction<IAttack,String>"},t:{name:"t",optional:!0,type:"TypedFunction<IAttack,String>"},u:{name:"u",optional:!0,type:"TypedFunction<IAttack,String>"},v:{name:"v",optional:!0,type:"TypedFunction<IAttack,String>"},w:{name:"w",optional:!0,type:"TypedFunction<IAttack,String>"},x:{name:"x",optional:!0,type:"TypedFunction<IAttack,String>"}}},militaryunit:{help:"",desc:"Add columns to a Military Unit sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SheetTemplate"},a:{name:"a",optional:!0,type:"TypedFunction<MilitaryUnit,String>"},b:{name:"b",optional:!0,type:"TypedFunction<MilitaryUnit,String>"},c:{name:"c",optional:!0,type:"TypedFunction<MilitaryUnit,String>"},d:{name:"d",optional:!0,type:"TypedFunction<MilitaryUnit,String>"},e:{name:"e",optional:!0,type:"TypedFunction<MilitaryUnit,String>"},f:{name:"f",optional:!0,type:"TypedFunction<MilitaryUnit,String>"},g:{name:"g",optional:!0,type:"TypedFunction<MilitaryUnit,String>"},h:{name:"h",optional:!0,type:"TypedFunction<MilitaryUnit,String>"},i:{name:"i",optional:!0,type:"TypedFunction<MilitaryUnit,String>"},j:{name:"j",optional:!0,type:"TypedFunction<MilitaryUnit,String>"},k:{name:"k",optional:!0,type:"TypedFunction<MilitaryUnit,String>"},l:{name:"l",optional:!0,type:"TypedFunction<MilitaryUnit,String>"},m:{name:"m",optional:!0,type:"TypedFunction<MilitaryUnit,String>"},n:{name:"n",optional:!0,type:"TypedFunction<MilitaryUnit,String>"},o:{name:"o",optional:!0,type:"TypedFunction<MilitaryUnit,String>"},p:{name:"p",optional:!0,type:"TypedFunction<MilitaryUnit,String>"},q:{name:"q",optional:!0,type:"TypedFunction<MilitaryUnit,String>"},r:{name:"r",optional:!0,type:"TypedFunction<MilitaryUnit,String>"},s:{name:"s",optional:!0,type:"TypedFunction<MilitaryUnit,String>"},t:{name:"t",optional:!0,type:"TypedFunction<MilitaryUnit,String>"},u:{name:"u",optional:!0,type:"TypedFunction<MilitaryUnit,String>"},v:{name:"v",optional:!0,type:"TypedFunction<MilitaryUnit,String>"},w:{name:"w",optional:!0,type:"TypedFunction<MilitaryUnit,String>"},x:{name:"x",optional:!0,type:"TypedFunction<MilitaryUnit,String>"}}},nation:{help:"",desc:"Add columns to a Nation sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SheetTemplate"},a:{name:"a",optional:!0,type:"TypedFunction<DBNation,String>"},b:{name:"b",optional:!0,type:"TypedFunction<DBNation,String>"},c:{name:"c",optional:!0,type:"TypedFunction<DBNation,String>"},d:{name:"d",optional:!0,type:"TypedFunction<DBNation,String>"},e:{name:"e",optional:!0,type:"TypedFunction<DBNation,String>"},f:{name:"f",optional:!0,type:"TypedFunction<DBNation,String>"},g:{name:"g",optional:!0,type:"TypedFunction<DBNation,String>"},h:{name:"h",optional:!0,type:"TypedFunction<DBNation,String>"},i:{name:"i",optional:!0,type:"TypedFunction<DBNation,String>"},j:{name:"j",optional:!0,type:"TypedFunction<DBNation,String>"},k:{name:"k",optional:!0,type:"TypedFunction<DBNation,String>"},l:{name:"l",optional:!0,type:"TypedFunction<DBNation,String>"},m:{name:"m",optional:!0,type:"TypedFunction<DBNation,String>"},n:{name:"n",optional:!0,type:"TypedFunction<DBNation,String>"},o:{name:"o",optional:!0,type:"TypedFunction<DBNation,String>"},p:{name:"p",optional:!0,type:"TypedFunction<DBNation,String>"},q:{name:"q",optional:!0,type:"TypedFunction<DBNation,String>"},r:{name:"r",optional:!0,type:"TypedFunction<DBNation,String>"},s:{name:"s",optional:!0,type:"TypedFunction<DBNation,String>"},t:{name:"t",optional:!0,type:"TypedFunction<DBNation,String>"},u:{name:"u",optional:!0,type:"TypedFunction<DBNation,String>"},v:{name:"v",optional:!0,type:"TypedFunction<DBNation,String>"},w:{name:"w",optional:!0,type:"TypedFunction<DBNation,String>"},x:{name:"x",optional:!0,type:"TypedFunction<DBNation,String>"}}},nationcolor:{help:"",desc:"Add columns to a Nation Color sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SheetTemplate"},a:{name:"a",optional:!0,type:"TypedFunction<NationColor,String>"},b:{name:"b",optional:!0,type:"TypedFunction<NationColor,String>"},c:{name:"c",optional:!0,type:"TypedFunction<NationColor,String>"},d:{name:"d",optional:!0,type:"TypedFunction<NationColor,String>"},e:{name:"e",optional:!0,type:"TypedFunction<NationColor,String>"},f:{name:"f",optional:!0,type:"TypedFunction<NationColor,String>"},g:{name:"g",optional:!0,type:"TypedFunction<NationColor,String>"},h:{name:"h",optional:!0,type:"TypedFunction<NationColor,String>"},i:{name:"i",optional:!0,type:"TypedFunction<NationColor,String>"},j:{name:"j",optional:!0,type:"TypedFunction<NationColor,String>"},k:{name:"k",optional:!0,type:"TypedFunction<NationColor,String>"},l:{name:"l",optional:!0,type:"TypedFunction<NationColor,String>"},m:{name:"m",optional:!0,type:"TypedFunction<NationColor,String>"},n:{name:"n",optional:!0,type:"TypedFunction<NationColor,String>"},o:{name:"o",optional:!0,type:"TypedFunction<NationColor,String>"},p:{name:"p",optional:!0,type:"TypedFunction<NationColor,String>"},q:{name:"q",optional:!0,type:"TypedFunction<NationColor,String>"},r:{name:"r",optional:!0,type:"TypedFunction<NationColor,String>"},s:{name:"s",optional:!0,type:"TypedFunction<NationColor,String>"},t:{name:"t",optional:!0,type:"TypedFunction<NationColor,String>"},u:{name:"u",optional:!0,type:"TypedFunction<NationColor,String>"},v:{name:"v",optional:!0,type:"TypedFunction<NationColor,String>"},w:{name:"w",optional:!0,type:"TypedFunction<NationColor,String>"},x:{name:"x",optional:!0,type:"TypedFunction<NationColor,String>"}}},nationlist:{help:"",desc:"Add columns to a NationList sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SheetTemplate"},a:{name:"a",optional:!0,type:"TypedFunction<NationList,String>"},b:{name:"b",optional:!0,type:"TypedFunction<NationList,String>"},c:{name:"c",optional:!0,type:"TypedFunction<NationList,String>"},d:{name:"d",optional:!0,type:"TypedFunction<NationList,String>"},e:{name:"e",optional:!0,type:"TypedFunction<NationList,String>"},f:{name:"f",optional:!0,type:"TypedFunction<NationList,String>"},g:{name:"g",optional:!0,type:"TypedFunction<NationList,String>"},h:{name:"h",optional:!0,type:"TypedFunction<NationList,String>"},i:{name:"i",optional:!0,type:"TypedFunction<NationList,String>"},j:{name:"j",optional:!0,type:"TypedFunction<NationList,String>"},k:{name:"k",optional:!0,type:"TypedFunction<NationList,String>"},l:{name:"l",optional:!0,type:"TypedFunction<NationList,String>"},m:{name:"m",optional:!0,type:"TypedFunction<NationList,String>"},n:{name:"n",optional:!0,type:"TypedFunction<NationList,String>"},o:{name:"o",optional:!0,type:"TypedFunction<NationList,String>"},p:{name:"p",optional:!0,type:"TypedFunction<NationList,String>"},q:{name:"q",optional:!0,type:"TypedFunction<NationList,String>"},r:{name:"r",optional:!0,type:"TypedFunction<NationList,String>"},s:{name:"s",optional:!0,type:"TypedFunction<NationList,String>"},t:{name:"t",optional:!0,type:"TypedFunction<NationList,String>"},u:{name:"u",optional:!0,type:"TypedFunction<NationList,String>"},v:{name:"v",optional:!0,type:"TypedFunction<NationList,String>"},w:{name:"w",optional:!0,type:"TypedFunction<NationList,String>"},x:{name:"x",optional:!0,type:"TypedFunction<NationList,String>"}}},nationoralliance:{help:"",desc:"Add columns to a NationOrAlliance sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SheetTemplate"},a:{name:"a",optional:!0,type:"TypedFunction<NationOrAlliance,String>"},b:{name:"b",optional:!0,type:"TypedFunction<NationOrAlliance,String>"},c:{name:"c",optional:!0,type:"TypedFunction<NationOrAlliance,String>"},d:{name:"d",optional:!0,type:"TypedFunction<NationOrAlliance,String>"},e:{name:"e",optional:!0,type:"TypedFunction<NationOrAlliance,String>"},f:{name:"f",optional:!0,type:"TypedFunction<NationOrAlliance,String>"},g:{name:"g",optional:!0,type:"TypedFunction<NationOrAlliance,String>"},h:{name:"h",optional:!0,type:"TypedFunction<NationOrAlliance,String>"},i:{name:"i",optional:!0,type:"TypedFunction<NationOrAlliance,String>"},j:{name:"j",optional:!0,type:"TypedFunction<NationOrAlliance,String>"},k:{name:"k",optional:!0,type:"TypedFunction<NationOrAlliance,String>"},l:{name:"l",optional:!0,type:"TypedFunction<NationOrAlliance,String>"},m:{name:"m",optional:!0,type:"TypedFunction<NationOrAlliance,String>"},n:{name:"n",optional:!0,type:"TypedFunction<NationOrAlliance,String>"},o:{name:"o",optional:!0,type:"TypedFunction<NationOrAlliance,String>"},p:{name:"p",optional:!0,type:"TypedFunction<NationOrAlliance,String>"},q:{name:"q",optional:!0,type:"TypedFunction<NationOrAlliance,String>"},r:{name:"r",optional:!0,type:"TypedFunction<NationOrAlliance,String>"},s:{name:"s",optional:!0,type:"TypedFunction<NationOrAlliance,String>"},t:{name:"t",optional:!0,type:"TypedFunction<NationOrAlliance,String>"},u:{name:"u",optional:!0,type:"TypedFunction<NationOrAlliance,String>"},v:{name:"v",optional:!0,type:"TypedFunction<NationOrAlliance,String>"},w:{name:"w",optional:!0,type:"TypedFunction<NationOrAlliance,String>"},x:{name:"x",optional:!0,type:"TypedFunction<NationOrAlliance,String>"}}},project:{help:"",desc:"Add columns to a Project sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SheetTemplate"},a:{name:"a",optional:!0,type:"TypedFunction<Project,String>"},b:{name:"b",optional:!0,type:"TypedFunction<Project,String>"},c:{name:"c",optional:!0,type:"TypedFunction<Project,String>"},d:{name:"d",optional:!0,type:"TypedFunction<Project,String>"},e:{name:"e",optional:!0,type:"TypedFunction<Project,String>"},f:{name:"f",optional:!0,type:"TypedFunction<Project,String>"},g:{name:"g",optional:!0,type:"TypedFunction<Project,String>"},h:{name:"h",optional:!0,type:"TypedFunction<Project,String>"},i:{name:"i",optional:!0,type:"TypedFunction<Project,String>"},j:{name:"j",optional:!0,type:"TypedFunction<Project,String>"},k:{name:"k",optional:!0,type:"TypedFunction<Project,String>"},l:{name:"l",optional:!0,type:"TypedFunction<Project,String>"},m:{name:"m",optional:!0,type:"TypedFunction<Project,String>"},n:{name:"n",optional:!0,type:"TypedFunction<Project,String>"},o:{name:"o",optional:!0,type:"TypedFunction<Project,String>"},p:{name:"p",optional:!0,type:"TypedFunction<Project,String>"},q:{name:"q",optional:!0,type:"TypedFunction<Project,String>"},r:{name:"r",optional:!0,type:"TypedFunction<Project,String>"},s:{name:"s",optional:!0,type:"TypedFunction<Project,String>"},t:{name:"t",optional:!0,type:"TypedFunction<Project,String>"},u:{name:"u",optional:!0,type:"TypedFunction<Project,String>"},v:{name:"v",optional:!0,type:"TypedFunction<Project,String>"},w:{name:"w",optional:!0,type:"TypedFunction<Project,String>"},x:{name:"x",optional:!0,type:"TypedFunction<Project,String>"}}},resourcetype:{help:"",desc:"Add columns to a Resource sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SheetTemplate"},a:{name:"a",optional:!0,type:"TypedFunction<ResourceType,String>"},b:{name:"b",optional:!0,type:"TypedFunction<ResourceType,String>"},c:{name:"c",optional:!0,type:"TypedFunction<ResourceType,String>"},d:{name:"d",optional:!0,type:"TypedFunction<ResourceType,String>"},e:{name:"e",optional:!0,type:"TypedFunction<ResourceType,String>"},f:{name:"f",optional:!0,type:"TypedFunction<ResourceType,String>"},g:{name:"g",optional:!0,type:"TypedFunction<ResourceType,String>"},h:{name:"h",optional:!0,type:"TypedFunction<ResourceType,String>"},i:{name:"i",optional:!0,type:"TypedFunction<ResourceType,String>"},j:{name:"j",optional:!0,type:"TypedFunction<ResourceType,String>"},k:{name:"k",optional:!0,type:"TypedFunction<ResourceType,String>"},l:{name:"l",optional:!0,type:"TypedFunction<ResourceType,String>"},m:{name:"m",optional:!0,type:"TypedFunction<ResourceType,String>"},n:{name:"n",optional:!0,type:"TypedFunction<ResourceType,String>"},o:{name:"o",optional:!0,type:"TypedFunction<ResourceType,String>"},p:{name:"p",optional:!0,type:"TypedFunction<ResourceType,String>"},q:{name:"q",optional:!0,type:"TypedFunction<ResourceType,String>"},r:{name:"r",optional:!0,type:"TypedFunction<ResourceType,String>"},s:{name:"s",optional:!0,type:"TypedFunction<ResourceType,String>"},t:{name:"t",optional:!0,type:"TypedFunction<ResourceType,String>"},u:{name:"u",optional:!0,type:"TypedFunction<ResourceType,String>"},v:{name:"v",optional:!0,type:"TypedFunction<ResourceType,String>"},w:{name:"w",optional:!0,type:"TypedFunction<ResourceType,String>"},x:{name:"x",optional:!0,type:"TypedFunction<ResourceType,String>"}}},taxbracket:{help:"",desc:"Add columns to a TaxBracket sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SheetTemplate"},a:{name:"a",optional:!0,type:"TypedFunction<TaxBracket,String>"},b:{name:"b",optional:!0,type:"TypedFunction<TaxBracket,String>"},c:{name:"c",optional:!0,type:"TypedFunction<TaxBracket,String>"},d:{name:"d",optional:!0,type:"TypedFunction<TaxBracket,String>"},e:{name:"e",optional:!0,type:"TypedFunction<TaxBracket,String>"},f:{name:"f",optional:!0,type:"TypedFunction<TaxBracket,String>"},g:{name:"g",optional:!0,type:"TypedFunction<TaxBracket,String>"},h:{name:"h",optional:!0,type:"TypedFunction<TaxBracket,String>"},i:{name:"i",optional:!0,type:"TypedFunction<TaxBracket,String>"},j:{name:"j",optional:!0,type:"TypedFunction<TaxBracket,String>"},k:{name:"k",optional:!0,type:"TypedFunction<TaxBracket,String>"},l:{name:"l",optional:!0,type:"TypedFunction<TaxBracket,String>"},m:{name:"m",optional:!0,type:"TypedFunction<TaxBracket,String>"},n:{name:"n",optional:!0,type:"TypedFunction<TaxBracket,String>"},o:{name:"o",optional:!0,type:"TypedFunction<TaxBracket,String>"},p:{name:"p",optional:!0,type:"TypedFunction<TaxBracket,String>"},q:{name:"q",optional:!0,type:"TypedFunction<TaxBracket,String>"},r:{name:"r",optional:!0,type:"TypedFunction<TaxBracket,String>"},s:{name:"s",optional:!0,type:"TypedFunction<TaxBracket,String>"},t:{name:"t",optional:!0,type:"TypedFunction<TaxBracket,String>"},u:{name:"u",optional:!0,type:"TypedFunction<TaxBracket,String>"},v:{name:"v",optional:!0,type:"TypedFunction<TaxBracket,String>"},w:{name:"w",optional:!0,type:"TypedFunction<TaxBracket,String>"},x:{name:"x",optional:!0,type:"TypedFunction<TaxBracket,String>"}}},taxdeposit:{help:"",desc:"Add columns to a Bank TaxDeposit sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SheetTemplate"},a:{name:"a",optional:!0,type:"TypedFunction<TaxDeposit,String>"},b:{name:"b",optional:!0,type:"TypedFunction<TaxDeposit,String>"},c:{name:"c",optional:!0,type:"TypedFunction<TaxDeposit,String>"},d:{name:"d",optional:!0,type:"TypedFunction<TaxDeposit,String>"},e:{name:"e",optional:!0,type:"TypedFunction<TaxDeposit,String>"},f:{name:"f",optional:!0,type:"TypedFunction<TaxDeposit,String>"},g:{name:"g",optional:!0,type:"TypedFunction<TaxDeposit,String>"},h:{name:"h",optional:!0,type:"TypedFunction<TaxDeposit,String>"},i:{name:"i",optional:!0,type:"TypedFunction<TaxDeposit,String>"},j:{name:"j",optional:!0,type:"TypedFunction<TaxDeposit,String>"},k:{name:"k",optional:!0,type:"TypedFunction<TaxDeposit,String>"},l:{name:"l",optional:!0,type:"TypedFunction<TaxDeposit,String>"},m:{name:"m",optional:!0,type:"TypedFunction<TaxDeposit,String>"},n:{name:"n",optional:!0,type:"TypedFunction<TaxDeposit,String>"},o:{name:"o",optional:!0,type:"TypedFunction<TaxDeposit,String>"},p:{name:"p",optional:!0,type:"TypedFunction<TaxDeposit,String>"},q:{name:"q",optional:!0,type:"TypedFunction<TaxDeposit,String>"},r:{name:"r",optional:!0,type:"TypedFunction<TaxDeposit,String>"},s:{name:"s",optional:!0,type:"TypedFunction<TaxDeposit,String>"},t:{name:"t",optional:!0,type:"TypedFunction<TaxDeposit,String>"},u:{name:"u",optional:!0,type:"TypedFunction<TaxDeposit,String>"},v:{name:"v",optional:!0,type:"TypedFunction<TaxDeposit,String>"},w:{name:"w",optional:!0,type:"TypedFunction<TaxDeposit,String>"},x:{name:"x",optional:!0,type:"TypedFunction<TaxDeposit,String>"}}},treasure:{help:"",desc:"Add columns to a treasure sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SheetTemplate"},a:{name:"a",optional:!0,type:"TypedFunction<DBTreasure,String>"},b:{name:"b",optional:!0,type:"TypedFunction<DBTreasure,String>"},c:{name:"c",optional:!0,type:"TypedFunction<DBTreasure,String>"},d:{name:"d",optional:!0,type:"TypedFunction<DBTreasure,String>"},e:{name:"e",optional:!0,type:"TypedFunction<DBTreasure,String>"},f:{name:"f",optional:!0,type:"TypedFunction<DBTreasure,String>"},g:{name:"g",optional:!0,type:"TypedFunction<DBTreasure,String>"},h:{name:"h",optional:!0,type:"TypedFunction<DBTreasure,String>"},i:{name:"i",optional:!0,type:"TypedFunction<DBTreasure,String>"},j:{name:"j",optional:!0,type:"TypedFunction<DBTreasure,String>"},k:{name:"k",optional:!0,type:"TypedFunction<DBTreasure,String>"},l:{name:"l",optional:!0,type:"TypedFunction<DBTreasure,String>"},m:{name:"m",optional:!0,type:"TypedFunction<DBTreasure,String>"},n:{name:"n",optional:!0,type:"TypedFunction<DBTreasure,String>"},o:{name:"o",optional:!0,type:"TypedFunction<DBTreasure,String>"},p:{name:"p",optional:!0,type:"TypedFunction<DBTreasure,String>"},q:{name:"q",optional:!0,type:"TypedFunction<DBTreasure,String>"},r:{name:"r",optional:!0,type:"TypedFunction<DBTreasure,String>"},s:{name:"s",optional:!0,type:"TypedFunction<DBTreasure,String>"},t:{name:"t",optional:!0,type:"TypedFunction<DBTreasure,String>"},u:{name:"u",optional:!0,type:"TypedFunction<DBTreasure,String>"},v:{name:"v",optional:!0,type:"TypedFunction<DBTreasure,String>"},w:{name:"w",optional:!0,type:"TypedFunction<DBTreasure,String>"},x:{name:"x",optional:!0,type:"TypedFunction<DBTreasure,String>"}}},treaty:{help:"",desc:"Add columns to a Treaty sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SheetTemplate"},a:{name:"a",optional:!0,type:"TypedFunction<Treaty,String>"},b:{name:"b",optional:!0,type:"TypedFunction<Treaty,String>"},c:{name:"c",optional:!0,type:"TypedFunction<Treaty,String>"},d:{name:"d",optional:!0,type:"TypedFunction<Treaty,String>"},e:{name:"e",optional:!0,type:"TypedFunction<Treaty,String>"},f:{name:"f",optional:!0,type:"TypedFunction<Treaty,String>"},g:{name:"g",optional:!0,type:"TypedFunction<Treaty,String>"},h:{name:"h",optional:!0,type:"TypedFunction<Treaty,String>"},i:{name:"i",optional:!0,type:"TypedFunction<Treaty,String>"},j:{name:"j",optional:!0,type:"TypedFunction<Treaty,String>"},k:{name:"k",optional:!0,type:"TypedFunction<Treaty,String>"},l:{name:"l",optional:!0,type:"TypedFunction<Treaty,String>"},m:{name:"m",optional:!0,type:"TypedFunction<Treaty,String>"},n:{name:"n",optional:!0,type:"TypedFunction<Treaty,String>"},o:{name:"o",optional:!0,type:"TypedFunction<Treaty,String>"},p:{name:"p",optional:!0,type:"TypedFunction<Treaty,String>"},q:{name:"q",optional:!0,type:"TypedFunction<Treaty,String>"},r:{name:"r",optional:!0,type:"TypedFunction<Treaty,String>"},s:{name:"s",optional:!0,type:"TypedFunction<Treaty,String>"},t:{name:"t",optional:!0,type:"TypedFunction<Treaty,String>"},u:{name:"u",optional:!0,type:"TypedFunction<Treaty,String>"},v:{name:"v",optional:!0,type:"TypedFunction<Treaty,String>"},w:{name:"w",optional:!0,type:"TypedFunction<Treaty,String>"},x:{name:"x",optional:!0,type:"TypedFunction<Treaty,String>"}}},treatytype:{help:"",desc:"Add columns to a TreatyType sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SheetTemplate"},a:{name:"a",optional:!0,type:"TypedFunction<TreatyType,String>"},b:{name:"b",optional:!0,type:"TypedFunction<TreatyType,String>"},c:{name:"c",optional:!0,type:"TypedFunction<TreatyType,String>"},d:{name:"d",optional:!0,type:"TypedFunction<TreatyType,String>"},e:{name:"e",optional:!0,type:"TypedFunction<TreatyType,String>"},f:{name:"f",optional:!0,type:"TypedFunction<TreatyType,String>"},g:{name:"g",optional:!0,type:"TypedFunction<TreatyType,String>"},h:{name:"h",optional:!0,type:"TypedFunction<TreatyType,String>"},i:{name:"i",optional:!0,type:"TypedFunction<TreatyType,String>"},j:{name:"j",optional:!0,type:"TypedFunction<TreatyType,String>"},k:{name:"k",optional:!0,type:"TypedFunction<TreatyType,String>"},l:{name:"l",optional:!0,type:"TypedFunction<TreatyType,String>"},m:{name:"m",optional:!0,type:"TypedFunction<TreatyType,String>"},n:{name:"n",optional:!0,type:"TypedFunction<TreatyType,String>"},o:{name:"o",optional:!0,type:"TypedFunction<TreatyType,String>"},p:{name:"p",optional:!0,type:"TypedFunction<TreatyType,String>"},q:{name:"q",optional:!0,type:"TypedFunction<TreatyType,String>"},r:{name:"r",optional:!0,type:"TypedFunction<TreatyType,String>"},s:{name:"s",optional:!0,type:"TypedFunction<TreatyType,String>"},t:{name:"t",optional:!0,type:"TypedFunction<TreatyType,String>"},u:{name:"u",optional:!0,type:"TypedFunction<TreatyType,String>"},v:{name:"v",optional:!0,type:"TypedFunction<TreatyType,String>"},w:{name:"w",optional:!0,type:"TypedFunction<TreatyType,String>"},x:{name:"x",optional:!0,type:"TypedFunction<TreatyType,String>"}}},user:{help:"",desc:"Add columns to a User sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SheetTemplate"},a:{name:"a",optional:!0,type:"TypedFunction<UserWrapper,String>"},b:{name:"b",optional:!0,type:"TypedFunction<UserWrapper,String>"},c:{name:"c",optional:!0,type:"TypedFunction<UserWrapper,String>"},d:{name:"d",optional:!0,type:"TypedFunction<UserWrapper,String>"},e:{name:"e",optional:!0,type:"TypedFunction<UserWrapper,String>"},f:{name:"f",optional:!0,type:"TypedFunction<UserWrapper,String>"},g:{name:"g",optional:!0,type:"TypedFunction<UserWrapper,String>"},h:{name:"h",optional:!0,type:"TypedFunction<UserWrapper,String>"},i:{name:"i",optional:!0,type:"TypedFunction<UserWrapper,String>"},j:{name:"j",optional:!0,type:"TypedFunction<UserWrapper,String>"},k:{name:"k",optional:!0,type:"TypedFunction<UserWrapper,String>"},l:{name:"l",optional:!0,type:"TypedFunction<UserWrapper,String>"},m:{name:"m",optional:!0,type:"TypedFunction<UserWrapper,String>"},n:{name:"n",optional:!0,type:"TypedFunction<UserWrapper,String>"},o:{name:"o",optional:!0,type:"TypedFunction<UserWrapper,String>"},p:{name:"p",optional:!0,type:"TypedFunction<UserWrapper,String>"},q:{name:"q",optional:!0,type:"TypedFunction<UserWrapper,String>"},r:{name:"r",optional:!0,type:"TypedFunction<UserWrapper,String>"},s:{name:"s",optional:!0,type:"TypedFunction<UserWrapper,String>"},t:{name:"t",optional:!0,type:"TypedFunction<UserWrapper,String>"},u:{name:"u",optional:!0,type:"TypedFunction<UserWrapper,String>"},v:{name:"v",optional:!0,type:"TypedFunction<UserWrapper,String>"},w:{name:"w",optional:!0,type:"TypedFunction<UserWrapper,String>"},x:{name:"x",optional:!0,type:"TypedFunction<UserWrapper,String>"}}},war:{help:"",desc:"Add columns to a War sheet",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SheetTemplate"},a:{name:"a",optional:!0,type:"TypedFunction<DBWar,String>"},b:{name:"b",optional:!0,type:"TypedFunction<DBWar,String>"},c:{name:"c",optional:!0,type:"TypedFunction<DBWar,String>"},d:{name:"d",optional:!0,type:"TypedFunction<DBWar,String>"},e:{name:"e",optional:!0,type:"TypedFunction<DBWar,String>"},f:{name:"f",optional:!0,type:"TypedFunction<DBWar,String>"},g:{name:"g",optional:!0,type:"TypedFunction<DBWar,String>"},h:{name:"h",optional:!0,type:"TypedFunction<DBWar,String>"},i:{name:"i",optional:!0,type:"TypedFunction<DBWar,String>"},j:{name:"j",optional:!0,type:"TypedFunction<DBWar,String>"},k:{name:"k",optional:!0,type:"TypedFunction<DBWar,String>"},l:{name:"l",optional:!0,type:"TypedFunction<DBWar,String>"},m:{name:"m",optional:!0,type:"TypedFunction<DBWar,String>"},n:{name:"n",optional:!0,type:"TypedFunction<DBWar,String>"},o:{name:"o",optional:!0,type:"TypedFunction<DBWar,String>"},p:{name:"p",optional:!0,type:"TypedFunction<DBWar,String>"},q:{name:"q",optional:!0,type:"TypedFunction<DBWar,String>"},r:{name:"r",optional:!0,type:"TypedFunction<DBWar,String>"},s:{name:"s",optional:!0,type:"TypedFunction<DBWar,String>"},t:{name:"t",optional:!0,type:"TypedFunction<DBWar,String>"},u:{name:"u",optional:!0,type:"TypedFunction<DBWar,String>"},v:{name:"v",optional:!0,type:"TypedFunction<DBWar,String>"},w:{name:"w",optional:!0,type:"TypedFunction<DBWar,String>"},x:{name:"x",optional:!0,type:"TypedFunction<DBWar,String>"}}}},list:{help:"",desc:"List sheet templates for this guild",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{type:{name:"type",optional:!0,type:"Class[PlaceholderType]"}}},remove:{help:"",desc:"Delete a sheet template",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",type:"SheetTemplate"}}},remove_column:{help:"",desc:"Remove columns in a sheet template",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",type:"SheetTemplate"},columns:{name:"columns",type:"List<Integer>"}}},rename:{help:"",desc:"Rename a sheet template",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",type:"SheetTemplate"},name:{name:"name",type:"String"}}},view:{help:"",desc:"View a sheet template",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF","MILCOM","ECON_STAFF","FOREIGN_AFFAIRS_STAFF","ECON","FOREIGN_AFFAIRS"],any:!0}},arguments:{sheet:{name:"sheet",type:"SheetTemplate"}}}},sheets_econ:{ingamenationtransfersbyreceiver:{help:"",desc:"Get a sheet of ingame transfers for nations, filtered by the receiver",groups:["Optional: Specify timeframe"],annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{receivers:{name:"receivers",type:"Set<NationOrAlliance>"},startTime:{name:"startTime",optional:!0,desc:"Only list transfers after this time",group:0,type:"Long[Timestamp]"},endTime:{name:"endTime",optional:!0,desc:"Only list transfers before this time",group:0,type:"Long[Timestamp]"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},ingamenationtransfersbysender:{help:"",desc:"Get a sheet of ingame transfers for nations, filtered by the sender",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{senders:{name:"senders",type:"Set<NationOrAlliance>"},timeframe:{name:"timeframe",optional:!0,type:"long[Timestamp]",def:"%epoch%"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},projectsheet:{help:"",desc:"Sheet of projects each nation has",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"},snapshotTime:{name:"snapshotTime",optional:!0,flag:"t",type:"Long[Timestamp]"}}},getingamenationtransfers:{help:"",desc:"Get a sheet of in-game transfers for nations",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{senders:{name:"senders",type:"Set<NationOrAlliance>"},receivers:{name:"receivers",type:"Set<NationOrAlliance>"},start_time:{name:"start_time",optional:!0,desc:"Only transfers after timeframe",type:"long[Timestamp]",def:"%epoch%"},end_time:{name:"end_time",optional:!0,flag:"e",type:"Long[Timestamp]"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},getingametransactions:{help:"",desc:"Get a sheet of transfers",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{sender:{name:"sender",optional:!0,type:"NationOrAlliance"},receiver:{name:"receiver",optional:!0,type:"NationOrAlliance"},banker:{name:"banker",optional:!0,type:"NationOrAlliance"},timeframe:{name:"timeframe",optional:!0,type:"long[Timestamp]",def:"%epoch%"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},getnationsinternaltransfers:{help:"",desc:"Get a sheet of internal transfers for nations",groups:["Optional: Specify timeframe"],annotations:{role:{value:["ECON"]}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},startTime:{name:"startTime",optional:!0,desc:"Only list transfers after this time",group:0,type:"Long[Timestamp]"},endTime:{name:"endTime",optional:!0,desc:"Only list transfers before this time",group:0,type:"Long[Timestamp]"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},projectcostcsv:{help:"",desc:"Generate csv file of project costs"},revenuesheet:{help:"",desc:"Get a sheet of nations and their revenue (compared to optimal city builds)",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"},include_untaxable:{name:"include_untaxable",optional:!0,flag:"i",type:"boolean"},snapshotTime:{name:"snapshotTime",optional:!0,flag:"t",type:"Long[Timestamp]"}}},stockpilesheet:{help:"",desc:"List all nations in the alliance and their in-game resource stockpile",groups:["Optional: Specify Nations","Display Options"],annotations:{role:{value:["ECON_STAFF","ECON","INTERNAL_AFFAIRS","INTERNAL_AFFAIRS_STAFF","MILCOM"],any:!0},isalliance:!0},arguments:{nationFilter:{name:"nationFilter",optional:!0,desc:"Only include stockpiles from these nations",group:0,type:"Set<DBNation>"},normalize:{name:"normalize",optional:!0,flag:"n",desc:"Divide stockpiles by city count",group:1,type:"boolean"},onlyShowExcess:{name:"onlyShowExcess",optional:!0,flag:"e",desc:"Only show the resources well above warchest and city operation requirements",group:1,type:"boolean"},forceUpdate:{name:"forceUpdate",optional:!0,flag:"f",type:"boolean"}}},taxbracketsheet:{help:"",desc:"Generate a sheet of member tax brackets and internal tax rates\n`note: internal tax rate is the TAX_BASE and determines what % of their taxes is excluded from deposits`",annotations:{role:{value:["ECON","ECON_STAFF"],any:!0}},arguments:{force:{name:"force",optional:!0,flag:"f",type:"boolean"},includeApplicants:{name:"includeApplicants",optional:!0,flag:"a",type:"boolean"}}},taxrecords:{help:"",desc:"Get a sheet of a nation's in-game tax records and full resource amounts over a period",annotations:{role:{value:["ECON"]},isalliance:!0},arguments:{nation:{name:"nation",type:"DBNation"},startDate:{name:"startDate",optional:!0,type:"Long[Timestamp]"},endDate:{name:"endDate",optional:!0,type:"Long[Timestamp]"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},taxrevenue:{help:"",desc:"Generate a google sheet of tax revenue for a list of nations",annotations:{role:{value:["ECON_STAFF","INTERNAL_AFFAIRS_STAFF"],any:!0},isalliance:!0},arguments:{nations:{name:"nations",optional:!0,type:"Set<DBNation>"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"},forceUpdate:{name:"forceUpdate",optional:!0,flag:"f",type:"boolean"},includeUntaxable:{name:"includeUntaxable",optional:!0,flag:"u",desc:"Include the potential revenue of untaxable nations\nAssumes 100/100)",type:"boolean"}}},warreimbursebynationcsv:{help:"",desc:"Generate csv of war cost by nation between alliances (for reimbursement)\nFilters out wars where nations did not perform actions",arguments:{allies:{name:"allies",desc:"The alliances with nations you want to reimburse",type:"Set<DBAlliance>"},enemies:{name:"enemies",desc:"The enemies during the conflict",type:"Set<DBAlliance>"},cutoff:{name:"cutoff",desc:"Starting time of the conflict",type:"long[Timestamp]"},removeWarsWithNoDefenderActions:{name:"removeWarsWithNoDefenderActions",desc:"If wars with no actions by the defender should NOT be reimbursed",type:"boolean"}}},warchestsheet:{help:"",desc:"Get a sheet of members and their saved up warchest (can include deposits and potential revenue)",annotations:{role:{value:["ECON_STAFF","ECON","MILCOM","MILCOM_NO_PINGS"]},isalliance:!0},arguments:{nations:{name:"nations",type:"Set<DBNation>"},perCityWarchest:{name:"perCityWarchest",optional:!0,flag:"c",desc:"The required warchest per city. Else uses the guild default",type:"Map<ResourceType,Double>"},includeGrants:{name:"includeGrants",optional:!0,flag:"g",desc:"Count current grants against warchest totals",type:"boolean"},doNotNormalizeDeposits:{name:"doNotNormalizeDeposits",optional:!0,flag:"n",desc:"If negative deposits are NOT normalized (to ignore negatives)",type:"boolean"},ignoreDeposits:{name:"ignoreDeposits",optional:!0,flag:"d",desc:"If deposits are NOT included in warchest totals",type:"boolean"},ignoreStockpileInExcess:{name:"ignoreStockpileInExcess",optional:!0,flag:"e",desc:"Do not count resources above the required amount toward total warchest value",type:"boolean"},includeRevenueDays:{name:"includeRevenueDays",optional:!0,flag:"r",desc:"Include days of potential revenue toward warchest resources",type:"Integer"},forceUpdate:{name:"forceUpdate",optional:!0,flag:"f",type:"boolean"}}}},sheets_ia:{activitysheet:{help:"",desc:"Generate a sheet of nation login activity from a nation id over a timeframe\nThe columns are the 7 days of the week and then turns of the day (12)\nDays represent the % of that day a nation logs in (UTC)\nNumbers represent the % of that turn a nation logs in",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},startTime:{name:"startTime",optional:!0,desc:"Date to start from",type:"long[Timestamp]",def:"2w"},endTime:{name:"endTime",optional:!0,flag:"e",type:"Long[Timestamp]"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},activitysheetfromid:{help:"",desc:"Generate a sheet of nation login activity from a nation id over a timeframe\nThe columns are the 7 days of the week and then turns of the day (12)\nNote: use the other activity sheet need info of a deleted nation\nDays represent the % of that day a nation logs in (UTC)\nNumbers represent the % of that turn a nation logs in",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nationId:{name:"nationId",type:"int"},startTime:{name:"startTime",optional:!0,desc:"Date to start from",type:"long[Timestamp]",def:"2w"},endTime:{name:"endTime",optional:!0,flag:"e",type:"Long[Timestamp]"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},alliancesheet:{help:"",desc:"Create a sheet of alliances with customized columns\nSee <https://github.com/xdnw/locutus/wiki/nation_placeholders> for a list of placeholders",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nations:{name:"nations",desc:"The nations to include in each alliance",type:"Set<DBNation>"},columns:{name:"columns",desc:"The columns to use in the sheet",type:"List<String>[TextArea]"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},nationsheet:{help:"",desc:"A sheet of nations stats with customizable columns\nSee <https://github.com/xdnw/locutus/wiki/nation_placeholders> for a list of placeholders",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},columns:{name:"columns",desc:"A space separated list of columns to use in the sheet\nCan include NationAttribute as placeholders in columns\nAll NationAttribute placeholders must be surrounded by {} e.g. {nation}",type:"List<String>[TextArea]"},snapshotTime:{name:"snapshotTime",optional:!0,flag:"t",type:"Long[Timestamp]"},updateSpies:{name:"updateSpies",optional:!0,flag:"e",type:"boolean"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},activity_date:{help:"",desc:"Generate a sheet of nation login activity from a nation id over a timeframe\nThe sheet columns are the dates with the values being either 1 or 0 for logging in or not",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},start_time:{name:"start_time",desc:"Date to start from",type:"long[Timestamp]"},end_time:{name:"end_time",type:"long[Timestamp]"},by_turn:{name:"by_turn",optional:!0,flag:"t",type:"boolean"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},daychange:{help:"",desc:"Generate a sheet of nations and their day change\nNations not in an alliance registered to this guild can only show the public day change estimate based on unit purchases",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},declares_date:{help:"",desc:"Generate a sheet of per nation war declare activity over a timeframe\nThe columns represent the time unit (either turns or days) when wars are declared for each nation",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},off:{name:"off",type:"boolean"},def:{name:"def",type:"boolean"},start_time:{name:"start_time",desc:"Date to start from",type:"long[Timestamp]"},end_time:{name:"end_time",type:"long[Timestamp]"},split_off_def:{name:"split_off_def",optional:!0,flag:"d",type:"boolean"},by_turn:{name:"by_turn",optional:!0,flag:"t",type:"boolean"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},deposits_date:{help:"",desc:"Generate a sheet of per nation bank deposit/withdraw activity over a timeframe\nThe columns represent the time unit (either turns or days) when bank transfers occur for each nation\nA positive value represents a deposit, a negative value represents a withdrawal\nWhen both are specified, the net deposit/withdrawal is shown",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},deposit:{name:"deposit",type:"boolean"},withdraw:{name:"withdraw",type:"boolean"},start_time:{name:"start_time",desc:"Date to start from",type:"long[Timestamp]"},end_time:{name:"end_time",type:"long[Timestamp]"},split_deposit_withdraw:{name:"split_deposit_withdraw",optional:!0,flag:"d",type:"boolean"},by_turn:{name:"by_turn",optional:!0,flag:"t",type:"boolean"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}}},sheets_milcom:{desertersheet:{help:"",desc:"Generate a sheet of nations who have left the provided alliances over a timeframe",arguments:{alliances:{name:"alliances",type:"Set<DBAlliance>"},cuttOff:{name:"cuttOff",desc:"Date to start from",type:"long[Timestamp]"},filter:{name:"filter",optional:!0,desc:"Only check these nations",type:"Set<DBNation>"},ignoreInactive:{name:"ignoreInactive",optional:!0,flag:"a",desc:"Ignore inactive nations",type:"boolean"},ignoreVM:{name:"ignoreVM",optional:!0,flag:"v",desc:"Ignore vacation mode nations",type:"boolean"},ignoreMembers:{name:"ignoreMembers",optional:!0,flag:"n",desc:"Ignore nations that are member in an alliance",type:"boolean"}}},intelopsheet:{help:"",desc:"Generate a list of raidable targets to gather intel on\n`<time>`- filters out nations we have loot intel on in that period\n`<attackers>`- The nations to assign to do the ops (i.e. your alliance link)\n`<ignore-topX>`- filter out top X alliances (e.g. due to DNR), in addition to the set `dnr` coalition\n\nAdd `-l` to remove targets with loot history\nAdd `-d` to list targets currently on the dnr\n\ne.g. `/sheets_milcom intelopsheet time:10d attacker:Rose dnrtopx:25`",annotations:{role:{value:["MILCOM"]}},arguments:{time:{name:"time",type:"long[Timestamp]"},attackers:{name:"attackers",type:"Set<DBNation>"},dnrTopX:{name:"dnrTopX",optional:!0,desc:"Exclude nations in the top X alliances (or direct allies)",type:"Integer"},ignoreWithLootHistory:{name:"ignoreWithLootHistory",optional:!0,flag:"l",desc:"If nations with loot history are ignored",type:"boolean"},ignoreDNR:{name:"ignoreDNR",optional:!0,flag:"d",desc:"If the alliance Do Not Raid settings are checked",type:"boolean"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},mmrsheet:{help:"",desc:"Generate a sheet of alliance/nation/city military unit and building counts (MMR)",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"},forceUpdate:{name:"forceUpdate",optional:!0,flag:"f",type:"boolean"},showCities:{name:"showCities",optional:!0,flag:"c",desc:"List the military building count of each city instead of each nation",type:"boolean"},snapshotTime:{name:"snapshotTime",optional:!0,flag:"t",type:"Long[Timestamp]"}}},spysheet:{help:"",desc:"Generate a spy blitz sheet with the defender on the left and attackers on the right",groups:["Operation Settings","Sheet Settings","Weighting Settings"],annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{attackers:{name:"attackers",type:"Set<DBNation>"},defenders:{name:"defenders",type:"Set<DBNation>"},allowedTypes:{name:"allowedTypes",optional:!0,desc:"Allowed spy operations",group:0,type:"Set<Operation>",def:"nuke,missile,ships,aircraft,tanks,spies"},checkEspionageSlots:{name:"checkEspionageSlots",optional:!0,flag:"e",desc:"Check the defensive spy slots",group:0,type:"boolean"},prioritizeKills:{name:"prioritizeKills",optional:!0,flag:"k",desc:"Prioritize unit kills instead of damage",group:0,type:"boolean"},maxDef:{name:"maxDef",optional:!0,flag:"d",desc:"Max Attackers to assign per defender",group:0,type:"Integer",def:"3",min:1},doubleOps:{name:"doubleOps",optional:!0,flag:"o",desc:"Double the offensive spy ops, e.g. two sets of ops at day change\nNote: You should also set maxDef to e.g. `6`",group:0,type:"boolean"},removeSheets:{name:"removeSheets",optional:!0,flag:"r",desc:"Remove the available spy ops in another spreadsheet",group:1,type:"Set<SpreadSheet>"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"},prioritizeAlliances:{name:"prioritizeAlliances",optional:!0,flag:"p",desc:"Prioritize defenders in these alliances",group:2,type:"Set<DBAlliance>"},attackerWeighting:{name:"attackerWeighting",optional:!0,flag:"aw",desc:"Fine grained control over attacker priority\ne.g. `(#warpolicy=ARCANE?1.2:1)*(#active_m<1440?1.2:1)*(#hasProject(SS)?1.2:1)`",group:2,type:"TypedFunction<DBNation,Double>"},defenderWeighting:{name:"defenderWeighting",optional:!0,flag:"dw",desc:"Fine grained control over defender priority",group:2,type:"TypedFunction<DBNation,Double>"},forceUpdate:{name:"forceUpdate",optional:!0,flag:"f",desc:"Force an update of all participant spy count",type:"boolean"}}},warcostbyalliancesheet:{help:"",desc:"War cost (for each alliance) broken down\nDamage columns:\n- net damage (unit, infrastructure, loot, consumption, total)\n- losses (unit, infrastructure, consumption, total)\n- damage inflicted (unit, infrastructure, consumption, total)\n- net resources (money, gasoline, munitions, aluminum, steel)",arguments:{nations:{name:"nations",type:"Set<DBNation>"},time:{name:"time",type:"long[Timestamp]"},includeInactives:{name:"includeInactives",optional:!0,flag:"i",type:"boolean"},includeApplicants:{name:"includeApplicants",optional:!0,flag:"a",type:"boolean"}}},warcostbyresourcesheet:{help:"",desc:"Transfer sheet of war cost (for each nation) broken down by resource type\nUseful to see costs incurred by fighting for each nation, to plan for future wars, or to help with reimbursement",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{attackers:{name:"attackers",type:"Set<NationOrAlliance>"},defenders:{name:"defenders",type:"Set<NationOrAlliance>"},time:{name:"time",type:"long[Timestamp]"},excludeConsumption:{name:"excludeConsumption",optional:!0,flag:"c",type:"boolean"},excludeInfra:{name:"excludeInfra",optional:!0,flag:"i",type:"boolean"},excludeLoot:{name:"excludeLoot",optional:!0,flag:"l",type:"boolean"},excludeUnitCost:{name:"excludeUnitCost",optional:!0,flag:"u",type:"boolean"},includeGray:{name:"includeGray",optional:!0,flag:"g",desc:"Include nations on the gray color bloc",type:"boolean"},includeDefensives:{name:"includeDefensives",optional:!0,flag:"d",desc:"Include defensive wars",type:"boolean"},normalizePerCity:{name:"normalizePerCity",optional:!0,flag:"n",desc:"Use the average cost per city",type:"boolean"},normalizePerWar:{name:"normalizePerWar",optional:!0,flag:"w",desc:"Use the average cost per war",type:"boolean"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},warcostsheet:{help:"",desc:"War cost (for each nation) broken down by war type\nThe sheet is divided into groups for:\n- Raids: Attacking nations which do not fight back\n- Defenses: Attacked by a nation and fighting back\n- Offenses: Attacking a nation which fights back\n- Wars: Combination of defensive and offensive wars (not raids)",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{attackers:{name:"attackers",type:"Set<NationOrAlliance>"},defenders:{name:"defenders",type:"Set<NationOrAlliance>"},time:{name:"time",type:"long[Timestamp]"},endTime:{name:"endTime",optional:!0,type:"Long[Timestamp]"},excludeConsumption:{name:"excludeConsumption",optional:!0,flag:"c",type:"boolean"},excludeInfra:{name:"excludeInfra",optional:!0,flag:"i",type:"boolean"},excludeLoot:{name:"excludeLoot",optional:!0,flag:"l",type:"boolean"},excludeUnitCost:{name:"excludeUnitCost",optional:!0,flag:"u",type:"boolean"},normalizePerCity:{name:"normalizePerCity",optional:!0,flag:"n",desc:"Average the cost by the nation's city count",type:"boolean"},useLeader:{name:"useLeader",optional:!0,flag:"leader",type:"boolean"},total:{name:"total",optional:!0,flag:"t",type:"boolean"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},combatantsheet:{help:"",desc:"Generate a sheet of nations and their military units relative to the nations they are fighting",arguments:{nations:{name:"nations",type:"Set<DBNation>"},includeInactive:{name:"includeInactive",optional:!0,flag:"i",desc:"Include inactive nations (2 days)",type:"boolean"},includeApplicants:{name:"includeApplicants",optional:!0,flag:"a",type:"boolean"}}},converthidudespysheet:{help:"",desc:"Convert hidude's spy sheet format to the bot's format",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{input:{name:"input",type:"SpreadSheet"},output:{name:"output",optional:!0,flag:"s",type:"SpreadSheet"},groupByAttacker:{name:"groupByAttacker",optional:!0,flag:"a",desc:"If results (left column) are grouped by the attacker instead of the defender",type:"boolean"},forceUpdate:{name:"forceUpdate",optional:!0,flag:"f",type:"boolean"}}},converttkrspysheet:{help:"",desc:"Convert TKR's spy sheet format to the bot's format",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{input:{name:"input",type:"SpreadSheet"},output:{name:"output",optional:!0,flag:"s",type:"SpreadSheet"},groupByAttacker:{name:"groupByAttacker",optional:!0,flag:"a",desc:"If results (left column) are grouped by the attacker instead of the defender",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},convertdtcspysheet:{help:"",desc:"Convert dtc's spy sheet format to the bot's format",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{input:{name:"input",type:"SpreadSheet"},output:{name:"output",optional:!0,flag:"s",type:"SpreadSheet"},groupByAttacker:{name:"groupByAttacker",optional:!0,flag:"a",desc:"If results (left column) are grouped by the attacker instead of the defender",type:"boolean"},forceUpdate:{name:"forceUpdate",optional:!0,flag:"f",type:"boolean"}}},listspytargets:{help:"",desc:"Generate a subset of a spy sheet for only certain attackers or defenders",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{spySheet:{name:"spySheet",desc:"The current spy sheet",type:"SpreadSheet"},attackers:{name:"attackers",desc:"Which attackers to include",type:"Set<DBNation>"},defenders:{name:"defenders",optional:!0,desc:"Which defenders to include\nDefault: All",type:"Set<DBNation>",def:"*"},headerRow:{name:"headerRow",optional:!0,flag:"h",desc:"The row the header is on\nDefault: 1st row",type:"Integer"},output:{name:"output",optional:!0,flag:"s",desc:"Sheet to put the subset in",type:"SpreadSheet"},groupByAttacker:{name:"groupByAttacker",optional:!0,flag:"a",desc:"Group the spy operations (left column) by attacker",type:"boolean"}}},lootvaluesheet:{help:"",desc:"Generate a list of nations and their expected raid loot\ne.g. `/sheets_milcom lootvaluesheet #cities<10,#position>1,#active_m<2880,someAlliance`",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{attackers:{name:"attackers",type:"Set<DBNation>"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},unit_buy_sheet:{help:"",desc:"Generate a sheet of guild member nations and their unit buys today",annotations:{isalliance:!0,hasapi:!0,role:{value:["INTERNAL_AFFAIRS_STAFF","ECON_STAFF","MILCOM"],any:!0}},arguments:{nations:{name:"nations",optional:!0,desc:"Nations to list in the sheet\nDefaults to the guild alliance",type:"Set<DBNation>"},addColumns:{name:"addColumns",optional:!0,desc:"A space separated list of columns to add to the sheet\nCan include NationAttribute as placeholders in columns\nAll NationAttribute placeholders must be surrounded by {} e.g. {nation}",type:"List<String>[TextArea]"},sheet:{name:"sheet",optional:!0,flag:"sheet",type:"SpreadSheet"}}},validatespyblitzsheet:{help:"",desc:"Run checks on a spy blitz sheet.\nChecks that all nations are in range of their spy blitz targets and that they have no more than the provided number of offensive operations.\nAdd `true` for the day-change argument to double the offensive op limit",annotations:{role:{value:["MILCOM"]}},arguments:{sheet:{name:"sheet",optional:!0,type:"SpreadSheet"},dayChange:{name:"dayChange",optional:!0,desc:"If the sheet is for attacks at day change",type:"boolean",def:"false"},filter:{name:"filter",optional:!0,desc:"Only allow attacking these nations",type:"Set<DBNation>",def:"*"},useLeader:{name:"useLeader",optional:!0,flag:"l",desc:"Parse nation leader instead of nation name",type:"boolean"}}},warsheet:{help:"",desc:"Generate a sheet of active wars between two coalitions (allies, enemies)\nAdd `-i` to list concluded wars",groups:["Additional War Options"],annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{allies:{name:"allies",type:"Set<DBNation>"},enemies:{name:"enemies",type:"Set<DBNation>"},startTime:{name:"startTime",optional:!0,desc:"Cutoff date for wars (default 5 days ago)",group:0,type:"long[Timestamp]",def:"5d"},endTime:{name:"endTime",optional:!0,flag:"e",type:"Long[Timestamp]"},includeConcludedWars:{name:"includeConcludedWars",optional:!0,flag:"i",desc:"If concluded wars within the timeframe should be included",group:0,type:"boolean"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},warchestsheet:{help:"",desc:"Get a sheet of members and their saved up warchest (can include deposits and potential revenue)",annotations:{role:{value:["ECON_STAFF","ECON","MILCOM","MILCOM_NO_PINGS"]},isalliance:!0},arguments:{nations:{name:"nations",type:"Set<DBNation>"},perCityWarchest:{name:"perCityWarchest",optional:!0,flag:"c",desc:"The required warchest per city. Else uses the guild default",type:"Map<ResourceType,Double>"},includeGrants:{name:"includeGrants",optional:!0,flag:"g",desc:"Count current grants against warchest totals",type:"boolean"},doNotNormalizeDeposits:{name:"doNotNormalizeDeposits",optional:!0,flag:"n",desc:"If negative deposits are NOT normalized (to ignore negatives)",type:"boolean"},ignoreDeposits:{name:"ignoreDeposits",optional:!0,flag:"d",desc:"If deposits are NOT included in warchest totals",type:"boolean"},ignoreStockpileInExcess:{name:"ignoreStockpileInExcess",optional:!0,flag:"e",desc:"Do not count resources above the required amount toward total warchest value",type:"boolean"},includeRevenueDays:{name:"includeRevenueDays",optional:!0,flag:"r",desc:"Include days of potential revenue toward warchest resources",type:"Integer"},forceUpdate:{name:"forceUpdate",optional:!0,flag:"f",type:"boolean"}}}},simulate:{air:{help:"",desc:"Simulate an airstrike with the given attacker and defender aircraft",arguments:{attAircraft:{name:"attAircraft",type:"int"},defAircraft:{name:"defAircraft",type:"int"}}},casualties:{help:"",desc:"Simulate an attack between two nations and return the odds and casualties\nConfigure fortification, air control, projects and infrastructure overrides.",groups:["Main Parameters","Military Units","War Policy","War Control","Projects","Infrastructure"],arguments:{attack:{name:"attack",desc:"The type of attack to perform",group:0,type:"AttackType"},warType:{name:"warType",desc:"War declaration type",group:0,type:"WarType"},enemy:{name:"enemy",desc:"Enemy nation to attack",group:0,type:"DBNation"},me:{name:"me",optional:!0,desc:"Primary nation (defaults to your nation)",group:0,type:"DBNation",def:"%user%"},selfIsDefender:{name:"selfIsDefender",optional:!0,flag:"s",desc:"Swap roles: you become defender",group:0,type:"boolean"},attackerMilitary:{name:"attackerMilitary",optional:!0,desc:"Override attacker military units",group:1,type:"Map<MilitaryUnit,Long>"},defenderMilitary:{name:"defenderMilitary",optional:!0,desc:"Override defender military units",group:1,type:"Map<MilitaryUnit,Long>"},unequipAttackerSoldiers:{name:"unequipAttackerSoldiers",optional:!0,flag:"ua",desc:"No munitions for attacker soldiers",group:1,type:"boolean"},unequipDefenderSoldiers:{name:"unequipDefenderSoldiers",optional:!0,flag:"ud",desc:"No munitions for defender soldiers",group:1,type:"boolean"},attackerPolicy:{name:"attackerPolicy",optional:!0,flag:"att_policy",desc:"Attacker war policy",group:2,type:"WarPolicy"},defenderPolicy:{name:"defenderPolicy",optional:!0,flag:"def_policy",desc:"Defender war policy",group:2,type:"WarPolicy"},defFortified:{name:"defFortified",optional:!0,flag:"f",desc:"Defender is fortified",group:3,type:"boolean"},attAirControl:{name:"attAirControl",optional:!0,flag:"ac",desc:"Attacker has air control",group:3,type:"boolean"},defAirControl:{name:"defAirControl",optional:!0,flag:"dac",desc:"Defender has air control",group:3,type:"boolean"},att_ground_control:{name:"att_ground_control",optional:!0,flag:"agc",desc:"Attacker has ground control",group:3,type:"boolean"},attackerProjects:{name:"attackerProjects",optional:!0,flag:"ap",desc:"Attacker projects",group:4,type:"Set<Project>"},defenderProjects:{name:"defenderProjects",optional:!0,flag:"dp",desc:"Defender projects",group:4,type:"Set<Project>"},attacker_infra:{name:"attacker_infra",optional:!0,flag:"ai",desc:"Override attacker infrastructure level",group:5,type:"Integer"},defender_infra:{name:"defender_infra",optional:!0,flag:"di",desc:"Override defender infrastructure level",group:5,type:"Integer"}}},fastbeige:{help:"",desc:"Return quickest attacks to beige an enemy at a resistance level",arguments:{resistance:{name:"resistance",type:"int",min:1,max:100},noGround:{name:"noGround",optional:!0,flag:"g",desc:"Don't allow ground attacks",type:"boolean"},noShip:{name:"noShip",optional:!0,flag:"s",desc:"Don't allow naval attacks",type:"boolean"},noAir:{name:"noAir",optional:!0,flag:"a",desc:"Don't allow aircraft attacks",type:"boolean"},noMissile:{name:"noMissile",optional:!0,flag:"m",desc:"Don't allow missile attacks",type:"boolean"},noNuke:{name:"noNuke",optional:!0,flag:"n",desc:"Don't allow nuclear attacks",type:"boolean"}}},ground:{help:"",desc:"Simulate a ground attack with the given attacker and defender troops\nHalve the tank number if the opponent has air control\nNote: Use math via: `50/2`",arguments:{attSoldiersUnarmed:{name:"attSoldiersUnarmed",type:"int",min:0},attSoldiers:{name:"attSoldiers",type:"int",min:0},attTanks:{name:"attTanks",type:"int",min:0},defSoldiersUnarmed:{name:"defSoldiersUnarmed",type:"int",min:0},defSoldiers:{name:"defSoldiers",type:"int",min:0},defTanks:{name:"defTanks",type:"int",min:0}}},naval:{help:"",desc:"Simulate a naval battle with the given attacker and defender ships",arguments:{attShips:{name:"attShips",type:"int"},defShips:{name:"defShips",type:"int"}}}},spy:{counter:{help:"",desc:"Find nations to do a spy op against the specified enemy\nOp types: (INTEL,NUKE,MISSILE,SHIPS,AIRCRAFT,TANKS,SPIES,SOLDIER) or `*` (for all op types)\nThe alliance argument is optional\nUse `success>80` to specify a cutoff for spyop success",annotations:{role:{value:["MEMBER"]}},arguments:{enemy:{name:"enemy",desc:"The enemy to spy",type:"DBNation"},operations:{name:"operations",desc:"The allowed spy operations",type:"Set<Operation>"},counterWith:{name:"counterWith",optional:!0,desc:"The nations doing the spy ops on the enemy\nDefaults to nations in the alliance",type:"Set<DBNation>"},minSuccess:{name:"minSuccess",optional:!0,flag:"s",desc:"Required success rate for the spy op",type:"Integer",min:0,max:100}}},find:{intel:{help:"",desc:"Find nations to gather intel on (sorted by infra * days since last intel)",annotations:{role:{value:["MEMBER"]}},arguments:{dnrTopX:{name:"dnrTopX",optional:!0,desc:"Exclude nations in the top X alliances (or direct allies)",type:"Integer"},ignoreDNR:{name:"ignoreDNR",optional:!0,flag:"d",desc:"If the alliance Do Not Raid settings are ignore",type:"boolean"},attacker:{name:"attacker",optional:!0,flag:"n",desc:"The nation gathering intel",type:"DBNation"},score:{name:"score",optional:!0,flag:"s",desc:"The score range of the nation gathering intel",type:"Double"}}},target:{help:"",desc:"List enemies and spy operation by the highest damage:\nUse `*` for the alliance to target enemies with active wars against allies\nUse `*` for op type to automatically find the best op type\nUse e.g. `80` as the `requiredSuccess` to only list operations above 80% success\n\ne.g. `/spy find target targets:enemies operations:spies`",annotations:{role:{value:["MEMBER"]}},arguments:{targets:{name:"targets",desc:"The allowed targets",type:"Set<DBNation>"},operations:{name:"operations",desc:"The allowed operations",type:"Set<Operation>"},requiredSuccess:{name:"requiredSuccess",optional:!0,desc:"The required chance of success for an operation",type:"int",def:"40",min:0,max:100},directMesssage:{name:"directMesssage",optional:!0,flag:"d",desc:"Return results as a discord direct message",type:"boolean"},prioritizeKills:{name:"prioritizeKills",optional:!0,flag:"k",desc:"Prioritize by unit kills (including spies) instead of net damage",type:"boolean"},attacker:{name:"attacker",optional:!0,flag:"n",desc:"The nation doing the spy operation\nDefaults to your nation",type:"DBNation"}}}},sheet:{converthidude:{help:"",desc:"Convert hidude's spy sheet format to the bot's format",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{input:{name:"input",type:"SpreadSheet"},output:{name:"output",optional:!0,flag:"s",type:"SpreadSheet"},groupByAttacker:{name:"groupByAttacker",optional:!0,flag:"a",desc:"If results (left column) are grouped by the attacker instead of the defender",type:"boolean"},forceUpdate:{name:"forceUpdate",optional:!0,flag:"f",type:"boolean"}}},converttkr:{help:"",desc:"Convert TKR's spy sheet format to the bot's format",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{input:{name:"input",type:"SpreadSheet"},output:{name:"output",optional:!0,flag:"s",type:"SpreadSheet"},groupByAttacker:{name:"groupByAttacker",optional:!0,flag:"a",desc:"If results (left column) are grouped by the attacker instead of the defender",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},convertdtc:{help:"",desc:"Convert dtc's spy sheet format to the bot's format",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{input:{name:"input",type:"SpreadSheet"},output:{name:"output",optional:!0,flag:"s",type:"SpreadSheet"},groupByAttacker:{name:"groupByAttacker",optional:!0,flag:"a",desc:"If results (left column) are grouped by the attacker instead of the defender",type:"boolean"},forceUpdate:{name:"forceUpdate",optional:!0,flag:"f",type:"boolean"}}},copyforalliance:{help:"",desc:"Generate a subset of a spy sheet for only certain attackers or defenders",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{spySheet:{name:"spySheet",desc:"The current spy sheet",type:"SpreadSheet"},attackers:{name:"attackers",desc:"Which attackers to include",type:"Set<DBNation>"},defenders:{name:"defenders",optional:!0,desc:"Which defenders to include\nDefault: All",type:"Set<DBNation>",def:"*"},headerRow:{name:"headerRow",optional:!0,flag:"h",desc:"The row the header is on\nDefault: 1st row",type:"Integer"},output:{name:"output",optional:!0,flag:"s",desc:"Sheet to put the subset in",type:"SpreadSheet"},groupByAttacker:{name:"groupByAttacker",optional:!0,flag:"a",desc:"Group the spy operations (left column) by attacker",type:"boolean"}}},free_ops:{help:"",desc:"Generate a sheet of guild member nations that have free espionage spy operations\nUseful for finding who can participate in a spy blitz",annotations:{isalliance:!0,hasapi:!0,role:{value:["INTERNAL_AFFAIRS_STAFF","ECON_STAFF","MILCOM"],any:!0}},arguments:{nations:{name:"nations",optional:!0,desc:"Nations to list in the sheet\nDefaults to the guild alliance",type:"Set<DBNation>"},addColumns:{name:"addColumns",optional:!0,desc:"A space separated list of columns to add to the sheet\nCan include NationAttribute as placeholders in columns\nAll NationAttribute placeholders must be surrounded by {} e.g. {nation}",type:"List<String>[TextArea]"},requireXFreeOps:{name:"requireXFreeOps",optional:!0,flag:"r",desc:"Number of free espionage ops required",type:"Integer"},requireSpies:{name:"requireSpies",optional:!0,flag:"s",desc:"Number of spies required",type:"Integer"},sheet:{name:"sheet",optional:!0,flag:"sheet",type:"SpreadSheet"}}},generate:{help:"",desc:"Generate a spy blitz sheet with the defender on the left and attackers on the right",groups:["Operation Settings","Sheet Settings","Weighting Settings"],annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{attackers:{name:"attackers",type:"Set<DBNation>"},defenders:{name:"defenders",type:"Set<DBNation>"},allowedTypes:{name:"allowedTypes",optional:!0,desc:"Allowed spy operations",group:0,type:"Set<Operation>",def:"nuke,missile,ships,aircraft,tanks,spies"},checkEspionageSlots:{name:"checkEspionageSlots",optional:!0,flag:"e",desc:"Check the defensive spy slots",group:0,type:"boolean"},prioritizeKills:{name:"prioritizeKills",optional:!0,flag:"k",desc:"Prioritize unit kills instead of damage",group:0,type:"boolean"},maxDef:{name:"maxDef",optional:!0,flag:"d",desc:"Max Attackers to assign per defender",group:0,type:"Integer",def:"3",min:1},doubleOps:{name:"doubleOps",optional:!0,flag:"o",desc:"Double the offensive spy ops, e.g. two sets of ops at day change\nNote: You should also set maxDef to e.g. `6`",group:0,type:"boolean"},removeSheets:{name:"removeSheets",optional:!0,flag:"r",desc:"Remove the available spy ops in another spreadsheet",group:1,type:"Set<SpreadSheet>"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"},prioritizeAlliances:{name:"prioritizeAlliances",optional:!0,flag:"p",desc:"Prioritize defenders in these alliances",group:2,type:"Set<DBAlliance>"},attackerWeighting:{name:"attackerWeighting",optional:!0,flag:"aw",desc:"Fine grained control over attacker priority\ne.g. `(#warpolicy=ARCANE?1.2:1)*(#active_m<1440?1.2:1)*(#hasProject(SS)?1.2:1)`",group:2,type:"TypedFunction<DBNation,Double>"},defenderWeighting:{name:"defenderWeighting",optional:!0,flag:"dw",desc:"Fine grained control over defender priority",group:2,type:"TypedFunction<DBNation,Double>"},forceUpdate:{name:"forceUpdate",optional:!0,flag:"f",desc:"Force an update of all participant spy count",type:"boolean"}}},intel:{help:"",desc:"Generate a list of raidable targets to gather intel on\n`<time>`- filters out nations we have loot intel on in that period\n`<attackers>`- The nations to assign to do the ops (i.e. your alliance link)\n`<ignore-topX>`- filter out top X alliances (e.g. due to DNR), in addition to the set `dnr` coalition\n\nAdd `-l` to remove targets with loot history\nAdd `-d` to list targets currently on the dnr\n\ne.g. `/sheets_milcom intelopsheet time:10d attacker:Rose dnrtopx:25`",annotations:{role:{value:["MILCOM"]}},arguments:{time:{name:"time",type:"long[Timestamp]"},attackers:{name:"attackers",type:"Set<DBNation>"},dnrTopX:{name:"dnrTopX",optional:!0,desc:"Exclude nations in the top X alliances (or direct allies)",type:"Integer"},ignoreWithLootHistory:{name:"ignoreWithLootHistory",optional:!0,flag:"l",desc:"If nations with loot history are ignored",type:"boolean"},ignoreDNR:{name:"ignoreDNR",optional:!0,flag:"d",desc:"If the alliance Do Not Raid settings are checked",type:"boolean"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},validate:{help:"",desc:"Run checks on a spy blitz sheet.\nChecks that all nations are in range of their spy blitz targets and that they have no more than the provided number of offensive operations.\nAdd `true` for the day-change argument to double the offensive op limit",annotations:{role:{value:["MILCOM"]}},arguments:{sheet:{name:"sheet",optional:!0,type:"SpreadSheet"},dayChange:{name:"dayChange",optional:!0,desc:"If the sheet is for attacks at day change",type:"boolean",def:"false"},filter:{name:"filter",optional:!0,desc:"Only allow attacking these nations",type:"Set<DBNation>",def:"*"},useLeader:{name:"useLeader",optional:!0,flag:"l",desc:"Parse nation leader instead of nation name",type:"boolean"}}}},tiergraph:{help:"",desc:"Generate a graph of spy counts by city count between two coalitions\nNations which are applicants, in vacation mode or inactive (2 days) are excluded",arguments:{coalition1:{name:"coalition1",type:"Set<DBNation>"},coalition2:{name:"coalition2",type:"Set<DBNation>"},includeInactives:{name:"includeInactives",optional:!0,flag:"i",type:"boolean"},includeApplicants:{name:"includeApplicants",optional:!0,flag:"a",type:"boolean"},total:{name:"total",optional:!0,flag:"t",desc:"Graph the total spies instead of average per nation",type:"boolean"},barGraph:{name:"barGraph",optional:!0,flag:"b",type:"boolean"},attachJson:{name:"attachJson",optional:!0,flag:"j",type:"boolean"},attachCsv:{name:"attachCsv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"ss",type:"boolean"}}}},stats:{other:{aa_metrics_by_turn:{help:"",desc:"Graph multiple metrics for a coalition of alliances over a period of time",arguments:{metrics:{name:"metrics",type:"Set<AllianceMetric>"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",type:"long[Timestamp]"},coalition:{name:"coalition",type:"Set<DBAlliance>"},attach_json:{name:"attach_json",optional:!0,flag:"j",type:"boolean"},attach_csv:{name:"attach_csv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"ss",type:"boolean"}}},coalition_metric_by_turn:{help:"",desc:"Compare a stat of up to 10 alliances/coalitions on a single time graph",arguments:{metric:{name:"metric",type:"AllianceMetric"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",type:"long[Timestamp]"},coalition1:{name:"coalition1",type:"Set<DBAlliance>"},coalition2:{name:"coalition2",type:"Set<DBAlliance>"},coalition3:{name:"coalition3",optional:!0,type:"Set<DBAlliance>"},coalition4:{name:"coalition4",optional:!0,type:"Set<DBAlliance>"},coalition5:{name:"coalition5",optional:!0,type:"Set<DBAlliance>"},coalition6:{name:"coalition6",optional:!0,type:"Set<DBAlliance>"},coalition7:{name:"coalition7",optional:!0,type:"Set<DBAlliance>"},coalition8:{name:"coalition8",optional:!0,type:"Set<DBAlliance>"},coalition9:{name:"coalition9",optional:!0,type:"Set<DBAlliance>"},coalition10:{name:"coalition10",optional:!0,type:"Set<DBAlliance>"},attach_json:{name:"attach_json",optional:!0,flag:"j",type:"boolean"},attach_csv:{name:"attach_csv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"ss",type:"boolean"}}}},tier:{tier_by_coalition:{help:"",desc:"Compare the tier stats of up to 10 alliances/nations on a single graph",arguments:{metric:{name:"metric",type:"TypedFunction<DBNation,Double>"},groupBy:{name:"groupBy",type:"TypedFunction<DBNation,Double>"},coalition1:{name:"coalition1",type:"Set<DBNation>"},coalition2:{name:"coalition2",optional:!0,type:"Set<DBNation>"},coalition3:{name:"coalition3",optional:!0,type:"Set<DBNation>"},coalition4:{name:"coalition4",optional:!0,type:"Set<DBNation>"},coalition5:{name:"coalition5",optional:!0,type:"Set<DBNation>"},coalition6:{name:"coalition6",optional:!0,type:"Set<DBNation>"},coalition7:{name:"coalition7",optional:!0,type:"Set<DBNation>"},coalition8:{name:"coalition8",optional:!0,type:"Set<DBNation>"},coalition9:{name:"coalition9",optional:!0,type:"Set<DBNation>"},coalition10:{name:"coalition10",optional:!0,type:"Set<DBNation>"},total:{name:"total",optional:!0,flag:"t",type:"boolean"},includeApps:{name:"includeApps",optional:!0,flag:"a",type:"boolean"},includeVm:{name:"includeVm",optional:!0,flag:"v",type:"boolean"},includeInactive:{name:"includeInactive",optional:!0,flag:"i",type:"boolean"},snapshotDate:{name:"snapshotDate",optional:!0,flag:"s",type:"Long[Timestamp]"},attach_json:{name:"attach_json",optional:!0,flag:"j",type:"boolean"},attach_csv:{name:"attach_csv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"ss",type:"boolean"}}}}},stats_other:{alliancemetricab:{help:"",desc:"Graph an alliance metric over time for two coalitions",arguments:{metric:{name:"metric",type:"AllianceMetric"},coalition1:{name:"coalition1",type:"Set<DBAlliance>"},coalition2:{name:"coalition2",type:"Set<DBAlliance>"},start:{name:"start",desc:"Date to start from",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"},attachJson:{name:"attachJson",optional:!0,flag:"j",type:"boolean"},attachCsv:{name:"attachCsv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"s",type:"boolean"}}},alliancenationssheet:{help:"",desc:"Create a google sheet of nations, grouped by alliance, with the specified columns\nPrefix a column with `avg:` to force an average\nPrefix a column with `total:` to force a total",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},columns:{name:"columns",desc:"The columns to have. See: <https://github.com/xdnw/locutus/wiki/nation_placeholders>",type:"List<String>[TextArea]"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"},useTotal:{name:"useTotal",optional:!0,flag:"t",desc:"Use the sum of each nation's attributes instead of the average",type:"boolean"},includeInactives:{name:"includeInactives",optional:!0,flag:"i",type:"boolean"},includeApplicants:{name:"includeApplicants",optional:!0,flag:"a",type:"boolean"}}},data_csv:{alliancesdatabyday:{help:"",desc:"Get alliance attributes by day\nIf your metric does not relate to cities, set `skipCityData` to true to speed up the process.",arguments:{metric:{name:"metric",type:"TypedFunction<DBNation,Double>"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",type:"long[Timestamp]"},mode:{name:"mode",type:"AllianceMetricMode"},alliances:{name:"alliances",optional:!0,desc:"The alliances to include. Defaults to top 15",type:"Set<DBAlliance>"},filter:{name:"filter",optional:!0,type:"Predicate<DBNation>"},graph:{name:"graph",optional:!0,flag:"g",type:"boolean"},includeApps:{name:"includeApps",optional:!0,flag:"a",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"s",type:"boolean"}}}},findproducer:{help:"",desc:"Get a ranking of alliances or nations by their net resource production",groups:["Production Filters","Ranking Options","Snapshot Settings","Output Options"],arguments:{resources:{name:"resources",desc:"The resources to rank production of\nUse `*` to rank all resources",type:"Set<ResourceType>"},nationList:{name:"nationList",optional:!0,desc:"Nations to include in the ranking",type:"Set<DBNation>"},ignoreMilitaryUpkeep:{name:"ignoreMilitaryUpkeep",optional:!0,flag:"m",desc:"Exclude military unit upkeep",group:0,type:"boolean"},ignoreTradeBonus:{name:"ignoreTradeBonus",optional:!0,flag:"t",desc:"Exclude color trade bloc bonus",group:0,type:"boolean"},ignoreNationBonus:{name:"ignoreNationBonus",optional:!0,flag:"b",desc:"Exclude the new nation bonus",group:0,type:"boolean"},includeNegative:{name:"includeNegative",optional:!0,flag:"n",desc:"Include negative resource revenue",group:0,type:"boolean"},includeInactive:{name:"includeInactive",optional:!0,flag:"i",desc:"Include inactive nations (2 days)",group:0,type:"boolean"},listByNation:{name:"listByNation",optional:!0,flag:"a",desc:"Rank by nation instead of alliances",group:1,type:"boolean"},listAverage:{name:"listAverage",optional:!0,flag:"s",desc:"Rank by average per nation instead of total",group:1,type:"boolean"},snapshotDate:{name:"snapshotDate",optional:!0,flag:"d",desc:"The date to use for the snapshot",group:2,type:"Long[Timestamp]"},uploadFile:{name:"uploadFile",optional:!0,flag:"u",desc:"Upload the results as a file",group:3,type:"boolean"},num_results:{name:"num_results",optional:!0,flag:"r",desc:"The number of results to show",group:3,type:"Integer"},highlight:{name:"highlight",optional:!0,flag:"h",desc:"Highlight specific entries in the result",group:3,type:"Set<NationOrAlliance>"}}},global_metrics:{by_time:{help:"",desc:"Generate a graph for a global game statistic by day",arguments:{metrics:{name:"metrics",type:"Set<OrbisMetric>"},start:{name:"start",optional:!0,type:"Long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"},attachJson:{name:"attachJson",optional:!0,flag:"j",type:"boolean"},attachCsv:{name:"attachCsv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"ss",type:"boolean"}}}},inflows:{help:"",desc:"List the public resource imports or exports of a nation or alliance to other nations or alliances over a period of time",arguments:{nationOrAlliances:{name:"nationOrAlliances",type:"Set<NationOrAlliance>"},cutoffMs:{name:"cutoffMs",desc:"Date to start from",type:"long[Timestamp]"},hideInflows:{name:"hideInflows",optional:!0,flag:"i",desc:"Do not show inflows",type:"boolean"},hideOutflows:{name:"hideOutflows",optional:!0,flag:"o",desc:"Do not show outflows",type:"boolean"}}},metric_compare_by_turn:{help:"",desc:"Compare the metric over time between multiple alliances",arguments:{metric:{name:"metric",type:"AllianceMetric"},alliances:{name:"alliances",type:"Set<DBAlliance>"},start:{name:"start",desc:"Date to start from",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"},attachJson:{name:"attachJson",optional:!0,flag:"j",type:"boolean"},attachCsv:{name:"attachCsv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"s",type:"boolean"}}},nationranking:{help:"",desc:"Rank nations by an attribute",arguments:{nations:{name:"nations",type:"Set<DBNation>"},attribute:{name:"attribute",type:"TypedFunction<DBNation,Double>"},groupByAlliance:{name:"groupByAlliance",optional:!0,flag:"a",type:"boolean"},reverseOrder:{name:"reverseOrder",optional:!0,flag:"r",type:"boolean"},snapshotDate:{name:"snapshotDate",optional:!0,flag:"s",type:"Long[Timestamp]"},total:{name:"total",optional:!0,flag:"t",desc:"Total value instead of average per nation",type:"boolean"}}},radiationbyturn:{help:"",desc:"Graph global and per continent radiation by turn over a specified time period",arguments:{continents:{name:"continents",type:"Set<Continent>"},start:{name:"start",desc:"Date to start from",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"},attachJson:{name:"attachJson",optional:!0,flag:"j",type:"boolean"},attachCsv:{name:"attachCsv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"s",type:"boolean"}}},recruitmentrankings:{help:"",desc:"Rank alliances by their new members over a timeframe\nA recruitment is when a NONE which was not a former member within the timeframe gets set to member",arguments:{cutoff:{name:"cutoff",desc:"Date to start from",type:"long[Timestamp]"},topX:{name:"topX",optional:!0,desc:"Top X alliances to show in the ranking",type:"int",def:"80",min:1,max:150},uploadFile:{name:"uploadFile",optional:!0,flag:"u",type:"boolean"}}},tradepricebyday:{help:"",desc:"Generate a graph of average buy and sell trade price by day",arguments:{resources:{name:"resources",type:"Set<ResourceType>"},numDays:{name:"numDays",type:"int"},attachJson:{name:"attachJson",optional:!0,flag:"j",type:"boolean"},attachCsv:{name:"attachCsv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"ss",type:"boolean"}}}},stats_tier:{attributetiergraph:{help:"",desc:"Graph the attributes of the nations of two coalitions by city count\ne.g. How many nations, soldiers etc. are at each city",arguments:{metric:{name:"metric",type:"TypedFunction<DBNation,Double>"},coalition1:{name:"coalition1",type:"Set<DBNation>"},coalition2:{name:"coalition2",type:"Set<DBNation>"},includeInactives:{name:"includeInactives",optional:!0,flag:"i",type:"boolean"},includeApplicants:{name:"includeApplicants",optional:!0,flag:"a",type:"boolean"},total:{name:"total",optional:!0,flag:"t",desc:"Compare the sum of each nation's attribute in the coalition instead of average",type:"boolean"},attachJson:{name:"attachJson",optional:!0,flag:"j",type:"boolean"},attachCsv:{name:"attachCsv",optional:!0,flag:"v",type:"boolean"},snapshotDate:{name:"snapshotDate",optional:!0,flag:"s",type:"Long[Timestamp]"},groupBy:{name:"groupBy",optional:!0,flag:"g",type:"TypedFunction<DBNation,Double>"}}},citytiergraph:{help:"",desc:"Generate a bar char comparing the nation at each city count (tiering) between two coalitions",arguments:{coalition1:{name:"coalition1",type:"Set<DBNation>"},coalition2:{name:"coalition2",type:"Set<DBNation>"},includeInactives:{name:"includeInactives",optional:!0,flag:"i",type:"boolean"},barGraph:{name:"barGraph",optional:!0,flag:"b",type:"boolean"},includeApplicants:{name:"includeApplicants",optional:!0,flag:"a",type:"boolean"},attachJson:{name:"attachJson",optional:!0,flag:"j",type:"boolean"},attachCsv:{name:"attachCsv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"ss",type:"boolean"},snapshotDate:{name:"snapshotDate",optional:!0,flag:"s",type:"Long[Timestamp]"}}},metric_by_group:{help:"",desc:"Graph a set of nation metrics for the specified nations over a period of time based on daily nation and city snapshots",arguments:{metrics:{name:"metrics",type:"Set<TypedFunction<DBNation,Double>>"},nations:{name:"nations",type:"Set<DBNation>"},groupBy:{name:"groupBy",optional:!0,type:"TypedFunction<DBNation,Double>",def:"getCities"},includeInactives:{name:"includeInactives",optional:!0,flag:"i",type:"boolean"},includeApplicants:{name:"includeApplicants",optional:!0,flag:"a",type:"boolean"},total:{name:"total",optional:!0,flag:"t",type:"boolean"},snapshotDate:{name:"snapshotDate",optional:!0,flag:"s",type:"Long[Timestamp]"},attachJson:{name:"attachJson",optional:!0,flag:"j",type:"boolean"},attachCsv:{name:"attachCsv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"ss",type:"boolean"}}},mmrtiergraph:{help:"",desc:"Generate a graph of nation military levels by city count between two coalitions",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{coalition1:{name:"coalition1",type:"Set<DBNation>"},coalition2:{name:"coalition2",type:"Set<DBNation>"},includeInactives:{name:"includeInactives",optional:!0,flag:"i",type:"boolean"},includeApplicants:{name:"includeApplicants",optional:!0,flag:"a",type:"boolean"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"},buildings:{name:"buildings",optional:!0,flag:"b",desc:"Graph the average military buildings instead of units",type:"boolean"},snapshotDate:{name:"snapshotDate",optional:!0,flag:"t",type:"Long[Timestamp]"}}},nth_loot_by_score:{help:"",desc:"Get nth loot beige graph by score range",arguments:{nations:{name:"nations",optional:!0,type:"Set<DBNation>"},n:{name:"n",optional:!0,type:"int",def:"5"},snapshotDate:{name:"snapshotDate",optional:!0,type:"Long[Timestamp]"},attachCsv:{name:"attachCsv",optional:!0,flag:"c",type:"boolean"},attachJson:{name:"attachJson",optional:!0,flag:"j",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"ss",type:"boolean"}}},scoretiergraph:{help:"",desc:"Generate a graph of nation counts by score between two coalitions",arguments:{coalition1:{name:"coalition1",type:"Set<DBNation>"},coalition2:{name:"coalition2",type:"Set<DBNation>"},includeInactives:{name:"includeInactives",optional:!0,flag:"i",type:"boolean"},includeApplicants:{name:"includeApplicants",optional:!0,flag:"a",type:"boolean"},snapshotDate:{name:"snapshotDate",optional:!0,flag:"s",type:"Long[Timestamp]"},attachJson:{name:"attachJson",optional:!0,flag:"j",type:"boolean"},attachCsv:{name:"attachCsv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"ss",type:"boolean"}}},spytiergraph:{help:"",desc:"Generate a graph of spy counts by city count between two coalitions\nNations which are applicants, in vacation mode or inactive (2 days) are excluded",arguments:{coalition1:{name:"coalition1",type:"Set<DBNation>"},coalition2:{name:"coalition2",type:"Set<DBNation>"},includeInactives:{name:"includeInactives",optional:!0,flag:"i",type:"boolean"},includeApplicants:{name:"includeApplicants",optional:!0,flag:"a",type:"boolean"},total:{name:"total",optional:!0,flag:"t",desc:"Graph the total spies instead of average per nation",type:"boolean"},barGraph:{name:"barGraph",optional:!0,flag:"b",type:"boolean"},attachJson:{name:"attachJson",optional:!0,flag:"j",type:"boolean"},attachCsv:{name:"attachCsv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"ss",type:"boolean"}}},strengthtiergraph:{help:"",desc:"Generate a graph of nation military strength by score between two coalitions\n1 tank = 1/32 aircraft for strength calculations\nEffective score range is limited to 1.75x with a linear reduction of strength up to 40% to account for up-declares",arguments:{coalition1:{name:"coalition1",type:"Set<DBNation>"},coalition2:{name:"coalition2",type:"Set<DBNation>"},includeInactives:{name:"includeInactives",optional:!0,flag:"i",type:"boolean"},includeApplicants:{name:"includeApplicants",optional:!0,flag:"n",type:"boolean"},col1MMR:{name:"col1MMR",optional:!0,flag:"a",desc:"Use the score/strength of coalition 1 nations at specific military unit levels",type:"MMRDouble"},col2MMR:{name:"col2MMR",optional:!0,flag:"b",desc:"Use the score/strength of coalition 2 nations at specific military unit levels",type:"MMRDouble"},col1Infra:{name:"col1Infra",optional:!0,flag:"c",desc:"Use the score of coalition 1 nations at specific average infrastructure levels",type:"Double"},col2Infra:{name:"col2Infra",optional:!0,flag:"d",desc:"Use the score of coalition 2 nations at specific average infrastructure levels",type:"Double"},snapshotDate:{name:"snapshotDate",optional:!0,flag:"s",type:"Long[Timestamp]"},attachJson:{name:"attachJson",optional:!0,flag:"j",type:"boolean"},attachCsv:{name:"attachCsv",optional:!0,flag:"v",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"ss",type:"boolean"}}}},stats_war:{attack_breakdown:{sheet:{help:"",desc:"Create a google sheet of nations and the number of bad attacks they did over a timeframe",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{attackers:{name:"attackers",type:"Set<NationOrAlliance>"},defenders:{name:"defenders",type:"Set<NationOrAlliance>"},start:{name:"start",type:"Long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"},checkActivity:{name:"checkActivity",optional:!0,flag:"a",desc:"Also checks defender activity, to provide more fine grained attack information, but takes longer",type:"boolean"}}},versus:{help:"",desc:"Display a breakdown of attacks nations performed over a timeframe, including bad attacks",groups:["The Sides Fighting","Time period","War and attack type filters"],arguments:{coalition1:{name:"coalition1",desc:"Nations required to be in the conflict against `coalition2`",group:0,type:"Set<NationOrAlliance>"},coalition2:{name:"coalition2",desc:"Nations required to be in the conflicts against `coalition1`",group:0,type:"Set<NationOrAlliance>"},timeStart:{name:"timeStart",desc:"Start time of the period to include",group:1,type:"long[Timestamp]"},timeEnd:{name:"timeEnd",optional:!0,desc:"End time of the period to rank\nDefaults to now",group:1,type:"Long[Timestamp]"},allowedWarTypes:{name:"allowedWarTypes",optional:!0,flag:"w",desc:"Filter the war types included",group:2,type:"Set<WarType>"},allowedWarStatus:{name:"allowedWarStatus",optional:!0,flag:"s",desc:"Filter the war statuses included",group:2,type:"Set<WarStatus>"},allowedAttackTypes:{name:"allowedAttackTypes",optional:!0,flag:"a",desc:"Filter the attack types included",group:2,type:"Set<AttackType>"},allowedVictoryTypes:{name:"allowedVictoryTypes",optional:!0,flag:"v",desc:"Filter the success types included",group:2,type:"Set<SuccessType>"},onlyOffensiveWars:{name:"onlyOffensiveWars",optional:!0,flag:"o",desc:"Only include wars declared by coalition1",group:2,type:"boolean"},onlyDefensiveWars:{name:"onlyDefensiveWars",optional:!0,flag:"d",desc:"Only include wars declared by coalition2",group:2,type:"boolean"},onlyOffensiveAttacks:{name:"onlyOffensiveAttacks",optional:!0,flag:"oa",desc:"Only include attacks done by coalition1",group:2,type:"boolean"},onlyDefensiveAttacks:{name:"onlyDefensiveAttacks",optional:!0,flag:"da",desc:"Only include attacks done by coalition2",group:2,type:"boolean"}}}},attack_ranking:{help:"",desc:"Rank the alliances by the % (or total) attacks by type.",arguments:{time:{name:"time",type:"long[Timestamp]"},type:{name:"type",type:"AttackType"},alliances:{name:"alliances",type:"Set<DBAlliance>"},only_top_x:{name:"only_top_x",optional:!0,flag:"x",type:"Integer",min:1,max:9999},percent:{name:"percent",optional:!0,flag:"p",type:"boolean"},only_off_wars:{name:"only_off_wars",optional:!0,flag:"o",type:"boolean"},only_def_wars:{name:"only_def_wars",optional:!0,flag:"d",type:"boolean"}}},by_day:{warcost_global:{help:"",desc:"Graph of cost by day of each coalitions wars vs everyone",arguments:{type:{name:"type",type:"WarCostByDayMode"},mode:{name:"mode",type:"WarCostMode"},time_start:{name:"time_start",type:"long[Timestamp]"},time_end:{name:"time_end",optional:!0,type:"Long[Timestamp]"},coalition1:{name:"coalition1",optional:!0,flag:"c1",type:"Set<NationOrAlliance>"},coalition2:{name:"coalition2",optional:!0,flag:"c2",type:"Set<NationOrAlliance>"},coalition3:{name:"coalition3",optional:!0,flag:"c3",type:"Set<NationOrAlliance>"},coalition4:{name:"coalition4",optional:!0,flag:"c4",type:"Set<NationOrAlliance>"},coalition5:{name:"coalition5",optional:!0,flag:"c5",type:"Set<NationOrAlliance>"},coalition6:{name:"coalition6",optional:!0,flag:"c6",type:"Set<NationOrAlliance>"},coalition7:{name:"coalition7",optional:!0,flag:"c7",type:"Set<NationOrAlliance>"},coalition8:{name:"coalition8",optional:!0,flag:"c8",type:"Set<NationOrAlliance>"},coalition9:{name:"coalition9",optional:!0,flag:"c9",type:"Set<NationOrAlliance>"},coalition10:{name:"coalition10",optional:!0,flag:"c10",type:"Set<NationOrAlliance>"},running_total:{name:"running_total",optional:!0,flag:"o",type:"boolean"},allowedWarStatus:{name:"allowedWarStatus",optional:!0,flag:"s",type:"Set<WarStatus>"},allowedWarTypes:{name:"allowedWarTypes",optional:!0,flag:"w",type:"Set<WarType>"},allowedAttackTypes:{name:"allowedAttackTypes",optional:!0,flag:"a",type:"Set<AttackType>"},allowedVictoryTypes:{name:"allowedVictoryTypes",optional:!0,flag:"v",type:"Set<SuccessType>"},attach_json:{name:"attach_json",optional:!0,flag:"j",type:"boolean"},attach_csv:{name:"attach_csv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"ss",type:"boolean"}}},warcost_versus:{help:"",desc:"Get a line graph by day of the war stats between two coalitions",arguments:{coalition1:{name:"coalition1",type:"Set<NationOrAlliance>"},coalition2:{name:"coalition2",type:"Set<NationOrAlliance>"},type:{name:"type",type:"WarCostByDayMode"},time_start:{name:"time_start",type:"long[Timestamp]"},time_end:{name:"time_end",optional:!0,type:"Long[Timestamp]"},running_total:{name:"running_total",optional:!0,flag:"o",type:"boolean"},allowedWarStatus:{name:"allowedWarStatus",optional:!0,flag:"s",type:"Set<WarStatus>"},allowedWarTypes:{name:"allowedWarTypes",optional:!0,flag:"w",type:"Set<WarType>"},allowedAttackTypes:{name:"allowedAttackTypes",optional:!0,flag:"a",type:"Set<AttackType>"},allowedVictoryTypes:{name:"allowedVictoryTypes",optional:!0,flag:"v",type:"Set<SuccessType>"},attach_json:{name:"attach_json",optional:!0,flag:"j",type:"boolean"},attach_csv:{name:"attach_csv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"ss",type:"boolean"}}}},counterstats:{help:"",desc:"View the percent times an alliance counters in-game wars",arguments:{alliance:{name:"alliance",type:"DBAlliance"}}},myloot:{help:"",desc:"War costs stats between you and the nation specified",groups:["Coalition Details","Time Period","Cost Exclusions","Display Options","War and Attack Filters"],arguments:{coalition2:{name:"coalition2",desc:"Nations required to be in the conflicts against you\nDefaults to all nations",group:0,type:"Set<NationOrAlliance>"},timeStart:{name:"timeStart",desc:"Start time of the period to include",group:1,type:"long[Timestamp]"},timeEnd:{name:"timeEnd",optional:!0,desc:"End time of the period to include\nDefaults to now",group:1,type:"Long[Timestamp]"},ignoreUnits:{name:"ignoreUnits",optional:!0,flag:"u",desc:"Exclude unit costs",group:2,type:"boolean"},ignoreInfra:{name:"ignoreInfra",optional:!0,flag:"i",desc:"Exclude infrastructure costs",group:2,type:"boolean"},ignoreConsumption:{name:"ignoreConsumption",optional:!0,flag:"c",desc:"Exclude consumption costs",group:2,type:"boolean"},ignoreLoot:{name:"ignoreLoot",optional:!0,flag:"l",desc:"Exclude loot costs",group:2,type:"boolean"},ignoreBuildings:{name:"ignoreBuildings",optional:!0,flag:"b",desc:"Exclude building costs",group:2,type:"boolean"},listWarIds:{name:"listWarIds",optional:!0,flag:"id",desc:"Return a list of war IDs",group:3,type:"boolean"},showWarTypes:{name:"showWarTypes",optional:!0,flag:"t",desc:"Return a tally of war types",group:3,type:"boolean"},allowedWarTypes:{name:"allowedWarTypes",optional:!0,flag:"w",desc:"Filter the war types included",group:4,type:"Set<WarType>"},allowedWarStatus:{name:"allowedWarStatus",optional:!0,flag:"s",desc:"Filter the war statuses included",group:4,type:"Set<WarStatus>"},allowedAttackTypes:{name:"allowedAttackTypes",optional:!0,flag:"a",desc:"Filter the attack types included",group:4,type:"Set<AttackType>"},allowedVictoryTypes:{name:"allowedVictoryTypes",optional:!0,flag:"v",desc:"Filter the attack success types included",group:4,type:"Set<SuccessType>"}}},warcost:{help:"",desc:"War costs of a single war\n(use warsCost for multiple wars)",arguments:{war:{name:"war",type:"DBWar"},ignoreUnits:{name:"ignoreUnits",optional:!0,flag:"u",type:"boolean"},ignoreInfra:{name:"ignoreInfra",optional:!0,flag:"i",type:"boolean"},ignoreConsumption:{name:"ignoreConsumption",optional:!0,flag:"c",type:"boolean"},ignoreLoot:{name:"ignoreLoot",optional:!0,flag:"l",type:"boolean"},ignoreBuildings:{name:"ignoreBuildings",optional:!0,flag:"b",type:"boolean"}}},warcostranking:{help:"",desc:"Rank war costs between two parties",groups:["Time period","Nations","Ranking Statistic","Cost Exclusions","Grouping/Scaling","War Filtering"],group_descs:["The time period to rank the wars","The nations/alliances to include","The statistic and mode to rank by","Exclude certain kinds of costs from the ranking","City, war scaling, and enable ranking by alliance (instead of nation)","Specify the kind of wars to include"],arguments:{timeStart:{name:"timeStart",optional:!0,desc:"Start time of the period to rank\nDefaults to 7d",group:0,type:"long[Timestamp]",def:"7d"},timeEnd:{name:"timeEnd",optional:!0,desc:"End time of the period to rank\nDefaults to now",group:0,type:"Long[Timestamp]"},coalition1:{name:"coalition1",optional:!0,desc:"Nations required to be in the conflicts\nDefaults to all existing nations",group:1,type:"Set<NationOrAlliance>",def:"*"},coalition2:{name:"coalition2",optional:!0,desc:"Nations required to be in the conflicts against `coalition1`\nDefaults to all nations",group:1,type:"Set<NationOrAlliance>"},onlyRankCoalition1:{name:"onlyRankCoalition1",optional:!0,flag:"a",desc:"Only rank the nations in `coalition1`\nDefaults to false",group:1,type:"boolean"},type:{name:"type",optional:!0,flag:"t",desc:"Cost Type",group:2,type:"WarCostMode"},stat:{name:"stat",optional:!0,flag:"s",desc:"Rank a specific stat, such as soldiers\nDefaults to `DAMAGE`",group:2,type:"WarCostStat"},excludeInfra:{name:"excludeInfra",optional:!0,flag:"i",desc:"Exclude infrastructure",group:3,type:"boolean"},excludeConsumption:{name:"excludeConsumption",optional:!0,flag:"c",desc:"Exclude consumption",group:3,type:"boolean"},excludeLoot:{name:"excludeLoot",optional:!0,flag:"l",desc:"Exclude loot",group:3,type:"boolean"},excludeBuildings:{name:"excludeBuildings",optional:!0,flag:"b",desc:"Exclude building losses",group:3,type:"boolean"},excludeUnits:{name:"excludeUnits",optional:!0,flag:"u",desc:"Exclude unit losses",group:3,type:"boolean"},groupByAlliance:{name:"groupByAlliance",optional:!0,flag:"g",desc:"Rank alliances",group:4,type:"boolean"},scalePerWar:{name:"scalePerWar",optional:!0,flag:"w",desc:"Scale rankings per war",group:4,type:"boolean"},scalePerCity:{name:"scalePerCity",optional:!0,flag:"p",desc:"Scale rankings by city count",group:4,type:"boolean"},allowedWarTypes:{name:"allowedWarTypes",optional:!0,flag:"wartype",desc:"Filter the war types included",group:5,type:"Set<WarType>"},allowedWarStatuses:{name:"allowedWarStatuses",optional:!0,flag:"status",desc:"Filter the war statuses included",group:5,type:"Set<WarStatus>"},allowedAttacks:{name:"allowedAttacks",optional:!0,flag:"attacks",desc:"Filter the attack types included",group:5,type:"Set<AttackType>"},onlyOffensiveWars:{name:"onlyOffensiveWars",optional:!0,flag:"off",desc:"Only include wars declared by coalition1",group:5,type:"boolean"},onlyDefensiveWars:{name:"onlyDefensiveWars",optional:!0,flag:"def",desc:"Only include wars declared by coalition2",group:5,type:"boolean"},uploadFile:{name:"uploadFile",optional:!0,flag:"f",type:"boolean"},num_results:{name:"num_results",optional:!0,flag:"n",type:"Integer"},highlight:{name:"highlight",optional:!0,flag:"h",type:"Set<DBAlliance>"}}},warranking:{help:"",desc:"Rank the number of wars between two coalitions by nation or alliance\nDefaults to alliance ranking",arguments:{time:{name:"time",type:"long[Timestamp]"},attackers:{name:"attackers",type:"Set<NationOrAlliance>"},defenders:{name:"defenders",type:"Set<NationOrAlliance>"},onlyOffensives:{name:"onlyOffensives",optional:!0,flag:"o",desc:"Only include offensive wars in the ranking",type:"boolean"},onlyDefensives:{name:"onlyDefensives",optional:!0,flag:"d",desc:"Only include defensive wars in the ranking",type:"boolean"},normalizePerMember:{name:"normalizePerMember",optional:!0,flag:"n",desc:"Rank the average wars per alliance member",type:"boolean"},ignore2dInactives:{name:"ignore2dInactives",optional:!0,flag:"i",desc:"Ignore inactive nations when determining alliance member counts",type:"boolean"},rankByNation:{name:"rankByNation",optional:!0,flag:"a",desc:"Rank by nation instead of alliance",type:"boolean"},warType:{name:"warType",optional:!0,flag:"t",desc:"Only rank these war types",type:"WarType"},statuses:{name:"statuses",optional:!0,flag:"s",desc:"Only rank wars with these statuses",type:"Set<WarStatus>"}}},warstatusrankingbyaa:{help:"",desc:"Generate ranking of war status by Alliance",arguments:{attackers:{name:"attackers",type:"Set<DBNation>"},defenders:{name:"defenders",type:"Set<DBNation>"},time:{name:"time",desc:"Date to start from",type:"long[Timestamp]"}}},warstatusrankingbynation:{help:"",desc:"Generate ranking of war status by Nation",arguments:{attackers:{name:"attackers",type:"Set<DBNation>"},defenders:{name:"defenders",type:"Set<DBNation>"},time:{name:"time",desc:"Date to start from",type:"long[Timestamp]"}}},warattacksbyday:{help:"",desc:"Display a graph of the number of attacks by the specified nations per day over a time period",arguments:{nations:{name:"nations",optional:!0,type:"Set<DBNation>"},cutoff:{name:"cutoff",optional:!0,desc:"Period of time to graph",type:"Long[Timestamp]"},allowedTypes:{name:"allowedTypes",optional:!0,desc:"Restrict to a list of attack types",type:"Set<AttackType>"}}},warscost:{help:"",desc:"War costs between two coalitions over a time period",groups:["The Sides Fighting","Time period","Cost Exclusions","Display Options","War and attack type filters"],arguments:{coalition1:{name:"coalition1",desc:"Nations required to be in the conflict against `coalition2`",group:0,type:"Set<NationOrAlliance>"},coalition2:{name:"coalition2",desc:"Nations required to be in the conflicts against `coalition1`",group:0,type:"Set<NationOrAlliance>"},timeStart:{name:"timeStart",desc:"Start time of the period to include",group:1,type:"long[Timestamp]"},timeEnd:{name:"timeEnd",optional:!0,desc:"End time of the period to rank\nDefaults to now",group:1,type:"Long[Timestamp]"},ignoreUnits:{name:"ignoreUnits",optional:!0,flag:"u",desc:"Exclude unit costs",group:2,type:"boolean"},ignoreInfra:{name:"ignoreInfra",optional:!0,flag:"i",desc:"Exclude infrastructure costs",group:2,type:"boolean"},ignoreConsumption:{name:"ignoreConsumption",optional:!0,flag:"c",desc:"Exclude consumption costs",group:2,type:"boolean"},ignoreLoot:{name:"ignoreLoot",optional:!0,flag:"l",desc:"Exclude loot costs",group:2,type:"boolean"},ignoreBuildings:{name:"ignoreBuildings",optional:!0,flag:"b",desc:"Exclude building costs",group:2,type:"boolean"},listWarIds:{name:"listWarIds",optional:!0,flag:"id",desc:"Attach a list of war ids",group:3,type:"boolean"},showWarTypes:{name:"showWarTypes",optional:!0,flag:"t",desc:"Attach a tally of war types",group:3,type:"boolean"},allowedWarTypes:{name:"allowedWarTypes",optional:!0,flag:"w",desc:"Filter the war types included",group:4,type:"Set<WarType>"},allowedWarStatus:{name:"allowedWarStatus",optional:!0,flag:"s",desc:"Filter the war statuses included",group:4,type:"Set<WarStatus>"},allowedAttackTypes:{name:"allowedAttackTypes",optional:!0,flag:"a",desc:"Filter the attack types included",group:4,type:"Set<AttackType>"},allowedVictoryTypes:{name:"allowedVictoryTypes",optional:!0,flag:"v",desc:"Filter the success types included",group:4,type:"Set<SuccessType>"},onlyOffensiveWars:{name:"onlyOffensiveWars",optional:!0,flag:"o",desc:"Only include wars declared by coalition1",group:4,type:"boolean"},onlyDefensiveWars:{name:"onlyDefensiveWars",optional:!0,flag:"d",desc:"Only include wars declared by coalition2",group:4,type:"boolean"},onlyOffensiveAttacks:{name:"onlyOffensiveAttacks",optional:!0,flag:"oa",desc:"Only include attacks done by coalition1",group:4,type:"boolean"},onlyDefensiveAttacks:{name:"onlyDefensiveAttacks",optional:!0,flag:"da",desc:"Only include attacks done by coalition2",group:4,type:"boolean"}}}},tax:{bracketsheet:{help:"",desc:"Generate a sheet of member tax brackets and internal tax rates\n`note: internal tax rate is the TAX_BASE and determines what % of their taxes is excluded from deposits`",annotations:{role:{value:["ECON","ECON_STAFF"],any:!0}},arguments:{force:{name:"force",optional:!0,flag:"f",type:"boolean"},includeApplicants:{name:"includeApplicants",optional:!0,flag:"a",type:"boolean"}}},deposits:{help:"",desc:"Get a sheet of a nation tax deposits over a period\nIf a tax base is set for the nation or alliance then only the portion within member holdings are included by default",annotations:{role:{value:["ECON"]},isalliance:!0},arguments:{nations:{name:"nations",type:"Set<DBNation>"},baseTaxRate:{name:"baseTaxRate",optional:!0,desc:"Set to 0/0 to include all taxes",type:"TaxRate"},startDate:{name:"startDate",optional:!0,type:"Long[Timestamp]"},endDate:{name:"endDate",optional:!0,type:"Long[Timestamp]"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},info:{help:"",desc:"View a nation's taxability, in-game tax rate, and internal tax-rate",annotations:{isalliance:!0},arguments:{nation:{name:"nation",type:"DBNation"}}},listbracketauto:{help:"",desc:"List the assigned taxrate if REQUIRED_TAX_BRACKET or REQUIRED_INTERNAL_TAXRATE are set\nNote: this command does set nations brackets. See: `/tax setNationBracketAuto` and `/nation set taxinternalAuto` ",annotations:{isalliance:!0,role:{value:["ECON_STAFF"]}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},records:{help:"",desc:"Get a sheet of a nation's in-game tax records and full resource amounts over a period",annotations:{role:{value:["ECON"]},isalliance:!0},arguments:{nation:{name:"nation",type:"DBNation"},startDate:{name:"startDate",optional:!0,type:"Long[Timestamp]"},endDate:{name:"endDate",optional:!0,type:"Long[Timestamp]"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},setnationbracketauto:{help:"",desc:"Bulk set nation tax brackets as configured in the guild setting: `REQUIRED_TAX_BRACKET`",annotations:{isalliance:!0,role:{value:["ECON_STAFF"]}},arguments:{nations:{name:"nations",optional:!0,desc:"The nations to set tax brackets for\nIf not specified, all nations in the alliance will be used",type:"Set<DBNation>"},ping:{name:"ping",optional:!0,flag:"p",desc:"Ping users if their brackets are modified",type:"boolean"}}},set_from_sheet:{help:"",desc:"Set a nation's tax bracket from a sheet\nExpects columns, `nation` (or `leader` or `user`) and `bracket` or `internal` (for internal taxrates)",annotations:{role:{value:["ECON"]},isalliance:!0},arguments:{sheet:{name:"sheet",type:"SpreadSheet"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}}},test:{dummy:{help:"",desc:"Dummy command. No output"}},trade:{accept:{help:"",desc:"Deposit your pending trades into your nation's holdings for this guild\nThe receiver must be authenticated with the bot and have bank access in an alliance\nOnly resources sold for $0 or food bought for cash are accepted",annotations:{role:{value:["MEMBER"]}},arguments:{receiver:{name:"receiver",type:"DBNation"},amount:{name:"amount",optional:!0,type:"Map<ResourceType,Double>"},useLogin:{name:"useLogin",optional:!0,flag:"a",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},average:{help:"",desc:"Get the average trade price of resources over a period of time",arguments:{time:{name:"time",desc:"Time to average over (from today)",type:"long[Timestamp]"}}},comparestockpilevaluebyday:{help:"",desc:"Generate a graph comparing market values of two resource amounts by day",arguments:{stockpile1:{name:"stockpile1",type:"Map<ResourceType,Double>"},stockpile2:{name:"stockpile2",type:"Map<ResourceType,Double>"},numDays:{name:"numDays",type:"int",min:1,max:3e3},attachJson:{name:"attachJson",optional:!0,flag:"j",type:"boolean"},attachCsv:{name:"attachCsv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"ss",type:"boolean"}}},findproducer:{help:"",desc:"Get a ranking of alliances or nations by their net resource production",groups:["Production Filters","Ranking Options","Snapshot Settings","Output Options"],arguments:{resources:{name:"resources",desc:"The resources to rank production of\nUse `*` to rank all resources",type:"Set<ResourceType>"},nationList:{name:"nationList",optional:!0,desc:"Nations to include in the ranking",type:"Set<DBNation>"},ignoreMilitaryUpkeep:{name:"ignoreMilitaryUpkeep",optional:!0,flag:"m",desc:"Exclude military unit upkeep",group:0,type:"boolean"},ignoreTradeBonus:{name:"ignoreTradeBonus",optional:!0,flag:"t",desc:"Exclude color trade bloc bonus",group:0,type:"boolean"},ignoreNationBonus:{name:"ignoreNationBonus",optional:!0,flag:"b",desc:"Exclude the new nation bonus",group:0,type:"boolean"},includeNegative:{name:"includeNegative",optional:!0,flag:"n",desc:"Include negative resource revenue",group:0,type:"boolean"},includeInactive:{name:"includeInactive",optional:!0,flag:"i",desc:"Include inactive nations (2 days)",group:0,type:"boolean"},listByNation:{name:"listByNation",optional:!0,flag:"a",desc:"Rank by nation instead of alliances",group:1,type:"boolean"},listAverage:{name:"listAverage",optional:!0,flag:"s",desc:"Rank by average per nation instead of total",group:1,type:"boolean"},snapshotDate:{name:"snapshotDate",optional:!0,flag:"d",desc:"The date to use for the snapshot",group:2,type:"Long[Timestamp]"},uploadFile:{name:"uploadFile",optional:!0,flag:"u",desc:"Upload the results as a file",group:3,type:"boolean"},num_results:{name:"num_results",optional:!0,flag:"r",desc:"The number of results to show",group:3,type:"Integer"},highlight:{name:"highlight",optional:!0,flag:"h",desc:"Highlight specific entries in the result",group:3,type:"Set<NationOrAlliance>"}}},findtrader:{help:"",desc:"List nations who have bought and sold the most of a resource over a period\nAmounts are net transfers",arguments:{type:{name:"type",type:"ResourceType"},cutoff:{name:"cutoff",desc:"Date to start from",type:"long[Timestamp]"},buyOrSell:{name:"buyOrSell",type:"String",choices:["SOLD","BOUGHT"]},groupByAlliance:{name:"groupByAlliance",optional:!0,flag:"a",desc:"Group rankings by each nation's current alliance",type:"boolean"},includeMoneyTrades:{name:"includeMoneyTrades",optional:!0,flag:"p",desc:"Include trades done outside of standard market prices",type:"boolean"},nations:{name:"nations",optional:!0,flag:"n",type:"Set<DBNation>"}}},margin:{help:"",desc:"Get the margin between buy and sell for each resource",arguments:{usePercent:{name:"usePercent",optional:!0,flag:"p",desc:"Display the margin percent instead of absolute difference",type:"boolean"}}},marginbyday:{help:"",desc:"Generate a graph of average trade buy and sell margin by day",arguments:{start:{name:"start",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"},percent:{name:"percent",optional:!0,desc:"Use the margin percent instead of absolute difference",type:"boolean",def:"true"},attachJson:{name:"attachJson",optional:!0,flag:"j",type:"boolean"},attachCsv:{name:"attachCsv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"ss",type:"boolean"}}},moneytrades:{help:"",desc:"View an accumulation of all the net money trades a nation made, grouped by nation\nMoney trades are selling resources for close to $0 or buying for very large money amounts",arguments:{nation:{name:"nation",type:"DBNation"},time:{name:"time",desc:"Date to start from",type:"long[Timestamp]"},forceUpdate:{name:"forceUpdate",optional:!0,flag:"f",type:"boolean"},addBalance:{name:"addBalance",optional:!0,flag:"a",desc:"Return a deposits add command for each grouping",type:"boolean"}}},offer:{buy:{help:"",desc:"Create a bot trade offer on discord for buying a resource",annotations:{role:{value:["MEMBER"],guild:0x95432924c420000},hasoffshore:!0},arguments:{resource:{name:"resource",type:"ResourceType"},quantity:{name:"quantity",desc:"The quantity of the resource you are receiving",type:"Long"},minPPU:{name:"minPPU",optional:!0,flag:"minPPU",desc:"The minimum price per unit you are exchanging for",type:"Integer"},maxPPU:{name:"maxPPU",optional:!0,flag:"maxPPU",desc:"The maximum price per unit you are exchanging for",type:"Integer"},negotiable:{name:"negotiable",optional:!0,flag:"n",desc:"If prices are negotiable",type:"Boolean"},expire:{name:"expire",optional:!0,flag:"e",desc:"When the offer is no longer available",type:"Long[Timediff]"},exchangeFor:{name:"exchangeFor",optional:!0,flag:"x",desc:"The resources you will exchange for",type:"Set<ResourceType>"},exchangePPU:{name:"exchangePPU",optional:!0,flag:"p",desc:"The equivalent price per unit you will accept for each resource",type:"Map<ResourceType,Double>"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},buy_list:{help:"",desc:"List the bot offers nations have on discord for you buying a given resource",annotations:{role:{value:["MEMBER"],guild:0x95432924c420000}},arguments:{youBuy:{name:"youBuy",type:"ResourceType"},youProvide:{name:"youProvide",optional:!0,type:"ResourceType",def:"MONEY"},allowedTraders:{name:"allowedTraders",optional:!0,type:"Set<DBNation>"},sortByLowestMinPrice:{name:"sortByLowestMinPrice",optional:!0,flag:"l",desc:"Sort the offers by the lowest minimum offer price\nComparison prices for resources are converted to weekly average cash equivalent",type:"boolean"},sortByLowestMaxPrice:{name:"sortByLowestMaxPrice",optional:!0,flag:"h",desc:"Sort the offers by the lowest maximum offer price\nComparison prices for resources are converted to weekly average cash equivalent",type:"boolean"}}},delete:{help:"",desc:"Delete one of your bot trade offers on discord",annotations:{role:{value:["MEMBER"],guild:0x95432924c420000}},arguments:{deleteResource:{name:"deleteResource",optional:!0,desc:"The resource you want to remove all your offers of",type:"ResourceType"},buyOrSell:{name:"buyOrSell",optional:!0,desc:"Remove BUYING or SELLING of that resource",type:"String",choices:["BUYING","SELLING"]},deleteId:{name:"deleteId",optional:!0,flag:"i",desc:"The offer id you want to delete",type:"Integer"}}},info:{help:"",desc:"View the details of a bot trade offer on discord",annotations:{role:{value:["MEMBER"],guild:0x95432924c420000}},arguments:{offerId:{name:"offerId",desc:"The id of a trade offer",type:"int"}}},my_offers:{help:"",desc:"List the bot trade offers you have on discord",annotations:{role:{value:["MEMBER"],guild:0x95432924c420000}}},sell:{help:"",desc:"Create a bot trade offer on discord for selling a resource",annotations:{role:{value:["MEMBER"],guild:0x95432924c420000},hasoffshore:!0},arguments:{resource:{name:"resource",type:"ResourceType"},quantity:{name:"quantity",desc:"The quantity of the resource you are sending",type:"Long"},minPPU:{name:"minPPU",optional:!0,flag:"minPPU",desc:"The minimum price per unit you are exchanging for",type:"Integer"},maxPPU:{name:"maxPPU",optional:!0,flag:"maxPPU",desc:"The maximum price per unit you are exchanging for",type:"Integer"},negotiable:{name:"negotiable",optional:!0,flag:"n",desc:"If prices are negotiable",type:"Boolean"},expire:{name:"expire",optional:!0,flag:"e",desc:"When the offer is no longer available",type:"Long[Timediff]"},exchangeFor:{name:"exchangeFor",optional:!0,flag:"x",desc:"The resources you will exchange for",type:"Set<ResourceType>"},exchangePPU:{name:"exchangePPU",optional:!0,flag:"p",desc:"The equivalent price per unit you will accept for each resource",type:"Map<ResourceType,Double>"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},sell_list:{help:"",desc:"List the bot offers nations have on discord for you selling a given resource",annotations:{role:{value:["MEMBER"],guild:0x95432924c420000}},arguments:{youSell:{name:"youSell",type:"ResourceType"},youReceive:{name:"youReceive",optional:!0,type:"ResourceType",def:"MONEY"},allowedTraders:{name:"allowedTraders",optional:!0,type:"Set<DBNation>"},sortByLowestMinPrice:{name:"sortByLowestMinPrice",optional:!0,flag:"l",desc:"Sort the offers by the lowest minimum offer price\nComparison prices for resources are converted to weekly average cash equivalent",type:"boolean"},sortByLowestMaxPrice:{name:"sortByLowestMaxPrice",optional:!0,flag:"h",desc:"Sort the offers by the lowest maximum offer price\nComparison prices for resources are converted to weekly average cash equivalent",type:"boolean"}}},update:{help:"",desc:"Update one of your bot trade offers on discord",annotations:{role:{value:["MEMBER"],guild:0x95432924c420000},hasoffshore:!0},arguments:{offerId:{name:"offerId",desc:"The id of your trade offer",type:"int"},quantity:{name:"quantity",desc:"The quantity of the resource you are exchanging",type:"Long"},minPPU:{name:"minPPU",optional:!0,flag:"minPPU",desc:"The minimum price per unit you are exchanging for",type:"Integer"},maxPPU:{name:"maxPPU",optional:!0,flag:"maxPPU",desc:"The maximum price per unit you are exchanging for",type:"Integer"},negotiable:{name:"negotiable",optional:!0,flag:"n",desc:"If prices are negotiable",type:"Boolean"},expire:{name:"expire",optional:!0,flag:"e",desc:"When the offer is no longer available",type:"Long[Timediff]"},exchangeFor:{name:"exchangeFor",optional:!0,flag:"x",desc:"The resources you will accept in return",type:"Set<ResourceType>"},exchangePPU:{name:"exchangePPU",optional:!0,flag:"p",desc:"The equivalent price per unit you will accept for each resource",type:"Map<ResourceType,Double>"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}}},price:{help:"",desc:"Get the current top buy and sell price of each resource"},pricebyday:{help:"",desc:"Generate a graph of average buy and sell trade price by day",arguments:{resources:{name:"resources",type:"Set<ResourceType>"},numDays:{name:"numDays",type:"int"},attachJson:{name:"attachJson",optional:!0,flag:"j",type:"boolean"},attachCsv:{name:"attachCsv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"ss",type:"boolean"}}},profit:{help:"",desc:"View an accumulation of all the net trades nations have made over a time period",arguments:{nations:{name:"nations",type:"Set<DBNation>"},time:{name:"time",desc:"Date to start from",type:"long[Timestamp]"},include_outliers:{name:"include_outliers",optional:!0,flag:"o",type:"boolean"}}},ranking:{help:"",desc:"View an accumulation of all the net trades a nation made, grouped by nation.",arguments:{nations:{name:"nations",type:"Set<DBNation>"},time:{name:"time",desc:"Date to start from",type:"long[Timestamp]"},groupByAlliance:{name:"groupByAlliance",optional:!0,flag:"a",desc:"Group by alliance instead of nation",type:"boolean"},uploadFile:{name:"uploadFile",optional:!0,flag:"u",type:"boolean"}}},totalbyday:{help:"",desc:"Generate a graph of average trade buy and sell total by day",arguments:{start:{name:"start",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"},attachJson:{name:"attachJson",optional:!0,flag:"j",type:"boolean"},attachCsv:{name:"attachCsv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"ss",type:"boolean"},resources:{name:"resources",optional:!0,flag:"r",type:"Set<ResourceType>"}}},trending:{help:"",desc:"Generate a google sheet of the amount traded of each resource at each price point over a period of time\nCredits are grouped by 10,000, food by 10, everything else is actual price",annotations:{role:{value:["MEMBER"]}},arguments:{time:{name:"time",desc:"Date to start from",type:"long[Timestamp]"}}},value:{help:"",desc:"Show the total market value of resource amounts",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},normalize:{name:"normalize",optional:!0,flag:"n",desc:"Remove negative amounts and return the scaled resource amounts of equivalent value",type:"boolean"},useBuyPrice:{name:"useBuyPrice",optional:!0,flag:"b",desc:"Use the average buying price",type:"boolean"},useSellPrice:{name:"useSellPrice",optional:!0,flag:"s",desc:"Use the average selling price",type:"boolean"},convertType:{name:"convertType",optional:!0,flag:"t",desc:"Show total value in a resource instead of money",type:"ResourceType"}}},volume:{help:"",desc:"Get the change in trade volume of each resource over a period of time"},volumebyday:{help:"",desc:"Generate a graph of average trade buy and sell volume by day",arguments:{start:{name:"start",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"},attachJson:{name:"attachJson",optional:!0,flag:"j",type:"boolean"},attachCsv:{name:"attachCsv",optional:!0,flag:"c",type:"boolean"},attach_sheet:{name:"attach_sheet",optional:!0,flag:"ss",type:"boolean"},resources:{name:"resources",optional:!0,flag:"r",type:"Set<ResourceType>"}}}},transfer:{bulk:{help:"",desc:"Send multiple transfers to nations/alliances according to a sheet\nThe transfer sheet columns must be `nations` (which has the nations or alliance name/id/url)\nand then there must be a column named for each resource type you wish to transfer\nOR use a column called `resources` which has a resource list (e.g. a json object of the resources)",groups:["Transfer Details","Account Options","Transfer Note/Behavior"],annotations:{role:{value:["ECON_WITHDRAW_SELF","ECON"],any:!0,alliance:!0}},arguments:{sheet:{name:"sheet",optional:!0,flag:"s",desc:"The transfer sheet to use\nExpects a `nation` or `leader` column and either columns for each resource name or `resources`",group:0,type:"TransferSheet"},bank_note:{name:"bank_note",optional:!0,flag:"bn",desc:"The deposit type to use for the transfer\nDefaults to `#deposit`",group:0,type:"DepositType"},nation_account:{name:"nation_account",optional:!0,flag:"n",desc:"The nation account to deduct from",group:1,type:"DBNation"},ingame_bank:{name:"ingame_bank",optional:!0,flag:"a",desc:"The alliance bank to send from\nDefaults to the offshore",group:1,type:"DBAlliance"},offshore_account:{name:"offshore_account",optional:!0,flag:"o",desc:"The alliance account to deduct from\nAlliance must be registered to this guild\nDefaults to all the alliances of this guild",group:1,type:"DBAlliance"},tax_account:{name:"tax_account",optional:!0,flag:"t",desc:"The tax account to deduct from",group:1,type:"TaxBracket"},use_receiver_tax_account:{name:"use_receiver_tax_account",optional:!0,flag:"ta",desc:"Deduct from the receiver's tax bracket account",group:1,type:"boolean"},expire:{name:"expire",optional:!0,flag:"e",desc:"Have the transfer ignored from nation holdings after a timeframe",group:2,type:"Long[Timediff]"},decay:{name:"decay",optional:!0,flag:"d",desc:"Have the transfer decrease linearly over a timeframe",group:2,type:"Long[Timediff]"},deduct_as_cash:{name:"deduct_as_cash",optional:!0,flag:"m",desc:"Transfer valued at cash equivalent in nation holdings",group:2,type:"boolean"},escrow_mode:{name:"escrow_mode",optional:!0,flag:"em",desc:"The mode for escrowing funds (e.g. if the receiver is blockaded)\nDefaults to never",group:2,type:"EscrowMode"},bypass_checks:{name:"bypass_checks",optional:!0,flag:"b",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"},key:{name:"key",optional:!0,flag:"k",type:"UUID"}}},internal:{from_nation_account:{help:"",desc:"Send from your nation's deposits) to another account (internal transfer",groups:["Amount to send","Required: Send To","Optional: Send From"],group_descs:["","Pick a receiver account, nation, or both","If there are multiple alliances registered to this guild"],annotations:{role:{value:["ECON_WITHDRAW_SELF","ECON"]}},arguments:{amount:{name:"amount",desc:"The amount to send",group:0,type:"Map<ResourceType,Double>[AllianceDepositLimit]"},receiver_account:{name:"receiver_account",optional:!0,desc:"The offshore alliance or guild account to send to\nDefaults to this guild",group:1,type:"GuildOrAlliance"},receiver_nation:{name:"receiver_nation",optional:!0,desc:"The alliance or guild nation account to send to\nDefaults to None",group:1,type:"DBNation"},sender_alliance:{name:"sender_alliance",optional:!0,desc:"The offshore alliance account to send from\nDefaults to your alliance (if valid)",group:2,type:"DBAlliance"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},from_offshore_account:{help:"",desc:"Send from your alliance offshore account to another account (internal transfer)",groups:["Amount to send","Required: Send To","Optional: Send From"],group_descs:["","Pick a receiver account, nation, or both","If using a different account to send from"],annotations:{role:{value:["ECON"]}},arguments:{amount:{name:"amount",desc:"The amount to send",group:0,type:"Map<ResourceType,Double>[AllianceDepositLimit]"},receiver_account:{name:"receiver_account",optional:!0,desc:"The offshore alliance or guild account to send to\nDefaults to this guild",group:1,type:"GuildOrAlliance"},receiver_nation:{name:"receiver_nation",optional:!0,desc:"The alliance or guild nation account to send to\nDefaults to None",group:1,type:"DBNation"},sender_account:{name:"sender_account",optional:!0,desc:"The offshore alliance account to send from\nDefaults to your alliance (if valid)",group:2,type:"GuildOrAlliance"},sender_nation:{name:"sender_nation",optional:!0,desc:"The nation to send from\nDefaults to your nation",group:2,type:"DBNation"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}}},offshore:{help:"",desc:"Send the funds in the alliance bank to an alliance added to the `offshore` coalition in the bot\nOptionally specify warchest and offshoring account",groups:["Account Settings","Resource Amounts"],annotations:{role:{value:["MEMBER","ECON","ECON_STAFF"],any:!0,alliance:!0},hasoffshore:!0,isalliance:!0},arguments:{to:{name:"to",optional:!0,desc:"Specify an alternative Offshore alliance to send funds in-game to\nDefaults to the currently set offshore coalition",group:0,type:"DBAlliance"},account:{name:"account",optional:!0,desc:"Specify an alternative account to offshore with\nDefaults to the sender alliance",group:0,type:"NationOrAllianceOrGuild"},keepAmount:{name:"keepAmount",optional:!0,desc:"The amount of resources to keep in the bank\nDefaults to the `OFFSHORE_KEEP_AMOUNT` setting, else nothing",group:1,type:"Map<ResourceType,Double>"},sendAmount:{name:"sendAmount",optional:!0,desc:"Specify specific resource amounts to offshore\nDefaults to all resources\nThe send amount is auto capped by the resources available and `keepAmount`",group:1,type:"Map<ResourceType,Double>"}}},raws:{help:"",desc:"Disburse raw resources needed to operate cities",groups:["Amount Options","Optional: Bank Note","Optional: Nation Account","Optional: Specify Offshore/Bank","Optional: Tax Bracket Account (pick either or none)"],annotations:{role:{value:["ECON_WITHDRAW_SELF","ECON","MEMBER"],any:!0,alliance:!0},isalliance:!0},arguments:{nationList:{name:"nationList",desc:"The nations to send to",type:"Set<DBNation>"},days:{name:"days",desc:"Days of operation to send",group:0,type:"double",min:0,max:20},no_daily_cash:{name:"no_daily_cash",optional:!0,flag:"dc",desc:"Do not send money below the daily login bonus",group:0,type:"boolean"},no_cash:{name:"no_cash",optional:!0,flag:"c",desc:"Do not send ANY money",group:0,type:"boolean"},bank_note:{name:"bank_note",optional:!0,desc:"Transfer note\nUse `#IGNORE` to not deduct from deposits",group:1,type:"DepositType",def:"#tax"},expire:{name:"expire",optional:!0,flag:"e",desc:"Have the transfer ignored from nation holdings after a timeframe",group:1,type:"Long[Timediff]"},decay:{name:"decay",optional:!0,flag:"d",desc:"Have the transfer decrease linearly from balances over a timeframe",group:1,type:"Long[Timediff]"},deduct_as_cash:{name:"deduct_as_cash",optional:!0,flag:"m",desc:"Have the transfer valued as cash in nation holdings",group:1,type:"boolean"},nation_account:{name:"nation_account",optional:!0,flag:"n",desc:"The guild's nation account to deduct from\nDefaults to None if bulk disburse, else the receivers account",group:2,type:"DBNation"},escrow_mode:{name:"escrow_mode",optional:!0,flag:"em",desc:"How to handle the transfer if the receiver is blockaded\nDefaults to never escrow",group:2,type:"EscrowMode"},ingame_bank:{name:"ingame_bank",optional:!0,flag:"a",desc:"The in-game alliance bank to send from\nDefaults to the offshore set",group:3,type:"DBAlliance"},offshore_account:{name:"offshore_account",optional:!0,flag:"o",desc:"The account with the offshore to use\nThe alliance must be registered to this guild\nDefaults to all the alliances of this guild",group:3,type:"DBAlliance"},tax_account:{name:"tax_account",optional:!0,flag:"t",desc:"The tax account to deduct from",group:4,type:"TaxBracket"},use_receiver_tax_account:{name:"use_receiver_tax_account",optional:!0,flag:"ta",desc:"Deduct from the receiver's tax bracket account",group:4,type:"boolean"},bypass_checks:{name:"bypass_checks",optional:!0,flag:"b",desc:"Skip checking receiver activity, blockade, VM etc.",type:"boolean"},ping_when_sent:{name:"ping_when_sent",optional:!0,flag:"p",type:"boolean"},ping_role:{name:"ping_role",optional:!0,flag:"pr",type:"Roles"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},resources:{help:"",desc:"Transfer the resources specified to a desired nation or alliance",groups:["Transfer Details","Account Options","Transfer Note/Behavior"],annotations:{role:{value:["ECON","ECON_WITHDRAW_SELF","MEMBER"],any:!0}},arguments:{receiver:{name:"receiver",desc:"The nation or alliance to receive the transfer",group:0,type:"NationOrAlliance"},transfer:{name:"transfer",desc:"The resources to transfer",group:0,type:"Map<ResourceType,Double>[AllianceDepositLimit]"},bank_note:{name:"bank_note",desc:"The note to categorize the transfer",group:0,type:"DepositType"},nation_account:{name:"nation_account",optional:!0,flag:"n",desc:"The nation account to deduct from",group:1,type:"DBNation"},ingame_bank:{name:"ingame_bank",optional:!0,flag:"a",desc:"The alliance bank to send from\nDefaults to the offshore",group:1,type:"DBAlliance"},offshore_account:{name:"offshore_account",optional:!0,flag:"o",desc:"The alliance account to deduct from\nAlliance must be registered to this guild\nDefaults to all the alliances of this guild",group:1,type:"DBAlliance"},tax_account:{name:"tax_account",optional:!0,flag:"t",desc:"The tax account to deduct from",group:1,type:"TaxBracket"},use_receiver_tax_account:{name:"use_receiver_tax_account",optional:!0,flag:"ta",desc:"Deduct from the receiver's tax bracket account",group:1,type:"boolean"},onlyMissingFunds:{name:"onlyMissingFunds",optional:!0,flag:"m",desc:"Only send funds the receiver is lacking from the amount",group:2,type:"boolean"},expire:{name:"expire",optional:!0,flag:"e",desc:"Have the transfer ignored from nation holdings after a timeframe",group:2,type:"Long[Timediff]"},decay:{name:"decay",optional:!0,flag:"d",desc:"Have the transfer decrease linearly to zero for balances over a timeframe",group:2,type:"Long[Timediff]"},deduct_as_cash:{name:"deduct_as_cash",optional:!0,flag:"c",desc:"Transfer valued at cash equivalent in nation holdings",group:2,type:"boolean"},escrow_mode:{name:"escrow_mode",optional:!0,flag:"em",desc:"The mode for escrowing funds (e.g. if the receiver is blockaded)\nDefaults to never",group:2,type:"EscrowMode"},bypass_checks:{name:"bypass_checks",optional:!0,flag:"b",type:"boolean"},ping_when_sent:{name:"ping_when_sent",optional:!0,flag:"p",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"},calling_command:{name:"calling_command",optional:!0,flag:"cmd",type:"JSONObject"}}},self:{help:"",desc:"Withdraw from the alliance bank (nation balance)",groups:["Amount Options","Optional: Bank Note","Specify Offshore/Bank","Optional: Nation Account","Optional: Tax Bracket Account (pick either or none)"],annotations:{role:{value:["ECON_WITHDRAW_SELF","ECON","MEMBER"],any:!0}},arguments:{amount:{name:"amount",desc:"Amount to send",group:0,type:"Map<ResourceType,Double>[NationDepositLimit]"},only_send_missing:{name:"only_send_missing",optional:!0,flag:"m",desc:"Only send funds the receiver is lacking from the amount",type:"boolean"},bank_note:{name:"bank_note",optional:!0,desc:"Transfer note",group:1,type:"DepositType",def:"#deposit"},expire:{name:"expire",optional:!0,flag:"e",desc:"Have the transfer ignored from nation holdings after a timeframe",group:1,type:"Long[Timediff]"},decay:{name:"decay",optional:!0,flag:"d",desc:"Have the transfer decrease linearly from balances over a timeframe",group:1,type:"Long[Timediff]"},deduct_as_cash:{name:"deduct_as_cash",optional:!0,flag:"c",desc:"Transfer valued at cash equivalent in nation balance",group:1,type:"boolean"},ingame_bank:{name:"ingame_bank",optional:!0,flag:"a",desc:"The in-game alliance bank to send from\nDefaults to the offshore set",group:2,type:"DBAlliance"},offshore_account:{name:"offshore_account",optional:!0,flag:"o",desc:"The account with the offshore to use\nThe alliance must be registered to this guild\nDefaults to all the alliances of this guild",group:2,type:"DBAlliance"},nation_account:{name:"nation_account",optional:!0,flag:"n",desc:"The guild's nation account to use\nDefaults to your nation",group:3,type:"DBNation"},escrow_mode:{name:"escrow_mode",optional:!0,flag:"em",desc:"How to handle the transfer if the receiver is blockaded\nDefaults to never escrow",group:3,type:"EscrowMode"},tax_account:{name:"tax_account",optional:!0,flag:"t",desc:"The guild's tax account to deduct from\nDefaults to None",group:4,type:"TaxBracket"},use_receiver_tax_account:{name:"use_receiver_tax_account",optional:!0,flag:"ta",desc:"OR deduct from the receiver's tax bracket account\nDefaults to false",group:4,type:"boolean"},bypass_checks:{name:"bypass_checks",optional:!0,flag:"b",desc:"Skip checking receiver activity, blockade, VM etc.",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},warchest:{help:"",desc:"Transfer the missing resource amounts per city to a list of nations",groups:["Resource Details","Source Accounts","Transfer Options","Miscellaneous"],annotations:{role:{value:["ECON","ECON_WITHDRAW_SELF","MEMBER"],any:!0},hasoffshore:!0,isalliance:!0},arguments:{nations:{name:"nations",type:"Set<DBNation>"},resourcesPerCity:{name:"resourcesPerCity",desc:"The resources each nation needs for each city\nOnly resources they are missing is sent",group:0,type:"Map<ResourceType,Double>"},bank_note:{name:"bank_note",optional:!0,desc:"The transfer note to use\nDefaults to `#WARCHEST`",group:0,type:"DepositType"},skipStockpile:{name:"skipStockpile",optional:!0,flag:"s",desc:"Do not check nation stockpile\nSends the full amount of resources to each nation",group:2,type:"boolean"},nation_account:{name:"nation_account",optional:!0,flag:"n",desc:"The nation account to deduct from",group:1,type:"DBNation"},ingame_bank:{name:"ingame_bank",optional:!0,flag:"a",desc:"The alliance bank to send from\nDefaults to the offshore",group:1,type:"DBAlliance"},offshore_account:{name:"offshore_account",optional:!0,flag:"o",desc:"The alliance account to deduct from\nAlliance must be registered to this guild\nDefaults to all the alliances of this guild",group:1,type:"DBAlliance"},tax_account:{name:"tax_account",optional:!0,flag:"t",desc:"The tax account to deduct from",group:1,type:"TaxBracket"},use_receiver_tax_account:{name:"use_receiver_tax_account",optional:!0,flag:"ta",desc:"Deduct from the receiver's tax bracket account",group:1,type:"boolean"},expire:{name:"expire",optional:!0,flag:"e",desc:"Have the transfer ignored from nation holdings after a timeframe",group:2,type:"Long[Timediff]"},decay:{name:"decay",optional:!0,flag:"d",desc:"Have the transfer decay linearly in balances over a timeframe",group:2,type:"Long[Timediff]"},deduct_as_cash:{name:"deduct_as_cash",optional:!0,flag:"m",desc:"Have the transfer valued as cash in nation holdings",group:2,type:"boolean"},escrow_mode:{name:"escrow_mode",optional:!0,flag:"em",desc:"The mode for escrowing funds (e.g. if the receiver is blockaded)\nDefaults to never",group:2,type:"EscrowMode"},ping_when_sent:{name:"ping_when_sent",optional:!0,flag:"p",desc:"Ping the user when the transfer is sent",group:3,type:"boolean"},bypass_checks:{name:"bypass_checks",optional:!0,flag:"b",desc:"Bypass validation checks",group:3,type:"boolean"},force:{name:"force",optional:!0,flag:"f",desc:"Force the transfer even if conditions are not met",group:3,type:"boolean"}}}},treaty:{approve:{help:"",desc:"Approve a pending treaty from an alliance",annotations:{isalliance:!0,role:{value:["FOREIGN_AFFAIRS"],alliance:!0}},arguments:{senders:{name:"senders",desc:"Alliance that sent the treaty",type:"Set<DBAlliance>"}}},cancel:{help:"",desc:"Cancel a treaty in-game",annotations:{isalliance:!0,role:{value:["FOREIGN_AFFAIRS"]}},arguments:{senders:{name:"senders",desc:"The other alliance the treaty is with",type:"Set<DBAlliance>"}}},gw_nap:{help:"",desc:"Get a list a recent global war Non Aggression Pacts",arguments:{listExpired:{name:"listExpired",optional:!0,type:"boolean",def:"false"}}},list:{help:"",desc:"List the treaties of the provided alliances\nNote: If you have the FORIEGN_AFFAIRS role you can view the pending treaties of your own alliance from its guild",arguments:{alliances:{name:"alliances",type:"Set<DBAlliance>"},treatyFilter:{name:"treatyFilter",optional:!0,type:"Predicate<Treaty>"}}},send:{help:"",desc:"Send a treaty to an alliance",annotations:{isalliance:!0,role:{value:["FOREIGN_AFFAIRS"],alliance:!0}},arguments:{receiver:{name:"receiver",desc:"Alliance to send treaty to",type:"DBAlliance"},type:{name:"type",type:"TreatyType"},days:{name:"days",type:"int"},message:{name:"message",optional:!0,type:"String"}}}},unit:{buy_sheet:{help:"",desc:"Generate a sheet of guild member nations and their unit buys today",annotations:{isalliance:!0,hasapi:!0,role:{value:["INTERNAL_AFFAIRS_STAFF","ECON_STAFF","MILCOM"],any:!0}},arguments:{nations:{name:"nations",optional:!0,desc:"Nations to list in the sheet\nDefaults to the guild alliance",type:"Set<DBNation>"},addColumns:{name:"addColumns",optional:!0,desc:"A space separated list of columns to add to the sheet\nCan include NationAttribute as placeholders in columns\nAll NationAttribute placeholders must be surrounded by {} e.g. {nation}",type:"List<String>[TextArea]"},sheet:{name:"sheet",optional:!0,flag:"sheet",type:"SpreadSheet"}}},cost:{help:"",desc:"Get the cost of military units and their upkeep",arguments:{units:{name:"units",type:"Map<MilitaryUnit,Long>"},wartime:{name:"wartime",optional:!0,desc:"Show the upkeep during war time",type:"Boolean"},nation:{name:"nation",optional:!0,flag:"n",type:"DBNation"}}},history:{help:"",desc:"Get the military unit count history (dates/times) for a nation",arguments:{nation:{name:"nation",type:"DBNation"},unit:{name:"unit",type:"MilitaryUnit"},page:{name:"page",optional:!0,flag:"p",type:"Integer"}}}},unregister:{help:"",desc:"Unregister a nation to a discord user",arguments:{nation:{name:"nation",optional:!0,type:"DBNation",def:"%user%"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},war:{blockade:{cancelrequest:{help:"",desc:"Cancel your requests to have your blockades broken",annotations:{role:{value:["MEMBER"]}}},find:{help:"",desc:"Find nations blockading your allies\nAllies with requests to have their blockade lifted are prioritized",annotations:{role:{value:["MEMBER"]}},arguments:{allies:{name:"allies",optional:!0,desc:"The nations to check for blockades",type:"Set<DBNation>"},targets:{name:"targets",optional:!0,desc:"The list of enemies to check blockading\nDefaults to all nations",type:"Set<DBNation>",def:"*"},myShips:{name:"myShips",optional:!0,flag:"s",desc:"The number of ships used to break the blockade\nDefaults to your current number of ships",type:"Integer"},numResults:{name:"numResults",optional:!0,flag:"r",type:"Integer",def:"5"}}},request:{help:"",desc:"Request your blockade be broken within a specific timeframe\ne.g. `/war blockade request diff:4day note:i am low on warchest`",annotations:{role:{value:["MEMBER"]}},arguments:{diff:{name:"diff",type:"long[Timediff]"},note:{name:"note",type:"String[TextArea]"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}}},canibeige:{help:"",desc:"List your wars you are allowed to beige\nAs set by this guild's configured beige policy: `ALLOWED_BEIGE_REASONS`",annotations:{role:{value:["MEMBER"]}},arguments:{nation:{name:"nation",optional:!0,desc:"The nation which is beiging\nDefaults to your own nation",type:"DBNation"}}},card:{help:"",desc:"Show a war card embed on discord for a war by id",arguments:{warId:{name:"warId",type:"int"}}},counter:{auto:{help:"",desc:"Auto generate counters\nAdd `-p` to ping users that are added\nAdd `-a` to skip adding users\nAdd `-m` to send standard counter messages",annotations:{role:{value:["MILCOM"]}},arguments:{enemy:{name:"enemy",type:"DBNation"},attackers:{name:"attackers",optional:!0,desc:"Nations to counter with\nDefault: This guild's alliance nations",type:"Set<DBNation>"},max:{name:"max",optional:!0,desc:"Max number of nations to counter with",type:"int",def:"3",min:0},pingMembers:{name:"pingMembers",optional:!0,flag:"p",desc:"Ping the countering nations on discord",type:"boolean"},skipAddMembers:{name:"skipAddMembers",optional:!0,flag:"a",desc:"Do not add countering nations to a war room for the enemy",type:"boolean"},sendMail:{name:"sendMail",optional:!0,flag:"m",desc:"Send counter message ingame to the nations countering",type:"boolean"}}},nation:{help:"",desc:"Get a list of nations to counter an enemy",groups:["Counter Options","Display Info"],group_descs:["By default active alliance members with free war slots will be used",""],annotations:{role:{value:["MILCOM"]}},arguments:{target:{name:"target",type:"DBNation"},counterWith:{name:"counterWith",optional:!0,desc:"Nations to counter with\nDefault: This guild's alliance nations",group:0,type:"Set<DBNation>"},allowMaxOffensives:{name:"allowMaxOffensives",optional:!0,flag:"o",desc:"Show counters from nations at max offensive wars\ni.e. They can counter when they finish a war",type:"boolean"},filterWeak:{name:"filterWeak",optional:!0,flag:"w",desc:"Remove countering nations weaker than the enemy",group:0,type:"boolean"},onlyOnline:{name:"onlyOnline",optional:!0,flag:"a",desc:"Remove countering nations that are inactive (2 days)",group:0,type:"boolean"},requireDiscord:{name:"requireDiscord",optional:!0,flag:"d",desc:"Remove countering nations NOT registered with Locutus",group:0,type:"boolean"},allowSameAlliance:{name:"allowSameAlliance",optional:!0,flag:"s",desc:"Don't filter out counters from the same alliance as the defender",group:0,type:"boolean"},includeInactive:{name:"includeInactive",optional:!0,flag:"i",type:"boolean"},includeNonMembers:{name:"includeNonMembers",optional:!0,flag:"m",type:"boolean"},ping:{name:"ping",optional:!0,flag:"p",desc:"Include the discord mention of countering nations",group:1,type:"boolean"}}},sheet:{help:"",desc:"Generate a sheet with a list of nations attacking `allies`\n(Defaults to those attacking allies)\nPlease still check the war history in case it is not valid to counter (and add a note to the note column indicating such)\nAdd `-a` to filter out applicants\nAdd `-i` to filter out inactive members\nAdd `-e` to include enemies not attacking",annotations:{role:{value:["MILCOM"]}},arguments:{enemyFilter:{name:"enemyFilter",optional:!0,desc:"Only include these attackers",type:"Set<DBNation>"},allies:{name:"allies",optional:!0,desc:"Show attackers against these alliances",type:"Set<DBAlliance>"},excludeApplicants:{name:"excludeApplicants",optional:!0,flag:"a",desc:"Exclude applicants",type:"boolean"},excludeInactives:{name:"excludeInactives",optional:!0,flag:"i",desc:"Exclude inactive nations (3.4 days)",type:"boolean"},includeAllEnemies:{name:"includeAllEnemies",optional:!0,flag:"e",desc:"Include enemies not attacking",type:"boolean"},sheetUrl:{name:"sheetUrl",optional:!0,flag:"s",type:"String"}}},stats:{help:"",desc:"View the percent times an alliance counters in-game wars",arguments:{alliance:{name:"alliance",type:"DBAlliance"}}},url:{help:"",desc:"Get a list of nations to counter a war\nAdd `-o` to ignore nations with 5 offensive slots\nAdd `-w` to filter out weak attackers\nAdd `-a` to only list active nations (past hour)",annotations:{role:{value:["MEMBER","MILCOM"],any:!0}},arguments:{war:{name:"war",type:"DBWar"},counterWith:{name:"counterWith",optional:!0,desc:"Nations to counter with\nDefault: This guild's alliance nations",type:"Set<DBNation>"},allowAttackersWithMaxOffensives:{name:"allowAttackersWithMaxOffensives",optional:!0,flag:"o",desc:"Show counters from nations at max offensive wars\ni.e. They can counter when they finish a war",type:"boolean"},filterWeak:{name:"filterWeak",optional:!0,flag:"w",desc:"Remove countering nations weaker than the enemy",type:"boolean"},onlyActive:{name:"onlyActive",optional:!0,flag:"a",desc:"Remove countering nations that are inactive (2 days)",type:"boolean"},requireDiscord:{name:"requireDiscord",optional:!0,flag:"d",desc:"Remove countering nations NOT registered with Locutus",type:"boolean"},allowSameAlliance:{name:"allowSameAlliance",optional:!0,flag:"s",desc:"Include counters from the same alliance as the defender",type:"boolean"},includeInactive:{name:"includeInactive",optional:!0,flag:"i",type:"boolean"},includeNonMembers:{name:"includeNonMembers",optional:!0,flag:"m",type:"boolean"},ping:{name:"ping",optional:!0,flag:"p",desc:"Include the discord mention of countering nations",type:"boolean"}}}},dnr:{help:"",desc:"Check if declaring war on a nation is allowed by the guild's Do Not Raid (DNR) settings",arguments:{nation:{name:"nation",type:"DBNation"}}},find:{blitztargets:{help:"",desc:"Generate a list of possible alliance blitz targets (for practice)\nTarget alliances are sorted by free war slots",annotations:{role:{value:["MILCOM"]}},arguments:{topX:{name:"topX",desc:"Exclude the top X alliances (by active nation score)",type:"int"},page:{name:"page",optional:!0,flag:"p",type:"Integer"}}},bounty:{help:"",desc:"Find nations with high bounties within your war range",annotations:{role:{value:["MEMBER"]}},arguments:{onlyWeaker:{name:"onlyWeaker",optional:!0,flag:"r",desc:"Only list enemies with less ground than you",type:"boolean"},ignoreDNR:{name:"ignoreDNR",optional:!0,flag:"d",desc:"Ignore the do not raid settings for this server",type:"boolean"},bountyTypes:{name:"bountyTypes",optional:!0,flag:"b",type:"Set<WarType>"},numResults:{name:"numResults",optional:!0,flag:"n",type:"Integer",def:"5"}}},damage:{help:"",desc:"Find a high infrastructure target\noptional alliance and sorting (default: active nations, sorted by damage stimate).\nTo see a list of coalitions, use `/coalition list`.\nDamage estimate is based on attacks you can perform (i.e. if you are stronger or have the project for missiles/nukes), and chance of success",groups:["Filter Options","Range Options","Display Options"],annotations:{role:{value:["MEMBER"]}},arguments:{nations:{name:"nations",type:"Set<DBNation>"},includeApps:{name:"includeApps",optional:!0,flag:"a",desc:"Include nations that are applicants (#position<=1)",group:0,type:"boolean"},includeInactives:{name:"includeInactives",optional:!0,flag:"i",desc:"Include nations that have been inactive\nDefault (2d for below city 11, 5d for above)",group:0,type:"boolean"},filterWeak:{name:"filterWeak",optional:!0,flag:"w",desc:"Exclude nations with stronger ground strength than you",group:0,type:"boolean"},noNavy:{name:"noNavy",optional:!0,flag:"n",desc:"Only include nations with no naval forces",group:0,type:"boolean"},targetMeanInfra:{name:"targetMeanInfra",optional:!0,flag:"m",desc:"Sort results by average infrastructure per city instead of damage estimate",group:0,type:"boolean"},targetCityMax:{name:"targetCityMax",optional:!0,flag:"c",desc:"Sort results by maximum single-city infrastructure instead of damage estimate",group:0,type:"boolean"},includeBeige:{name:"includeBeige",optional:!0,flag:"b",desc:"Include nations currently on beige status",group:0,type:"boolean"},relativeNavalStrength:{name:"relativeNavalStrength",optional:!0,flag:"r",desc:"Exclude targets whose naval strength exceeds this multiple of yours (e.g., `1.0` = ≤ your ships)",group:0,type:"Double"},warRange:{name:"warRange",optional:!0,flag:"s",desc:"Score range window for war targets relative to your score",group:1,type:"Double"},resultsInDm:{name:"resultsInDm",optional:!0,flag:"d",desc:"Send results via direct message instead of channel",group:2,type:"boolean"}}},enemy:{help:"",desc:"Find a war target that you can hit\nDefaults to `enemies` coalition",groups:["Output Options","Attacker Options","Filter Options"],annotations:{role:{value:["MEMBER"]}},arguments:{targets:{name:"targets",optional:!0,type:"Set<DBNation>",def:"~enemies"},numResults:{name:"numResults",optional:!0,desc:"Number of results to return\nDefaults to 8",group:0,type:"int",def:"8"},resultsInDm:{name:"resultsInDm",optional:!0,flag:"d",desc:"Return results in direct message",group:0,type:"boolean"},attackerScore:{name:"attackerScore",optional:!0,flag:"r",desc:"Score to search for targets within war range of\nDefaults to your score",group:1,type:"Double"},includeInactives:{name:"includeInactives",optional:!0,flag:"i",desc:"Include inactive nations in the search\nDefaults to false",group:2,type:"boolean"},includeApplicants:{name:"includeApplicants",optional:!0,flag:"a",desc:"Include applicants in the search\nDefaults to false",group:2,type:"boolean"},onlyPriority:{name:"onlyPriority",optional:!0,flag:"p",desc:"Only list targets with offensive wars they are winning",group:2,type:"boolean"},onlyWeak:{name:"onlyWeak",optional:!0,flag:"w",desc:"Only list targets weaker than you",group:2,type:"boolean"},onlyEasy:{name:"onlyEasy",optional:!0,flag:"e",desc:"Sort by easiest targets",group:2,type:"boolean"},onlyLessCities:{name:"onlyLessCities",optional:!0,flag:"c",desc:"Only list targets with less cities than you",group:2,type:"boolean"},includeStrong:{name:"includeStrong",optional:!0,flag:"s",desc:"Include nations much stronger than you in the search\nDefaults to false",group:2,type:"boolean"}}},raid:{help:"",desc:"Find targets to raid\nSorted by best nation loot\nDefaults to 7d inactive",groups:["Result Options","Filter Options"],annotations:{role:{value:["MEMBER","APPLICANT"],any:!0}},arguments:{targets:{name:"targets",optional:!0,type:"Set<DBNation>"},numResults:{name:"numResults",optional:!0,flag:"r",desc:"Number of top targets to return",group:0,type:"Integer",def:"5"},nationScore:{name:"nationScore",optional:!0,flag:"n",desc:"Specify the score range for results",group:0,type:"Double"},activeTimeCutoff:{name:"activeTimeCutoff",optional:!0,flag:"a",desc:"Exclude recently active nations (default: 7d)",group:1,type:"Long[Timediff]"},weakground:{name:"weakground",optional:!0,flag:"w",desc:"Only include nations with weakther ground than you",group:1,type:"boolean"},beigeTurns:{name:"beigeTurns",optional:!0,flag:"b",desc:"Include nations with a number of beige turns or less\nAlso includes nations without beige",group:1,type:"Integer"},vmTurns:{name:"vmTurns",optional:!0,flag:"v",desc:"Include nations with a number of vacation mode turns or less\nAlso includes nations without VM",group:1,type:"Integer"},defensiveSlots:{name:"defensiveSlots",optional:!0,flag:"s",desc:"Only show enemies with a specified number of free defensive slots",group:1,type:"Integer"},ignoreDNR:{name:"ignoreDNR",optional:!0,flag:"d",desc:"Bypass do-not-raid settings",group:1,type:"boolean"},ignoreBankLoot:{name:"ignoreBankLoot",optional:!0,flag:"l",desc:"Do not include potential alliance bank in loot and thus result rankings",group:1,type:"boolean"},ignoreCityRevenue:{name:"ignoreCityRevenue",optional:!0,flag:"c",desc:"Do not include potential city revenue in loot and thus result rankings",group:1,type:"boolean"}}},treasure:{help:"",desc:"Find nations in war range that have a treasure",annotations:{role:{value:["MEMBER"]}},arguments:{onlyWeaker:{name:"onlyWeaker",optional:!0,flag:"r",desc:"Only list enemies with less ground than you",type:"boolean"},ignoreDNR:{name:"ignoreDNR",optional:!0,flag:"d",desc:"Ignore the do not raid settings for this server",type:"boolean"},numResults:{name:"numResults",optional:!0,flag:"n",type:"Integer",def:"5"}}},unblockade:{help:"",desc:"Find nations blockading your allies\nAllies with requests to have their blockade lifted are prioritized",annotations:{role:{value:["MEMBER"]}},arguments:{allies:{name:"allies",optional:!0,desc:"The nations to check for blockades",type:"Set<DBNation>"},targets:{name:"targets",optional:!0,desc:"The list of enemies to check blockading\nDefaults to all nations",type:"Set<DBNation>",def:"*"},myShips:{name:"myShips",optional:!0,flag:"s",desc:"The number of ships used to break the blockade\nDefaults to your current number of ships",type:"Integer"},numResults:{name:"numResults",optional:!0,flag:"r",type:"Integer",def:"5"}}},unprotected:{help:"",desc:"Find nations who aren't protected, or are in an alliance unable to provide suitable counters\nNot suitable if you have no military",annotations:{role:{value:["MEMBER"]}},arguments:{targets:{name:"targets",type:"Set<DBNation>"},numResults:{name:"numResults",optional:!0,flag:"r",type:"Integer",def:"10",min:1,max:25},ignoreDNR:{name:"ignoreDNR",optional:!0,flag:"d",desc:"Ignore the configured Do Not Raid list",type:"boolean"},includeAllies:{name:"includeAllies",optional:!0,flag:"a",desc:"Include allies for finding suitable counters",type:"boolean"},nationsToBlitzWith:{name:"nationsToBlitzWith",optional:!0,flag:"n",desc:"The nations attacking\nDefaults to your nation",type:"Set<DBNation>"},maxRelativeTargetStrength:{name:"maxRelativeTargetStrength",optional:!0,flag:"s",desc:"The maximum allowed military strength of the target nation relative to you",type:"Double",def:"1.2"},maxRelativeCounterStrength:{name:"maxRelativeCounterStrength",optional:!0,flag:"c",desc:"The maximum allowed military strength of counters relative to you",type:"Double",def:"1.2"},withinAllAttackersRange:{name:"withinAllAttackersRange",optional:!0,flag:"w",desc:"Only list targets within range of ALL attackers",type:"boolean"},ignoreODP:{name:"ignoreODP",optional:!0,flag:"o",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}}},info:{help:"",desc:"Show war info for a nation",arguments:{nation:{name:"nation",type:"DBNation"}}},room:{create:{help:"",desc:"Create a war room\nAdd `-p` to ping users that are added\nAdd `-a` to skip adding users\nAdd `-f` to force create channels (if checks fail)\nAdd `-m` to send standard counter messages",annotations:{role:{value:["MILCOM"]}},arguments:{enemy:{name:"enemy",type:"DBNation"},attackers:{name:"attackers",desc:"Nations to counter with\nDefault: This guild's alliance nations",type:"Set<DBNation>"},max:{name:"max",optional:!0,desc:"Max number of nations to counter with",type:"int",def:"3",min:0},force:{name:"force",optional:!0,flag:"f",type:"boolean"},excludeWeakAttackers:{name:"excludeWeakAttackers",optional:!0,flag:"w",desc:"Remove countering nations weaker than the enemy",type:"boolean"},requireDiscord:{name:"requireDiscord",optional:!0,flag:"d",desc:"Remove countering nations NOT registered with Locutus",type:"boolean"},allowAttackersWithMaxOffensives:{name:"allowAttackersWithMaxOffensives",optional:!0,flag:"o",desc:"Show counters from nations at max offensive wars\ni.e. They can counter when they finish a war",type:"boolean"},pingMembers:{name:"pingMembers",optional:!0,flag:"p",desc:"Ping the countering nations on discord",type:"boolean"},skipAddMembers:{name:"skipAddMembers",optional:!0,flag:"a",desc:"Do not add countering nations to a war room for the enemy",type:"boolean"},sendMail:{name:"sendMail",optional:!0,flag:"m",desc:"Send counter message ingame to the nations countering",type:"boolean"}}},delete_for_enemies:{help:"",desc:"Delete war rooms against the enemies specified",annotations:{role:{value:["MILCOM"]}},arguments:{enemy_rooms:{name:"enemy_rooms",type:"Set<DBNation>"}}},delete_planning:{help:"",desc:"Delete planning war rooms with no participants",annotations:{role:{value:["MILCOM"]}}},from_sheet:{help:"",desc:"Create war rooms from a blitz sheet",annotations:{role:{value:["MILCOM"]}},arguments:{blitzSheet:{name:"blitzSheet",type:"SpreadSheet"},customMessage:{name:"customMessage",optional:!0,desc:"Custom message to send in each created war room",type:"String"},addCounterMessage:{name:"addCounterMessage",optional:!0,flag:"c",desc:"If the default counter message should be sent",type:"boolean"},ping:{name:"ping",optional:!0,flag:"p",desc:"If the added member should be pinged in the channel",type:"boolean"},addMember:{name:"addMember",optional:!0,flag:"m",desc:"If the member should be added to the war room",type:"boolean"},allowedNations:{name:"allowedNations",optional:!0,flag:"a",desc:"The nations from the blitz sheet to create war rooms for\nDefaults to everyone",type:"Set<DBNation>"},headerRow:{name:"headerRow",optional:!0,flag:"h",desc:"The row the blitz sheet header is one\nDefaults to first row",type:"Integer"},useLeader:{name:"useLeader",optional:!0,flag:"l",desc:"Parse nation leader instead of nation name",type:"boolean"},force:{name:"force",optional:!0,flag:"f",type:"boolean"}}},list:{help:"",desc:"List war rooms for an ally or enemy",arguments:{nation:{name:"nation",type:"DBNation"}}},pin:{help:"",desc:"Update the pin in the current war room channel",annotations:{role:{value:["MEMBER"]}}},purge:{help:"",desc:"Force a fetch and update of war rooms for each guild",annotations:{role:{value:["MILCOM"]}},arguments:{channel:{name:"channel",optional:!0,flag:"c",desc:"Only delete a single channel",type:"TextChannel"}}},setcategory:{help:"",desc:"Run this command in a war room to assign it to a category\n`/war room setcategory category:raid`",annotations:{role:{value:["MILCOM"]}},arguments:{category:{name:"category",desc:"The category to move this channel to",type:"Category",filter:"warcat.*"}}},sort:{help:"",desc:"Sorts the war rooms into the correct discord category\ne.g. `warcat-c1-10`",annotations:{role:{value:["MILCOM"]}}}},sheet:{reimbursebynation:{help:"",desc:"Generate csv of war cost by nation between alliances (for reimbursement)\nFilters out wars where nations did not perform actions",arguments:{allies:{name:"allies",desc:"The alliances with nations you want to reimburse",type:"Set<DBAlliance>"},enemies:{name:"enemies",desc:"The enemies during the conflict",type:"Set<DBAlliance>"},cutoff:{name:"cutoff",desc:"Starting time of the conflict",type:"long[Timestamp]"},removeWarsWithNoDefenderActions:{name:"removeWarsWithNoDefenderActions",desc:"If wars with no actions by the defender should NOT be reimbursed",type:"boolean"}}},blitzsheet:{help:"",desc:"Generates a a blitz sheet\nA blitz sheet contains a list of defenders (left column) and auto assigns attackers (right columns)\nNote: If the blitz sheet generated has a lot of city updeclares or unslotted enemies it is recommended to go through and remove low priority defenders\n- Low priority could be enemies without a recent offensive war, inactive, low military, or poor activity\n- Example defNations: `~enemies,#position>1,#active_m<4880,#dayssincelastoffensive>200,#dayssince3consecutivelogins>120,#aircraftpct<0.8,#tankpct<=0.6`Note: To avoid updeclares enable `onlyEasyTargets`",groups:["Attacker Nations","Defender Nations","Offensive Slot Settings","Activity Filters","Target Ratios","Spreadsheet Options"],annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{attNations:{name:"attNations",desc:"Nations that should be used for the attackers\nIt is recommended to use a google sheet of the attackers available",group:0,type:"Set<DBNation>"},defNations:{name:"defNations",desc:"Nations that should be used for the defenders\nIt is recommended to use a google sheet of the priority defenders (unless you are sure you can hit every nation)",group:0,type:"Set<DBNation>"},maxOff:{name:"maxOff",optional:!0,desc:"How many offensive slots a nation can have (defaults to 3)",group:1,type:"int",def:"3",min:1,max:5},sameAAPriority:{name:"sameAAPriority",optional:!0,desc:"Value between 0 and 1 to prioritize assigning a target to nations in the same alliance\nDefault: 0",group:1,type:"double",def:"0"},sameActivityPriority:{name:"sameActivityPriority",optional:!0,desc:"Value between 0 and 1 to prioritize assigning targets to nations with similar activity patterns\nRecommended not to use if you know who is attacking",group:1,type:"double",def:"0"},turn:{name:"turn",optional:!0,desc:"The turn in the day (between 0 and 11) when you expect the blitz to happen",group:1,type:"int",def:"-1",min:-1,max:11},attActivity:{name:"attActivity",optional:!0,desc:"A value between 0 and 1 to filter out attackers below this level of daily activity (default: 0, which is 0%)\nRecommend using if you did not provide a sheet of attackers",group:2,type:"double",def:"0"},defActivity:{name:"defActivity",optional:!0,desc:"A value between 0 and 1 to filter out defenders below this level of activity (default: 0)\nRecommend using if you did not provide a sheet of defenders",group:2,type:"double",def:"0"},processActiveWars:{name:"processActiveWars",optional:!0,flag:"w",desc:"Factor in existing wars of attackers and defenders\ni.e. To determine slots available and nation strength",group:3,type:"boolean",def:"true"},onlyEasyTargets:{name:"onlyEasyTargets",optional:!0,flag:"e",desc:"Only assign down declares",group:3,type:"boolean"},maxCityRatio:{name:"maxCityRatio",optional:!0,flag:"c",desc:"Maximum ratio of defender cities to attacker\ne.g. A value of 1.5 means defenders can have 1.5x more cities than the attacker",group:4,type:"Double"},maxGroundRatio:{name:"maxGroundRatio",optional:!0,flag:"g",desc:"Maximum ratio of defender ground strength to attacker\ne.g. A value of 1.5 means defenders can have 1.5x more ground strength than the attacker",group:4,type:"Double"},maxAirRatio:{name:"maxAirRatio",optional:!0,flag:"a",desc:"Maximum ratio of defender aircraft to attacker\ne.g. A value of 1.5 means defenders can have 1.5x more aircraft than the attacker",group:4,type:"Double"},sheet:{name:"sheet",optional:!0,flag:"s",desc:"The spreadsheet to use for the blitz sheet",group:5,type:"SpreadSheet"}}},costbyresource:{help:"",desc:"Transfer sheet of war cost (for each nation) broken down by resource type\nUseful to see costs incurred by fighting for each nation, to plan for future wars, or to help with reimbursement",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{attackers:{name:"attackers",type:"Set<NationOrAlliance>"},defenders:{name:"defenders",type:"Set<NationOrAlliance>"},time:{name:"time",type:"long[Timestamp]"},excludeConsumption:{name:"excludeConsumption",optional:!0,flag:"c",type:"boolean"},excludeInfra:{name:"excludeInfra",optional:!0,flag:"i",type:"boolean"},excludeLoot:{name:"excludeLoot",optional:!0,flag:"l",type:"boolean"},excludeUnitCost:{name:"excludeUnitCost",optional:!0,flag:"u",type:"boolean"},includeGray:{name:"includeGray",optional:!0,flag:"g",desc:"Include nations on the gray color bloc",type:"boolean"},includeDefensives:{name:"includeDefensives",optional:!0,flag:"d",desc:"Include defensive wars",type:"boolean"},normalizePerCity:{name:"normalizePerCity",optional:!0,flag:"n",desc:"Use the average cost per city",type:"boolean"},normalizePerWar:{name:"normalizePerWar",optional:!0,flag:"w",desc:"Use the average cost per war",type:"boolean"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},costsheet:{help:"",desc:"War cost (for each nation) broken down by war type\nThe sheet is divided into groups for:\n- Raids: Attacking nations which do not fight back\n- Defenses: Attacked by a nation and fighting back\n- Offenses: Attacking a nation which fights back\n- Wars: Combination of defensive and offensive wars (not raids)",annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{attackers:{name:"attackers",type:"Set<NationOrAlliance>"},defenders:{name:"defenders",type:"Set<NationOrAlliance>"},time:{name:"time",type:"long[Timestamp]"},endTime:{name:"endTime",optional:!0,type:"Long[Timestamp]"},excludeConsumption:{name:"excludeConsumption",optional:!0,flag:"c",type:"boolean"},excludeInfra:{name:"excludeInfra",optional:!0,flag:"i",type:"boolean"},excludeLoot:{name:"excludeLoot",optional:!0,flag:"l",type:"boolean"},excludeUnitCost:{name:"excludeUnitCost",optional:!0,flag:"u",type:"boolean"},normalizePerCity:{name:"normalizePerCity",optional:!0,flag:"n",desc:"Average the cost by the nation's city count",type:"boolean"},useLeader:{name:"useLeader",optional:!0,flag:"leader",type:"boolean"},total:{name:"total",optional:!0,flag:"t",type:"boolean"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},raid:{help:"",desc:"Generate a sheet of raid targets",annotations:{role:{value:["MILCOM"]}},arguments:{attackers:{name:"attackers",type:"Set<DBNation>"},targets:{name:"targets",type:"Set<DBNation>"},includeInactiveAttackers:{name:"includeInactiveAttackers",optional:!0,flag:"i",type:"boolean"},includeApplicantAttackers:{name:"includeApplicantAttackers",optional:!0,flag:"a",type:"boolean"},includeBeigeAttackers:{name:"includeBeigeAttackers",optional:!0,flag:"b",type:"boolean"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}},validate:{help:"",desc:"Run checks on nations in a blitz sheet\n- In range of their blitz targets- Still in the alliance- Have no more than the provided number of offensive wars\nSheet columns: `nation`, `att1`, `att1`, `att3`",annotations:{role:{value:["MILCOM"]}},arguments:{sheet:{name:"sheet",type:"SpreadSheet"},maxWars:{name:"maxWars",optional:!0,desc:"Max wars per attacker",type:"int",def:"3"},nationsFilter:{name:"nationsFilter",optional:!0,desc:"Only allow attacking these nations",type:"Set<DBNation>",def:"*"},attackerFilter:{name:"attackerFilter",optional:!0,type:"Set<DBNation>"},useLeader:{name:"useLeader",optional:!0,flag:"l",desc:"Parse nation leader instead of nation name",type:"boolean"},headerRow:{name:"headerRow",optional:!0,flag:"h",desc:"Which row of the sheet has the header\nDefault: 1st row",type:"Integer"}}},warsheet:{help:"",desc:"Generate a sheet of active wars between two coalitions (allies, enemies)\nAdd `-i` to list concluded wars",groups:["Additional War Options"],annotations:{role:{value:["MEMBER"],onlyInGuildAlliance:!0}},arguments:{allies:{name:"allies",type:"Set<DBNation>"},enemies:{name:"enemies",type:"Set<DBNation>"},startTime:{name:"startTime",optional:!0,desc:"Cutoff date for wars (default 5 days ago)",group:0,type:"long[Timestamp]",def:"5d"},endTime:{name:"endTime",optional:!0,flag:"e",type:"Long[Timestamp]"},includeConcludedWars:{name:"includeConcludedWars",optional:!0,flag:"i",desc:"If concluded wars within the timeframe should be included",group:0,type:"boolean"},sheet:{name:"sheet",optional:!0,flag:"s",type:"SpreadSheet"}}}}},web:{help:"",desc:"Get the login code for the web interface"},who:{help:"",desc:"Get detailed information about a nation\nNation argument can be nation name, id, link, or discord tag\ne.g. `/who @borg`",arguments:{nationOrAlliances:{name:"nationOrAlliances",desc:"The nations to get info about",type:"Set<NationOrAlliance>"},sortBy:{name:"sortBy",optional:!0,desc:"Sort any listed nations by this attribute",type:"TypedFunction<DBNation,Double>"},list:{name:"list",optional:!0,flag:"l",desc:"List the nations instead of just providing a summary",type:"boolean"},listAlliances:{name:"listAlliances",optional:!0,flag:"a",desc:"List the alliances of the provided nation",type:"boolean"},listRawUserIds:{name:"listRawUserIds",optional:!0,flag:"r",desc:"List the discord user ids of each nation",type:"boolean"},listMentions:{name:"listMentions",optional:!0,flag:"m",desc:"List the discord user mentions of each nation",type:"boolean"},listInfo:{name:"listInfo",optional:!0,flag:"i",desc:"List paginated info of each nation",type:"boolean"},listChannels:{name:"listChannels",optional:!0,flag:"c",desc:"List all interview channels of each nation",type:"boolean"},snapshotDate:{name:"snapshotDate",optional:!0,flag:"s",type:"Long[Timestamp]"},page:{name:"page",optional:!0,flag:"p",type:"Integer"}}}},placeholders:{DBAlliance:{commands:{countmembers:{help:"",desc:"Number of members, not including VM",return_type:"int"},countnations:{help:"",desc:"Count of nations in alliance matching a filter",return_type:"int",arguments:{filter:{name:"filter",optional:!0,type:"Predicate<DBNation>"}}},exponentialcitystrength:{help:"",desc:"",return_type:"double",arguments:{power:{name:"power",optional:!0,type:"Double"}}},getacronym:{help:"",desc:"",return_type:"String"},getagedays:{help:"",desc:"Days since the alliance was created (decimal)",return_type:"double"},getalliance_id:{help:"",desc:"",return_type:"int"},getaverage:{help:"",desc:"Average of nation attribute for specific nations in alliance",return_type:"double",arguments:{attribute:{name:"attribute",type:"TypedFunction<DBNation,Double>"},filter:{name:"filter",optional:!0,type:"Predicate<DBNation>"}}},getaverageper:{help:"",desc:"Returns the average value of the given attribute per another attribute (such as cities)",return_type:"double",arguments:{attribute:{name:"attribute",type:"TypedFunction<DBNation,Double>"},per:{name:"per",type:"TypedFunction<DBNation,Double>"},filter:{name:"filter",optional:!0,type:"Predicate<DBNation>"}}},getboughtassetcount:{help:"",desc:"The number of the specified assets bought for members in this alliance over the period, regardless of leaving",return_type:"int",arguments:{assets:{name:"assets",type:"Set<GrowthAsset>"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"}}},getcities:{help:"",desc:"",return_type:"double"},getcolor:{help:"",desc:"",return_type:"NationColor"},getcostconverted:{help:"",desc:"",return_type:"double"},getcumulativerevenue:{help:"",desc:"The cumulative revenue members have produced over the period, accounting for joins/leaves, radiation, city, building, policy, and project changes",return_type:"Map<ResourceType, Double>",arguments:{start:{name:"start",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"}}},getcumulativerevenuevalue:{help:"",desc:"The cumulative market value (current prices) of revenue members have produced over the period, accounting for joins/leaves, radiation, city, building, policy, and project changes",return_type:"double",arguments:{start:{name:"start",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"}}},getdatecreated:{help:"",desc:"",return_type:"long"},getdiscord_link:{help:"",desc:"",return_type:"String"},geteffectiveboughtassetcount:{help:"",desc:"The number of the specified assets bought for remaining members in this alliance over the period",return_type:"int",arguments:{assets:{name:"assets",type:"Set<GrowthAsset>"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"}}},geteffectivespending:{help:"",desc:"The resources this alliance has spent on remaining members' cities over a period",return_type:"Map<ResourceType, Double>",arguments:{assets:{name:"assets",type:"Set<GrowthAsset>"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"}}},geteffectivespendingvalue:{help:"",desc:"The value the alliance has spent on remaining members' cities over a period",return_type:"double",arguments:{assets:{name:"assets",type:"Set<GrowthAsset>"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"}}},getestimatedstockpile:{help:"",desc:"Estimated stockpile based on last loot info",return_type:"Map<ResourceType, Double>"},getestimatedstockpilevalue:{help:"",desc:"Estimated stockpile value based on last loot info",return_type:"double"},getflag:{help:"",desc:"",return_type:"String"},getforum_link:{help:"",desc:"",return_type:"String"},getid:{help:"",desc:"",return_type:"int"},getloot:{help:"",desc:"Loot resources for a specific score",return_type:"Map<ResourceType, Double>",arguments:{score:{name:"score",type:"double"}}},getlootvalue:{help:"",desc:"Loot value for a specific score",return_type:"double",arguments:{score:{name:"score",type:"double"}}},getmarkdownurl:{help:"",desc:"Get the markdown url of this alliance",return_type:"String"},getmembershipchangeassetcount:{help:"",desc:"The number of membership changes by reason\nNations can have multiple membership changes over a duration\n- RECRUITED: 7d or less nation becomes member\n- JOINED: Nation >7d becomes member\n- LEFT: Nation is set to applicant, none, or leaves the alliance (does not include delete/vm)\n- DELETED: nation deletes\n- VM_LEFT: Nation goes into VM\n- VM_RETURNED: Nation leaves VM",return_type:"int",arguments:{reasons:{name:"reasons",type:"Set<MembershipChangeReason>"},assets:{name:"assets",type:"Set<GrowthAsset>"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"}}},getmembershipchangeassetrss:{help:"",desc:"The resource value of the specified assets associated with the provided membership change reasons\nNations can have multiple membership changes over a duration\n- RECRUITED: 7d or less nation becomes member\n- JOINED: Nation >7d becomes member\n- LEFT: Nation is set to applicant, none, or leaves the alliance (does not include delete/vm)\n- DELETED: nation deletes\n- VM_LEFT: Nation goes into VM\n- VM_RETURNED: Nation leaves VM",return_type:"Map<ResourceType, Double>",arguments:{reasons:{name:"reasons",type:"Set<MembershipChangeReason>"},assets:{name:"assets",type:"Set<GrowthAsset>"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"}}},getmembershipchangeassetvalue:{help:"",desc:"The market value of the specified assets associated with the provided membership change reasons\nNations can have multiple membership changes over a duration\n- RECRUITED: 7d or less nation becomes member\n- JOINED: Nation >7d becomes member\n- LEFT: Nation is set to applicant, none, or leaves the alliance (does not include delete/vm)\n- DELETED: nation deletes\n- VM_LEFT: Nation goes into VM\n- VM_RETURNED: Nation leaves VM",return_type:"double",arguments:{reasons:{name:"reasons",type:"Set<MembershipChangeReason>"},assets:{name:"assets",type:"Set<GrowthAsset>"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"}}},getmembershipchangesbyreason:{help:"",desc:"The number of membership changes by reason\nNations can have multiple membership changes over a duration\n- RECRUITED: 7d or less nation becomes member\n- JOINED: Nation >7d becomes member\n- LEFT: Nation is set to applicant, none, or leaves the alliance (does not include delete/vm)\n- DELETED: nation deletes\n- VM_LEFT: Nation goes into VM\n- VM_RETURNED: Nation leaves VM",return_type:"int",arguments:{reasons:{name:"reasons",type:"Set<MembershipChangeReason>"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"}}},getmetricat:{help:"",desc:"Get value of an alliance metric at a date",return_type:"double",arguments:{metric:{name:"metric",type:"AllianceMetric"},date:{name:"date",optional:!0,type:"Long[Timestamp]"}}},getmetricsgraph:{help:"",desc:"",return_type:"Map<String, Object>",arguments:{metrics:{name:"metrics",type:"Set<AllianceMetric>"},start:{name:"start",optional:!0,type:"Long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"}}},getmilitarizationgraph:{help:"",desc:"",return_type:"Map<String, Object>",arguments:{start:{name:"start",optional:!0,type:"Long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"}}},getname:{help:"",desc:"",return_type:"String"},getnetasset:{help:"",desc:"The net change in an asset count for members over a period",return_type:"int",arguments:{asset:{name:"asset",type:"GrowthAsset"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"}}},getnetassetvalue:{help:"",desc:"The net change in an asset value for members over a period",return_type:"double",arguments:{asset:{name:"asset",type:"Set<GrowthAsset>"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"}}},getnetmembersacquired:{help:"",desc:"The number of members which have joined and remained in the alliance over the period (all sources)",return_type:"int",arguments:{start:{name:"start",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"}}},getnumtreasures:{help:"",desc:"Number of treasures in the alliance",return_type:"int"},getnumwarssince:{help:"",desc:"Number of offensive and defensive wars since date",return_type:"int",arguments:{date:{name:"date",type:"long"}}},getrank:{help:"",desc:"Rank by score",return_type:"int",arguments:{filter:{name:"filter",optional:!0,type:"Predicate<DBNation>"}}},getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}},getrevenue:{help:"",desc:"Revenue of taxable alliance members",return_type:"Map<ResourceType, Double>"},getrevenueconverted:{help:"",desc:"Market value of alliance revenue of taxable member nations",return_type:"double"},getscore:{help:"",desc:"",return_type:"double",arguments:{filter:{name:"filter",optional:!0,type:"Predicate<DBNation>"}}},getsheeturl:{help:"",desc:"Google sheet named url",return_type:"String"},getspending:{help:"",desc:"The resources this alliance has spent on member cities over a period",return_type:"Map<ResourceType, Double>",arguments:{assets:{name:"assets",type:"Set<GrowthAsset>"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"}}},getspendingvalue:{help:"",desc:"The value the alliance has spent on member cities over a period",return_type:"double",arguments:{assets:{name:"assets",type:"Set<GrowthAsset>"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"}}},gettotal:{help:"",desc:"Sum of nation attribute for specific nations in alliance",return_type:"double",arguments:{attribute:{name:"attribute",type:"TypedFunction<DBNation,Double>"},filter:{name:"filter",optional:!0,type:"Predicate<DBNation>"}}},gettreasurebonus:{help:"",desc:"Treasure bonus (decimal percent between 0-1)",return_type:"double"},gettreatiedallies:{help:"",desc:"",return_type:"Set<DBAlliance>"},gettreatyordinal:{help:"",desc:"Get the treaty level number with another alliance\n0 = No Treaty1 = PIAT2 = NAP3 = NPT4 = ODP5 = ODOAP6 = PROTECTORATE7 = MDP8 = MDOAP",return_type:"int",arguments:{alliance:{name:"alliance",type:"DBAlliance"}}},gettreatytype:{help:"",desc:"Get the treaty type with another alliance",return_type:"TreatyType",arguments:{alliance:{name:"alliance",type:"DBAlliance"}}},geturl:{help:"",desc:"Get the alliance's in-game link",return_type:"String"},getweburl:{help:"",desc:"Markdown url to the bot's web page for the nation (instead of ingame page)",return_type:"String"},getwiki_link:{help:"",desc:"",return_type:"String"},hasdefensivetreaty:{help:"",desc:"Is allied with another alliance",return_type:"boolean",arguments:{alliances:{name:"alliances",type:"Set<DBAlliance>"}}}},selectors:[["aa:ALLIANCE_NAME","aa:Rose","A qualified alliance name"],["alliance:ALLIANCE_NAME","alliance:Eclipse","A qualified alliance name"],["alliance/id=ALLIANCE_ID","alliance/id=790","An alliance url"],["ALLIANCE_ID","790","An alliance id"],["coalition:COALITION","coalition:allies","A qualified coalition name"],["~COALITION","~enemies","A coalition name"],["*",null,"All alliances"]],columns:["alliance","{id}","{name}","{getname}","{getid}"]},AttackType:{commands:{candamage:{help:"",desc:"If this attack is one that can damage the enemy",return_type:"boolean"},getattackeravgcasualties:{help:"",desc:"Get the average unit casualties for the attacker.",return_type:"int",arguments:{unit:{name:"unit",type:"MilitaryUnit"},attacker:{name:"attacker",type:"DBNation"},defender:{name:"defender",type:"DBNation"},victory:{name:"victory",optional:!0,type:"SuccessType",def:"IMMENSE_TRIUMPH"},warType:{name:"warType",optional:!0,type:"WarType",def:"raid"},defAirControl:{name:"defAirControl",optional:!0,type:"boolean",def:"false"},attAirControl:{name:"attAirControl",optional:!0,type:"boolean",def:"false"},defFortified:{name:"defFortified",optional:!0,type:"boolean",def:"false"},equipAttackerSoldiers:{name:"equipAttackerSoldiers",optional:!0,type:"boolean",def:"true"},equipDefenderSoldiers:{name:"equipDefenderSoldiers",optional:!0,type:"boolean",def:"true"},attGroundControl:{name:"attGroundControl",optional:!0,type:"boolean",def:"false"}}},getattackermaxcasualties:{help:"",desc:"Get the maximum unit casualties for the attacker.",return_type:"int",arguments:{unit:{name:"unit",type:"MilitaryUnit"},attacker:{name:"attacker",type:"DBNation"},defender:{name:"defender",type:"DBNation"},victory:{name:"victory",optional:!0,type:"SuccessType",def:"IMMENSE_TRIUMPH"},warType:{name:"warType",optional:!0,type:"WarType",def:"raid"},defAirControl:{name:"defAirControl",optional:!0,type:"boolean",def:"false"},attAirControl:{name:"attAirControl",optional:!0,type:"boolean",def:"false"},defFortified:{name:"defFortified",optional:!0,type:"boolean",def:"false"},equipAttackerSoldiers:{name:"equipAttackerSoldiers",optional:!0,type:"boolean",def:"true"},equipDefenderSoldiers:{name:"equipDefenderSoldiers",optional:!0,type:"boolean",def:"true"},attGroundControl:{name:"attGroundControl",optional:!0,type:"boolean",def:"false"}}},getattackermincasualties:{help:"",desc:"Get the minimum unit casualties for the attacker.",return_type:"int",arguments:{unit:{name:"unit",type:"MilitaryUnit"},attacker:{name:"attacker",type:"DBNation"},defender:{name:"defender",type:"DBNation"},victory:{name:"victory",optional:!0,type:"SuccessType",def:"IMMENSE_TRIUMPH"},warType:{name:"warType",optional:!0,type:"WarType",def:"raid"},defAirControl:{name:"defAirControl",optional:!0,type:"boolean",def:"false"},attAirControl:{name:"attAirControl",optional:!0,type:"boolean",def:"false"},defFortified:{name:"defFortified",optional:!0,type:"boolean",def:"false"},equipAttackerSoldiers:{name:"equipAttackerSoldiers",optional:!0,type:"boolean",def:"true"},equipDefenderSoldiers:{name:"equipDefenderSoldiers",optional:!0,type:"boolean",def:"true"},attGroundControl:{name:"attGroundControl",optional:!0,type:"boolean",def:"false"}}},getdefenderavgcasualties:{help:"",desc:"Get the average unit casualties for the defender.",return_type:"int",arguments:{unit:{name:"unit",type:"MilitaryUnit"},attacker:{name:"attacker",type:"DBNation"},defender:{name:"defender",type:"DBNation"},victory:{name:"victory",optional:!0,type:"SuccessType",def:"IMMENSE_TRIUMPH"},warType:{name:"warType",optional:!0,type:"WarType",def:"raid"},defAirControl:{name:"defAirControl",optional:!0,type:"boolean",def:"false"},attAirControl:{name:"attAirControl",optional:!0,type:"boolean",def:"false"},defFortified:{name:"defFortified",optional:!0,type:"boolean",def:"false"},equipAttackerSoldiers:{name:"equipAttackerSoldiers",optional:!0,type:"boolean",def:"true"},equipDefenderSoldiers:{name:"equipDefenderSoldiers",optional:!0,type:"boolean",def:"true"},attGroundControl:{name:"attGroundControl",optional:!0,type:"boolean",def:"false"}}},getdefendermaxcasualties:{help:"",desc:"Get the maximum unit casualties for the defender.",return_type:"int",arguments:{unit:{name:"unit",type:"MilitaryUnit"},attacker:{name:"attacker",type:"DBNation"},defender:{name:"defender",type:"DBNation"},victory:{name:"victory",optional:!0,type:"SuccessType",def:"IMMENSE_TRIUMPH"},warType:{name:"warType",optional:!0,type:"WarType",def:"raid"},defAirControl:{name:"defAirControl",optional:!0,type:"boolean",def:"false"},attAirControl:{name:"attAirControl",optional:!0,type:"boolean",def:"false"},defFortified:{name:"defFortified",optional:!0,type:"boolean",def:"false"},equipAttackerSoldiers:{name:"equipAttackerSoldiers",optional:!0,type:"boolean",def:"true"},equipDefenderSoldiers:{name:"equipDefenderSoldiers",optional:!0,type:"boolean",def:"true"},attGroundControl:{name:"attGroundControl",optional:!0,type:"boolean",def:"false"}}},getdefendermincasualties:{help:"",desc:"Get the minimum unit casualties for the defender.",return_type:"int",arguments:{unit:{name:"unit",type:"MilitaryUnit"},attacker:{name:"attacker",type:"DBNation"},defender:{name:"defender",type:"DBNation"},victory:{name:"victory",optional:!0,type:"SuccessType",def:"IMMENSE_TRIUMPH"},warType:{name:"warType",optional:!0,type:"WarType",def:"raid"},defAirControl:{name:"defAirControl",optional:!0,type:"boolean",def:"false"},attAirControl:{name:"attAirControl",optional:!0,type:"boolean",def:"false"},defFortified:{name:"defFortified",optional:!0,type:"boolean",def:"false"},equipAttackerSoldiers:{name:"equipAttackerSoldiers",optional:!0,type:"boolean",def:"true"},equipDefenderSoldiers:{name:"equipDefenderSoldiers",optional:!0,type:"boolean",def:"true"},attGroundControl:{name:"attGroundControl",optional:!0,type:"boolean",def:"false"}}},getmapused:{help:"",desc:"The Military Action Points (MAP) used for this attack type",return_type:"int"},getname:{help:"",desc:"The name of this attack type",return_type:"String"},getresistance:{help:"",desc:"Resistance points dealt for an attack with the given success types",return_type:"int",arguments:{success:{name:"success",type:"SuccessType"}}},getresistanceit:{help:"",desc:"Resistance points dealt for a successful attack",return_type:"int"},getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}},getunittype:{help:"",desc:"Get the unit type at the given index",return_type:"MilitaryUnit",arguments:{index:{name:"index",type:"int"}}},isvictory:{help:"",desc:"If this attack type is a victory",return_type:"boolean"}},selectors:[["ATTACKTYPE","`GROUND`, `VICTORY`, `FORTIFY`, `A_LOOT`, `AIRSTRIKE_INFRA`, `AIRSTRIKE_SOLDIER`, `AIRSTRIKE_TANK`, `AIRSTRIKE_MONEY`, `AIRSTRIKE_SHIP`, `AIRSTRIKE_AIRCRAFT`, `NAVAL`, `PEACE`, `MISSILE`, `NUKE`, `NAVAL_INFRA`, `NAVAL_AIR`, `NAVAL_GROUND`","One of the entity values"]],columns:["attack_type"]},AuditType:{commands:{getemoji:{help:"",desc:"Audit emoji",return_type:"String"},getname:{help:"",desc:"Name of the audit",return_type:"String"},getrequired:{help:"",desc:"The required audit, or null",return_type:"AuditType"},getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}},getseverity:{help:"",desc:"Audit severity",return_type:"AuditSeverity"},requiresapi:{help:"",desc:"Audit requires API access",return_type:"boolean"},requiresdiscord:{help:"",desc:"Audit requries member has discord",return_type:"boolean"}},selectors:[["AUDITTYPE","`CHECK_RANK`, `INACTIVE`, `FINISH_OBJECTIVES`, `FIX_COLOR`, `CHANGE_CONTINENT`, `FIX_WAR_POLICY`, `RAID`, `UNUSED_MAP`, `BARRACKS`, `INCORRECT_MMR`, `BUY_SOLDIERS`, `BUY_HANGARS`, `BUY_PLANES`, `BUY_SHIPS`, `BEIGE_LOOT`, `RAID_TURN_CHANGE`, `BUY_SPIES`, `GATHER_INTEL`, `SPY_COMMAND`, `LOOT_COMMAND`, `DAILY_SPYOPS`, `DEPOSIT_RESOURCES`, `CHECK_DEPOSITS`, `WITHDRAW_DEPOSITS`, `OBTAIN_RESOURCES`, `SAFEKEEP`, `OBTAIN_WARCHEST`, `BUY_CITY`, `BUY_PROJECT`, `ACTIVITY_CENTER`, `BUY_INFRA`, `BUY_LAND`, `UNPOWERED`, `OVERPOWERED`, `NOT_NUCLEAR`, `FREE_SLOTS`, `NEGATIVE_REVENUE`, `MISSING_PRODUCTION_BONUS`, `EXCESS_HOSPITAL`, `EXCESS_POLICE`, `EXCESS_RECYCLING`, `GENERATE_CITY_BUILDS`, `BLOCKADED`","One of the entity values"]],columns:["audit"]},DBBan:{commands:{getdate:{help:"",desc:"Date of ban",return_type:"long"},getdiscordid:{help:"",desc:"Discord ID banned",return_type:"long"},getenddate:{help:"",desc:"Get the date this ban expires (epoch milliseconds)",return_type:"long"},getexistingnation:{help:"",desc:"The existing nation (if any) that corresponds to this ban",return_type:"DBNation"},getnation_id:{help:"",desc:"Nation ID banned",return_type:"int"},getreason:{help:"",desc:"Reason for ban",return_type:"String"},getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}},gettimeremaining:{help:"",desc:"Get time remaining on this ban (in milliseconds)",return_type:"long"},hasexistingnation:{help:"",desc:"Nation or discord corresponds to existing nation",return_type:"boolean"},isexpired:{help:"",desc:"Is this ban expired",return_type:"boolean"}},selectors:[["BAN","1234","Ban ID"],["NATION","189573","Nation id, name, leader, url, user id or mention (see nation type)"],["*",null,"All bans"]],columns:["bans"]},DBBounty:{commands:{getamount:{help:"",desc:"The amount of the bounty",return_type:"long"},getdate:{help:"",desc:"Get the date this bounty was posted (epoch milliseconds)",return_type:"long"},getid:{help:"",desc:"Get the id of this bounty",return_type:"int"},getnation:{help:"",desc:"Get the nation this bounty is for",return_type:"DBNation"},getnationid:{help:"",desc:"Get the nation id of the bounty",return_type:"int"},getpostedby:{help:"",desc:"The nation id posting the bounty (if any)",return_type:"int"},getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}},gettype:{help:"",desc:"The type of bounty",return_type:"WarType"},tolinestring:{help:"",desc:"String of the bounty type and amount",return_type:"String"}},selectors:[["BOUNTY_ID","12345","Bounty ID"],["*",null,"All bounties"],["nation:NATION_NAME","nation:Borg","A qualified nation name"],["leader:NATION_NAME","leader:Danzek","A qualified leader name"],["aa:ALLIANCE_NAME","aa:Rose","A qualified alliance name"],["alliance:ALLIANCE_NAME","alliance:Eclipse","A qualified alliance name"],["nation/id=NATION_ID","nation/id=6","A nation url"],["alliance/id=ALLIANCE_ID","alliance/id=790","An alliance url"],["coalition:COALITION","coalition:allies","A qualified coalition name"],["~COALITION","~enemies","A coalition name"],["NATION_NAME","Borg","An unqualified nation name"],["LEADER_NAME","Danzek","An unqualified leader name"],["NATION_ID","189573","A nation id"],["ALLIANCE_ID","790","An alliance id"],["@ROLE_MENTION","@Member","A discord role mention or name"],["ROLE_ID","123456789012345678","A discord role id"],["@USER_MENTION","@xdnw","A discord user mention or name"],["USER_ID","123456789012345678","A discord user id"],["https://test.politicsandwar.com/index.php?id=15&tax_id=TAX_ID","https://test.politicsandwar.com/index.php?id=15&tax_id=1234","A full tax url"],["TAX_ID","tax_id=1234","A tax bracket id or url"],["nation(<timestamp>,<includeVM:bool>):SELECTOR","nation(5d,true):*","As a sheet tab name; a snapshot selector, with optional timestamp and includeVM"]],columns:["bounty"]},Building:{commands:{canbuild:{help:"",desc:"If this building can be built in a specific continent",return_type:"boolean",arguments:{continent:{name:"continent",type:"Continent"}}},cost:{help:"",desc:"Get the cost of this building for a specific resource",return_type:"double",arguments:{type:{name:"type",type:"ResourceType"}}},countcanbuild:{help:"",desc:"Get the number of nations that can build this building",return_type:"int",arguments:{nations:{name:"nations",type:"Set<DBNation>"}}},getaverage:{help:"",desc:"Get the average number of this building across the specified nations",return_type:"int",arguments:{nations:{name:"nations",type:"Set<DBNation>"}}},getbaseproduction:{help:"",desc:"The base production of this building\nOnly applies to resource buildings, else 0",return_type:"int"},getcap:{help:"",desc:"Get max number of this building that can be built (per city)",return_type:"int",arguments:{hasProject:{name:"hasProject",optional:!0,type:"Predicate<Project>"}}},getcommerce:{help:"",desc:"Get the commerce from this building\nOnly applies to commerce buildings, else 0",return_type:"int"},getcontinents:{help:"",desc:"Get the continents this building can be built on",return_type:"Set<Continent>"},getcostmap:{help:"",desc:"Get the resource costs of this building",return_type:"Map<ResourceType, Double>"},getinfrabase:{help:"",desc:"The base infrastructure powered\nOnly applies to power buildings, else 0",return_type:"int"},getinframax:{help:"",desc:"The max infrastructure powered\nOnly applies to power buildings, else 0",return_type:"int"},getmarketcost:{help:"",desc:"Get the market cost of this building",return_type:"double"},getmilitaryunit:{help:"",desc:"Get the military unit this building produces\nOnly applies to military buildings, else null",return_type:"MilitaryUnit"},getnmarketcost:{help:"",desc:"Get the market cost of N of this building",return_type:"double",arguments:{num:{name:"num",type:"double"}}},getpollution:{help:"",desc:"Get the pollution created by this building",return_type:"int",arguments:{hasProject:{name:"hasProject",optional:!0,type:"Predicate<Project>"}}},getpowerresource:{help:"",desc:"The resource consumed by this building for generating power\nOnly applies to power buildings, else null",return_type:"ResourceType"},getpowerresourceconsumed:{help:"",desc:"The amount of the resource consumed by this building for generating power\nOnly applies to power buildings, else 0",return_type:"double",arguments:{infra:{name:"infra",type:"int"}}},getrequiredcitizens:{help:"",desc:"Get the number of citizens required to produce a military unit\nOnly applies to military buildings, else 0",return_type:"double"},getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourceproduced:{help:"",desc:"The resource produced by this building\nOnly applies to resource buildings, else null",return_type:"ResourceType"},getresourcetypesconsumed:{help:"",desc:"The resources consumed by this building\nOnly applies to resource buildings, else empty list",return_type:"List<ResourceType>"},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}},gettotal:{help:"",desc:"Get the total number of this building across the specified nations",return_type:"int",arguments:{nations:{name:"nations",type:"Set<DBNation>"}}},gettype:{help:"",desc:"The building type (power, raw, manufacturing, civil, commerce, military)",return_type:"BuildingType"},getunitcap:{help:"",desc:"Get the maximum units that this building can hold\nOnly applies to military buildings, else 0",return_type:"int"},getunitdailybuy:{help:"",desc:"Get the number of units that this building can produce per day\nOnly applies to military buildings, else 0",return_type:"int"},getupkeep:{help:"",desc:"Get the upkeep of this building for a specific resource",return_type:"double",arguments:{type:{name:"type",type:"ResourceType"},hasProject:{name:"hasProject",optional:!0,type:"Predicate<Project>"}}},getupkeepmap:{help:"",desc:"Get the upkeep resources of this building",return_type:"Map<ResourceType, Double>",arguments:{hasProject:{name:"hasProject",optional:!0,type:"Predicate<Project>"}}},name:{help:"",desc:"Get the name of this building",return_type:"String"},namesnakecase:{help:"",desc:"Get the name of this building in snake case",return_type:"String"},ordinal:{help:"",desc:"Get the numeric id of this building",return_type:"int"}},selectors:[["BUILDING","`impCoalpower`, `impOilpower`, `impNuclearpower`, `impWindpower`, `impCoalmine`, `impOilwell`, `impBauxitemine`, `impIronmine`, `impLeadmine`, `impUramine`, `impFarm`, `impGasrefinery`, `impSteelmill`, `impAluminumrefinery`, `impMunitionsfactory`, `impSubway`, `impMall`, `impStadium`, `impBank`, `impSupermarket`, `impPolicestation`, `impHospital`, `impRecyclingcenter`, `impBarracks`, `impFactory`, `impHangars`, `impDrydock`","One of the entity values"]],columns:["building"]},DBCity:{commands:{getagedays:{help:"",desc:"Get city age in days",return_type:"int"},getagemillis:{help:"",desc:"Get city age in milliseconds",return_type:"long"},getbuilding:{help:"",desc:"Get building amount",return_type:"int",arguments:{building:{name:"building",type:"Building"}}},getbuildingcost:{help:"",desc:"Get the resource cost of buildings in the city",return_type:"Map<ResourceType, Double>"},getbuildingmarketcost:{help:"",desc:"Get the market cost of buildings in the city",return_type:"double"},getcommerce:{help:"",desc:"Get city commerce",return_type:"int"},getcreatedmillis:{help:"",desc:"Get city created date",return_type:"long"},getcrime:{help:"",desc:"Get the crime in the city",return_type:"double"},getdisease:{help:"",desc:"Get the disease in the city",return_type:"double"},getfreeinfra:{help:"",desc:"Get the number of free infrastructure points in the city",return_type:"double"},getfreeslots:{help:"",desc:"Get the number of free building slots in the city",return_type:"int"},getid:{help:"",desc:"Get city ID",return_type:"int"},getinfra:{help:"",desc:"Get city infrastructure",return_type:"double"},getland:{help:"",desc:"Get city land",return_type:"double"},getmmr:{help:"",desc:"Get city mmr",return_type:"String"},getnation:{help:"",desc:"Get nation of this city",return_type:"DBNation"},getnationid:{help:"",desc:"Get nation id of this city",return_type:"int"},getnuketurn:{help:"",desc:"Get the turns since last nuked, or 0",return_type:"int"},getnuketurnepoch:{help:"",desc:"The turns since epoch this city was last nuked, or 0",return_type:"int"},getnumbuildings:{help:"",desc:"Number of buildings in this city",return_type:"int"},getpollution:{help:"",desc:"Get city pollution",return_type:"int"},getpopulation:{help:"",desc:"Get the population of the city",return_type:"int"},getpowered:{help:"",desc:"Is city powered",return_type:"Boolean"},getpoweredinfra:{help:"",desc:"Get the amount of infrastructure powered by buildings",return_type:"int"},getrequiredinfra:{help:"",desc:"Get the required infrastructure level for the number of buildings",return_type:"int"},getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}},getrevenue:{help:"",desc:"Get the profit of the city",return_type:"Map<ResourceType, Double>"},getrevenuevalue:{help:"",desc:"Get the monetary value of the cities income",return_type:"double"},geturl:{help:"",desc:"Url of this city",return_type:"String"}},selectors:[["CITY_ID","12345","City ID"],["CITY_URL","/city/id=12345","City URL"],["NATION","Borg","Nation name, id, leader, url, user id or mention (see nation type)"],["*",null,"All cities"]],columns:["city","cities"]},Conflict:{commands:{getactivewars:{help:"",desc:"The number of active wars in the conflict",return_type:"int"},getalliancelist:{help:"",desc:"The alliance list for ALL participants",return_type:"AllianceList"},getcasusbelli:{help:"",desc:"The casus belli of the conflict",return_type:"String"},getcategory:{help:"",desc:"The conflict category",return_type:"ConflictCategory"},getcol1list:{help:"",desc:"The alliance list of for the first coalition",return_type:"AllianceList"},getcol2list:{help:"",desc:"The alliance list of for the second coalition",return_type:"AllianceList"},getdamageconverted:{help:"",desc:"The current damage dealt between the conflict's participants, using market prices",return_type:"double",arguments:{isPrimary:{name:"isPrimary",type:"boolean"}}},getendms:{help:"",desc:"The end turn of the conflict in milliseconds since unix epoch",return_type:"long"},getendturn:{help:"",desc:"The turn the conflict ends\nMeasured in 2h turns from unix epoch\nIf the conflict is ongoing, this will be Long.MAX_VALUE",return_type:"long"},getguild:{help:"",desc:"The discord guild that created this conflict (or null)",return_type:"GuildDB"},getguildid:{help:"",desc:"The id of the discord guild that created this conflict",return_type:"long"},getid:{help:"",desc:"The id of the conflict in the database and website url",return_type:"int"},getname:{help:"",desc:"The name of the conflict",return_type:"String"},getordinal:{help:"",desc:"The ordinal of the conflict (load order)",return_type:"int"},getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}},getside:{help:"",desc:"A number representing the side an alliance is on in the conflict\n0 = No side, 1 = Primary/Coalition 1, 2 = Secondary/Coalition 2",return_type:"int",arguments:{alliance:{name:"alliance",type:"DBAlliance"}}},getstartms:{help:"",desc:"The start turn of the conflict in milliseconds since unix epoch",return_type:"long"},getstartturn:{help:"",desc:"The turn the conflict started\nMeasured in 2h turns from unix epoch",return_type:"long"},getstatusdesc:{help:"",desc:"The status of the conflict",return_type:"String"},gettotalwars:{help:"",desc:"The number of total wars in the conflict",return_type:"int"},geturl:{help:"",desc:"The url of this conflict (if pushed live)",return_type:"String"},getwiki:{help:"",desc:"The wiki link for this conflict (or null)",return_type:"String"},isdirty:{help:"",desc:"If the conflict has been updated since the last push",return_type:"boolean"},isparticipant:{help:"",desc:"If an alliance is a participant in the conflict",return_type:"boolean",arguments:{alliance:{name:"alliance",type:"DBAlliance"}}}},selectors:[["CONFLICT_ID","12345","Public Conflict ID"],["CONFLICT_NAME","Duck Hunt","Public Conflict name, as stored by the bot"],["*",null,"All public conflicts"]],columns:["conflict"]},Continent:{commands:{canbuild:{help:"",desc:"If the given building can be built on this continent",return_type:"boolean",arguments:{building:{name:"building",type:"Building"}}},getaverage:{help:"",desc:"Returns the total value of the given attribute per nation",return_type:"double",arguments:{attribute:{name:"attribute",type:"TypedFunction<DBNation,Double>"},filter:{name:"filter",optional:!0,type:"Predicate<DBNation>"}}},getaverageper:{help:"",desc:"Returns the average value of the given attribute per another attribute (such as cities)",return_type:"double",arguments:{attribute:{name:"attribute",type:"TypedFunction<DBNation,Double>"},per:{name:"per",type:"TypedFunction<DBNation,Double>"},filter:{name:"filter",optional:!0,type:"Predicate<DBNation>"}}},getbuildings:{help:"",desc:"Returns the buildings that are available on this continent",return_type:"Set<Building>"},getfoodratio:{help:"",desc:"Returns the food production ratio for this continent (0.0 - 1.0)",return_type:"double"},getname:{help:"",desc:"Returns the name of the continent",return_type:"String"},getnumnations:{help:"",desc:"Number of nations on this continent",return_type:"int",arguments:{filter:{name:"filter",optional:!0,type:"Predicate<DBNation>"}}},getordinal:{help:"",desc:"The ordinal of this continent",return_type:"int"},getradindex:{help:"",desc:"Returns the radiation index for this continent",return_type:"double"},getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}},getresources:{help:"",desc:"The resources that are available on this continent",return_type:"List<ResourceType>"},getseasonmodifier:{help:"",desc:"Returns the season modifier for this continent",return_type:"double"},getseasonmodifierdate:{help:"",desc:"Returns the season modifier for this continent at the given date",return_type:"double",arguments:{date:{name:"date",type:"long[Timestamp]"}}},gettotal:{help:"",desc:"Returns the total value of the given attribute for the nations",return_type:"double",arguments:{attribute:{name:"attribute",type:"TypedFunction<DBNation,Double>"},filter:{name:"filter",optional:!0,type:"Predicate<DBNation>"}}},hasresource:{help:"",desc:"If this continent has the given resource",return_type:"boolean",arguments:{type:{name:"type",type:"ResourceType"}}},isnorth:{help:"",desc:"If this continent is in the northern hemisphere",return_type:"boolean"}},selectors:[["CONTINENT","`NORTH_AMERICA`, `SOUTH_AMERICA`, `EUROPE`, `AFRICA`, `ASIA`, `AUSTRALIA`, `ANTARCTICA`","One of the entity values"]],columns:["continent"]},GuildDB:{commands:{getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}}},selectors:[["GUILD","123456789012345678","Guild ID"],["*",null,"All shared guilds"]],columns:["guild"]},GuildSetting:{commands:{getcategory:{help:"",desc:"The setting category",return_type:"GuildSettingCategory"},getcommandmention:{help:"",desc:"The setting command mention",return_type:"String"},getkeyname:{help:"",desc:"The name of the setting type key",return_type:"String"},getname:{help:"",desc:"The name of the setting",return_type:"String"},getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}},gettypename:{help:"",desc:"The simple name of the setting class type",return_type:"String"},getvaluestring:{help:"",desc:"The human readable representation of the value",return_type:"String",annotations:{role:{value:["ADMIN"]}}},hasinvalidvalue:{help:"",desc:"If the value is invalid",return_type:"boolean",annotations:{role:{value:["ADMIN"]}},arguments:{checkDelegate:{name:"checkDelegate",optional:!0,flag:"d",type:"boolean"}}},hasvalue:{help:"",desc:"Does the setting have a value (even if invalid)",return_type:"boolean",annotations:{role:{value:["ADMIN"]}},arguments:{checkDelegate:{name:"checkDelegate",optional:!0,flag:"d",type:"boolean"}}},help:{help:"",desc:"The setting usage instructions",return_type:"String"},ischanneltype:{help:"",desc:"Is this a channel setting",return_type:"boolean"},name:{help:"",desc:"The setting name",return_type:"String"},tostring:{help:"",desc:"The setting name and help instructions",return_type:"String"}},selectors:[["SETTING","ALLIANCE_ID","Guild setting name"],["*",null,"All guild settings"]],columns:["setting"]},IAttack:{commands:{getallianceidlooted:{help:"",desc:"",return_type:"int"},getattconsumptionvalue:{help:"",desc:"",return_type:"double"},getattlootvalue:{help:"",desc:"",return_type:"double"},getattlossvalue:{help:"",desc:"",return_type:"double",arguments:{war:{name:"war",type:"DBWar"}}},getattunitlossvalue:{help:"",desc:"",return_type:"double",arguments:{war:{name:"war",type:"DBWar"}}},getattunitlosses:{help:"",desc:"",return_type:"int",arguments:{unit:{name:"unit",type:"MilitaryUnit"}}},getatt_gas_used:{help:"",desc:"",return_type:"double"},getatt_mun_used:{help:"",desc:"",return_type:"double"},getattack_type:{help:"",desc:"",return_type:"AttackType"},getattacker_id:{help:"",desc:"",return_type:"int"},getattcas1:{help:"",desc:"",return_type:"int"},getattcas2:{help:"",desc:"",return_type:"int"},getcity_id:{help:"",desc:"",return_type:"int"},getcity_infra_before:{help:"",desc:"",return_type:"double"},getdate:{help:"",desc:"",return_type:"long"},getdefconsumptionvalue:{help:"",desc:"",return_type:"double"},getdeflootvalue:{help:"",desc:"",return_type:"double"},getdeflossvalue:{help:"",desc:"",return_type:"double",arguments:{war:{name:"war",type:"DBWar"}}},getdefunitlossvalue:{help:"",desc:"",return_type:"double",arguments:{war:{name:"war",type:"DBWar"}}},getdefunitlosses:{help:"",desc:"",return_type:"int",arguments:{unit:{name:"unit",type:"MilitaryUnit"}}},getdef_gas_used:{help:"",desc:"",return_type:"double"},getdef_mun_used:{help:"",desc:"",return_type:"double"},getdefcas1:{help:"",desc:"",return_type:"int"},getdefcas2:{help:"",desc:"",return_type:"int"},getdefcas3:{help:"",desc:"",return_type:"int"},getdefender_id:{help:"",desc:"",return_type:"int"},getid:{help:"",desc:"",return_type:"int"},getimprovements_destroyed:{help:"",desc:"",return_type:"int"},getinfra_destroyed:{help:"",desc:"",return_type:"double"},getinfra_destroyed_percent:{help:"",desc:"",return_type:"double"},getinfra_destroyed_value:{help:"",desc:"",return_type:"double"},getlootpercent:{help:"",desc:"",return_type:"double"},getmoney_looted:{help:"",desc:"",return_type:"double"},getresistance:{help:"",desc:"",return_type:"int"},getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}},getsuccess:{help:"",desc:"",return_type:"SuccessType"},getvictor:{help:"",desc:"",return_type:"int"},getwar:{help:"",desc:"",return_type:"DBWar"},getwar_attack_id:{help:"",desc:"",return_type:"int"},getwar_id:{help:"",desc:"",return_type:"int"},isattackeridgreater:{help:"",desc:"",return_type:"boolean"},tourl:{help:"",desc:"",return_type:"String"}},selectors:[["ATTACK_ID","123456","Attack ID"],["WAR_ID","12345","War ID"],["NATION","Borg","Nation name, id, leader, url, user id or mention (see nation type)"],["ALLIANCE","AA:Rose","Alliance id, name, url or mention (see alliance type)"],["*",null,"All wars"]],columns:["id","war_id","nation","leader","alliance"]},MilitaryUnit:{commands:{getbasecost:{help:"",desc:"Base resource cost of this unit",return_type:"Map<ResourceType, Double>",arguments:{amount:{name:"amount",optional:!0,type:"Integer"}}},getbasemonetaryvalue:{help:"",desc:"",return_type:"double",arguments:{amount:{name:"amount",optional:!0,type:"Integer"}}},getbuffer:{help:"",desc:"Get the emoji for this unit",return_type:"int[]"},getmaxperday:{help:"",desc:"Get the max unit buys per day for a number of cities",return_type:"int",arguments:{cities:{name:"cities",type:"int"}}},getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}}},selectors:[["MILITARYUNIT","`SOLDIER`, `TANK`, `AIRCRAFT`, `SHIP`, `MONEY`, `MISSILE`, `NUKE`, `SPIES`, `INFRASTRUCTURE`","One of the entity values"]],columns:["unit"]},DBNation:{commands:{allianceseniority:{help:"",desc:"Days since joining the alliance",return_type:"double"},allianceseniorityapplicant:{help:"",desc:"Days since joining the alliance",return_type:"double"},allianceseniorityapplicantms:{help:"",desc:"Milliseconds since joining the alliance",return_type:"long"},allianceseniorityms:{help:"",desc:"Milliseconds since joining the alliance",return_type:"long"},alliancesenioritynonems:{help:"",desc:"",return_type:"long"},attritionbountyvalue:{help:"",desc:"Sum of all attrition bounties placed on them",return_type:"double"},avg_daily_login:{help:"",desc:"Decimal pct of days they login",return_type:"double"},avg_daily_login_turns:{help:"",desc:"Decimal pct of turns they login",return_type:"double"},avg_daily_login_week:{help:"",desc:"Decimal pct of days they login in the past week",return_type:"double"},buildingvalue:{help:"",desc:"Value of the buildings this nation has\nCost reduction policies are not included",return_type:"double"},canbedeclaredonbyscore:{help:"",desc:"Can be declared on by a nation of score",return_type:"boolean",arguments:{score:{name:"score",type:"double"}}},canbespiedbyscore:{help:"",desc:"Can be spied by a nation of score",return_type:"boolean",arguments:{score:{name:"score",type:"double"}}},canbuildproject:{help:"",desc:"Can build project (meets requirements, free slot, doesn't have project)",return_type:"boolean",arguments:{project:{name:"project",type:"Project"}}},candeclareonscore:{help:"",desc:"Can declare war on a nation of score",return_type:"boolean",arguments:{score:{name:"score",type:"double"}}},canspyonscore:{help:"",desc:"Can perform a spy attack against a nation of score",return_type:"boolean",arguments:{score:{name:"score",type:"double"}}},celllookup:{help:"",desc:"Sheet lookup",return_type:"String",annotations:{role:{value:["INTERNAL_AFFAIRS"]}},arguments:{sheet:{name:"sheet",type:"SpreadSheet"},tabName:{name:"tabName",type:"String"},columnSearch:{name:"columnSearch",type:"String"},columnOutput:{name:"columnOutput",type:"String"},search:{name:"search",type:"String"}}},city:{help:"",desc:"Renamed to `cityurl`",return_type:"String",arguments:{index:{name:"index",type:"int"}}},cityurl:{help:"",desc:"Get the city url by index (1-indexed)",return_type:"String",arguments:{index:{name:"index",type:"int"}}},cityvalue:{help:"",desc:"Value of the cities this nation has\nCost reduction policies are not included",return_type:"double"},correctalliancemmr:{help:"",desc:"If on the correct MMR for their alliance (if one is set)",return_type:"boolean",annotations:{role:{value:["MEMBER"]}}},costconverted:{help:"",desc:"The total value of all the assets this nation has\nIncludes projects, infra, land, cities, buildings, units, and research\nDoes not factor in cost reduction policies or projects",return_type:"double"},countcities:{help:"",desc:"Count of cities in nation matching a filter",return_type:"int",arguments:{filter:{name:"filter",optional:!0,type:"Predicate<DBCity>"}}},countwars:{help:"",desc:"Number of wars matching a filter",return_type:"int",arguments:{warFilter:{name:"warFilter",type:"Predicate<DBWar>"}}},dayssince3consecutivelogins:{help:"",desc:"Days since the last three consecutive daily logins",return_type:"long"},dayssince4consecutivelogins:{help:"",desc:"Days since the last four consecutive daily logins",return_type:"long"},dayssince5consecutivelogins:{help:"",desc:"Days since the last five consecutive daily logins",return_type:"long"},dayssince6consecutivelogins:{help:"",desc:"Days since the last six consecutive daily logins",return_type:"long"},dayssince7consecutivelogins:{help:"",desc:"Days since the last seven consecutive daily logins",return_type:"long"},dayssinceconsecutivelogins:{help:"",desc:"Days since last specified consecutive daily logins",return_type:"long",arguments:{checkPastXDays:{name:"checkPastXDays",type:"long"},sequentialDays:{name:"sequentialDays",type:"int"}}},dayssincelastaircraftbuy:{help:"",desc:"Days since last aircraft purchase",return_type:"double"},dayssincelastbankdeposit:{help:"",desc:"Days since last bank deposit",return_type:"double"},dayssincelastdefensivewarloss:{help:"",desc:"Days since last defensive war",return_type:"double"},dayssincelastmissilebuy:{help:"",desc:"Days since last missile purchase",return_type:"double"},dayssincelastnukebuy:{help:"",desc:"Days since last ship purchase",return_type:"double"},dayssincelastoffensive:{help:"",desc:"Days since their last offensive war",return_type:"double"},dayssincelastselfwithdrawal:{help:"",desc:"Days since they last withdrew from their own deposits",return_type:"double"},dayssincelastshipbuy:{help:"",desc:"Days since last ship purchase",return_type:"double"},dayssincelastsoldierbuy:{help:"",desc:"Days since last soldier purchase",return_type:"double"},dayssincelastspybuy:{help:"",desc:"Days since last spy purchase",return_type:"double"},dayssincelasttankbuy:{help:"",desc:"Days since last tank purchase",return_type:"double"},dayssincelastwar:{help:"",desc:"Days since last war",return_type:"double"},equilibriumtaxrate:{help:"",desc:"The alliance tax rate necessary to break even when distributing raw resources",return_type:"double",annotations:{role:{value:["ECON"]}}},estimategni:{help:"",desc:"Estimated daily Gross National Income (GNI)",return_type:"double"},getactivewarswith:{help:"",desc:"Get the number of wars with nations matching a filter",return_type:"int",arguments:{filter:{name:"filter",type:"Predicate<DBNation>"}}},getactive_m:{help:"",desc:"Minutes since last active in-game",return_type:"int",arguments:{time:{name:"time",optional:!0,type:"Long[Timestamp]"}}},getagedays:{help:"",desc:"Days since creation",return_type:"int"},getaircraft:{help:"",desc:"Number of aircraft",return_type:"int"},getaircraftpct:{help:"",desc:"Decimal ratio of aircraft a nation has out of their maximum (between 0 and 1)",return_type:"double"},getalltimedefensivewars:{help:"",desc:"All time defensive wars involved in",return_type:"int"},getalltimeoffdefwars:{help:"",desc:"",return_type:"int[]"},getalltimeoffensivewars:{help:"",desc:"All time offensive wars involved in",return_type:"int"},getalltimewars:{help:"",desc:"All time wars involved in",return_type:"int"},getalliance:{help:"",desc:"The alliance class",return_type:"DBAlliance"},getalliancename:{help:"",desc:"Alliance Name",return_type:"String"},getalliancepositionid:{help:"",desc:"Globally unique id of the position in the alliance",return_type:"int"},getalliancerank:{help:"",desc:"Alliance rank by score",return_type:"int",arguments:{filter:{name:"filter",optional:!0,type:"Predicate<DBNation>"}}},getallianceurl:{help:"",desc:"Game url for alliance",return_type:"String"},getallianceurlmarkup:{help:"",desc:"",return_type:"String"},getalliance_id:{help:"",desc:"Alliance ID",return_type:"int"},getattacking:{help:"",desc:"Get the number of active offensive wars with a list of nations",return_type:"int",arguments:{nations:{name:"nations",type:"Set<DBNation>"}}},getauditresult:{help:"",desc:"Get the Audit result raw value",return_type:"String",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF"]}},arguments:{audit:{name:"audit",type:"AuditType"}}},getauditresultstring:{help:"",desc:"Get the Audit result message",return_type:"String",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF"]}},arguments:{audit:{name:"audit",type:"AuditType"}}},getaverage:{help:"",desc:"Average of city attribute for specific cities in nation",return_type:"double",arguments:{attribute:{name:"attribute",type:"TypedFunction<DBCity,Double>"},filter:{name:"filter",optional:!0,type:"Predicate<DBCity>"}}},getaverageper:{help:"",desc:"Returns the average value of the given attribute per another attribute (such as infra)",return_type:"double",arguments:{attribute:{name:"attribute",type:"TypedFunction<DBCity,Double>"},per:{name:"per",type:"TypedFunction<DBCity,Double>"},filter:{name:"filter",optional:!0,type:"Predicate<DBCity>"}}},getavgbarracks:{help:"",desc:"Get number of barracks\nShorthand for getAvgBuilding(barracks)",return_type:"double"},getavgbuilding:{help:"",desc:"Get number of buildings",return_type:"double",arguments:{building:{name:"building",type:"Building"}}},getavgbuildings:{help:"",desc:"Number of buildings per city",return_type:"double",arguments:{buildings:{name:"buildings",optional:!0,type:"Set<Building>"}}},getavgdrydocks:{help:"",desc:"Get number of drydocks\nShorthand for getAvgBuilding(drydock)",return_type:"double"},getavgfactories:{help:"",desc:"Get number of factories\nShorthand for getAvgBuilding(factory)",return_type:"double"},getavghangars:{help:"",desc:"Get number of hangars\nShorthand for getAvgBuilding(hangar)",return_type:"double"},getavgland:{help:"",desc:"Average land per city",return_type:"double"},getavg_infra:{help:"",desc:"average infrastructure in cities",return_type:"double"},getbeigeabsoluteturn:{help:"",desc:"The absolute turn of leaving beige",return_type:"long"},getbeigeloottotal:{help:"",desc:"Total stockpile value based on last war loss or espionage",return_type:"double"},getbeigeturns:{help:"",desc:"Game turns left on the beige color bloc",return_type:"int"},getblockadedby:{help:"",desc:"List of nation ids which are blockading this nation with their navy ships in-game",return_type:"Set<Integer>"},getblockading:{help:"",desc:"List of nation ids whuch are blockaded by this nation's navy ships in-game",return_type:"Set<Integer>"},getbountysums:{help:"",desc:"Get a map of each war type to the total value of bounties for that type that this nation has",return_type:"Map<WarType, Long>"},getbuildings:{help:"",desc:"Number of buildings total",return_type:"int",arguments:{buildings:{name:"buildings",optional:!0,type:"Set<Building>"}}},getbuyinfracost:{help:"",desc:"Cost of buying up to a certain infra level",return_type:"double",arguments:{toInfra:{name:"toInfra",type:"double"},forceUrbanization:{name:"forceUrbanization",optional:!0,flag:"u",type:"boolean"},forceAEC:{name:"forceAEC",optional:!0,flag:"aec",type:"boolean"},forceCFCE:{name:"forceCFCE",optional:!0,flag:"cfce",type:"boolean"},forceGSA:{name:"forceGSA",optional:!0,flag:"gsa",type:"boolean"},forceBDA:{name:"forceBDA",optional:!0,flag:"bda",type:"boolean"}}},getbuylandcost:{help:"",desc:"Cost of buying up to a certain land level",return_type:"double",arguments:{toLand:{name:"toLand",type:"double"},forceRAPolicy:{name:"forceRAPolicy",optional:!0,flag:"ra",type:"boolean"},forceAEC:{name:"forceAEC",optional:!0,flag:"aec",type:"boolean"},forceALA:{name:"forceALA",optional:!0,flag:"ala",type:"boolean"},forceGSA:{name:"forceGSA",optional:!0,flag:"gsa",type:"boolean"},forceBDA:{name:"forceBDA",optional:!0,flag:"bda",type:"boolean"}}},getcities:{help:"",desc:"Number of built cities",return_type:"int"},getcitiesat:{help:"",desc:"Number of cities at a date",return_type:"int",arguments:{time:{name:"time",type:"long[Timestamp]"}}},getcitiessince:{help:"",desc:"Number of cities built since date",return_type:"int",arguments:{time:{name:"time",type:"long[Timestamp]"}}},getcityavg:{help:"",desc:"Get the average value of a city attribute for this nation's cities",return_type:"double",arguments:{attribute:{name:"attribute",type:"TypedFunction<DBCity,Double>"}}},getcitycostpercitysince:{help:"",desc:"Cost of cities built since a date divided by the current city count",return_type:"double",arguments:{time:{name:"time",type:"long[Timestamp]"},allowProjects:{name:"allowProjects",type:"boolean"}}},getcitycostsince:{help:"",desc:"Cost of cities built since a date",return_type:"double",arguments:{time:{name:"time",type:"long[Timestamp]"},allowProjects:{name:"allowProjects",type:"boolean"}}},getcitygroup:{help:"",desc:"Get the min city count of the first matching city range\nc1-10, c11-15",return_type:"int",arguments:{ranges:{name:"ranges",type:"CityRanges"}}},getcitymax:{help:"",desc:"Get the maximum value of a city attribute for this nation's cities",return_type:"double",arguments:{attribute:{name:"attribute",type:"TypedFunction<DBCity,Double>"}}},getcitymin:{help:"",desc:"Get the minimum value of a city attribute for this nation's cities",return_type:"double",arguments:{attribute:{name:"attribute",type:"TypedFunction<DBCity,Double>"}}},getcityrefund:{help:"",desc:"City refund from city planning projects",return_type:"double"},getcitytimerabsoluteturn:{help:"",desc:"Absolute turn the city time ends before being able to buy a city",return_type:"long"},getcitytotal:{help:"",desc:"Get the summed total of a city attribute for this nation's cities",return_type:"double",arguments:{attribute:{name:"attribute",type:"TypedFunction<DBCity,Double>"}}},getcityturns:{help:"",desc:"Turns left on the city timer",return_type:"long"},getcolor:{help:"",desc:"Nation color bloc",return_type:"NationColor"},getcolorabsoluteturn:{help:"",desc:"The absolute turn the color change timer expires",return_type:"long"},getcolorturns:{help:"",desc:"The number of turns until the color timer expires",return_type:"long"},getcontinent:{help:"",desc:"Continent",return_type:"Continent"},getdate:{help:"",desc:"Unix timestamp of date created",return_type:"long"},getdayssincelastcity:{help:"",desc:"Days since last city",return_type:"int"},getdayssincelastspyreport:{help:"",desc:"Days since a nation posted a spy report",return_type:"int"},getdc_turn:{help:"",desc:"The turn of the day (0-11) when their day change (DC) unit rebuy is available",return_type:"int"},getdef:{help:"",desc:"Number of active defensive wars",return_type:"int"},getdefending:{help:"",desc:"Get the number of active defensive wars with a list of nations",return_type:"int",arguments:{nations:{name:"nations",type:"Set<DBNation>"}}},getdepositvaluepercity:{help:"",desc:"Net nation deposits with their alliance guild divided by their city count",return_type:"double",annotations:{role:{value:["ECON"]}}},getdeposits:{help:"",desc:"Get nation deposits",return_type:"Map<ResourceType, Double>",annotations:{role:{value:["ECON"]}},arguments:{start:{name:"start",optional:!0,type:"Long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"},filter:{name:"filter",optional:!0,type:"Predicate<Transaction2>"},ignoreBaseTaxrate:{name:"ignoreBaseTaxrate",optional:!0,flag:"b",desc:"use 0/0 as the tax base\ni.e. All taxes included in deposits\nThe default internal taxrate is 100/100 (all taxes excluded)",type:"boolean"},ignoreOffsets:{name:"ignoreOffsets",optional:!0,flag:"o",desc:"Do NOT include any manual deposit offesets",type:"boolean"},includeExpired:{name:"includeExpired",optional:!0,flag:"e",type:"boolean"},includeIgnored:{name:"includeIgnored",optional:!0,flag:"i",type:"boolean"},excludeTypes:{name:"excludeTypes",optional:!0,flag:"d",type:"Set<DepositType>"}}},getdiscordstring:{help:"",desc:"The unverified discord string set in-game (snapshots only)",return_type:"String"},getdiscorduser:{help:"",desc:"Get the discord user object",return_type:"UserWrapper"},getdomesticpolicy:{help:"",desc:"Domestic policy",return_type:"DomesticPolicy"},getdomesticpolicyabsoluteturn:{help:"",desc:"The absolute turn the domestic policy change timer expires",return_type:"long"},getdomesticpolicyturns:{help:"",desc:"The number of turns until the domestic policy timer expires",return_type:"long"},getenemies:{help:"",desc:"Set of nation ids fighting this nation",return_type:"Set<Integer>"},getenemystrength:{help:"",desc:"Estimated combined strength of the enemies its fighting",return_type:"double"},getentered_vm:{help:"",desc:"Absolute turn number when entering Vacation Mode (VM)",return_type:"long"},getespionagefullturn:{help:"",desc:"Absolute turn when full espionage slots will reset",return_type:"long"},getfighting:{help:"",desc:"Get the number of active wars with a list of nations",return_type:"int",arguments:{nations:{name:"nations",type:"Set<DBNation>"}}},getflagurl:{help:"",desc:"The flag url set in-game (snapshots only)",return_type:"String"},getfreebuildings:{help:"",desc:"Get total free building slots in this nations cities",return_type:"int"},getfreeoffspyops:{help:"",desc:"Get free offensive spy ops available\n-1 = No data available",return_type:"int",annotations:{role:{value:["MILCOM"]}}},getfreeoffensiveslots:{help:"",desc:"Free offensive war slots",return_type:"int"},getfreeprojectslots:{help:"",desc:"Number of free project slots",return_type:"int"},getgni:{help:"",desc:"Their gross income (GNI)",return_type:"double"},getgroundstrength:{help:"",desc:"Effective ground strength with munitions, enemy air control, and daily rebuy",return_type:"double",arguments:{munitions:{name:"munitions",type:"boolean"},enemyAc:{name:"enemyAc",type:"boolean"},includeRebuy:{name:"includeRebuy",optional:!0,type:"Double"}}},getid:{help:"",desc:"The nation id",return_type:"int"},getinactiveturns:{help:"",desc:"Number of turns this nation has been inactive for",return_type:"long"},getinfra:{help:"",desc:"Total infra in all cities",return_type:"double"},getlastunitbuy:{help:"",desc:"Get unix timestamp of when a unit was purchased last",return_type:"Long",annotations:{role:{value:["MILCOM"]}},arguments:{unit:{name:"unit",type:"MilitaryUnit"}}},getlatestuid:{help:"",desc:"The unique network id of this nation",return_type:"BigInteger",arguments:{do_not_fetch:{name:"do_not_fetch",optional:!0,type:"boolean"}}},getleader:{help:"",desc:"Leader name",return_type:"String"},getleaving_vm:{help:"",desc:"Absolute turn number when leaving Vacation Mode (VM)",return_type:"long"},getlootrevenueconverted:{help:"",desc:"",return_type:"double"},getlootrevenuetotal:{help:"",desc:"",return_type:"Map<ResourceType, Double>"},getmmr:{help:"",desc:"Average military building capacity used (unit mmr) in all cities as a whole number\nsoldiers tanks aircraft ships\nMaximum is: 5553",return_type:"String"},getmmrbuildingdecimal:{help:"",desc:"The average military buildings (building mmr) in all cities as a decimal\nbarracks/factories/hangars/drydocks]\ne.g. 4.9/4.8/4.3/2.5",return_type:"String"},getmmrbuildingstr:{help:"",desc:"The average military buildings (building mmr) in all cities as a whole number\nbarracks factories hangars drydocks\nMaximum is: 5553",return_type:"String"},getmmrunitdecimal:{help:"",desc:"Average military building capacity used (unit mmr) in all cities as a decimal\nsoldiers/tanks/aircraft/ships\ne.g. 4.9/4.8/4.3/2.5",return_type:"String"},getmarkdownurl:{help:"",desc:"Markdown url for the nation",return_type:"String"},getmaxoff:{help:"",desc:"Maximum offensive war slots",return_type:"int"},getmissiles:{help:"",desc:"Number of missiles",return_type:"int"},getmoneylooted:{help:"",desc:"Total money looted",return_type:"double",annotations:{role:{value:["MILCOM"]}}},getname:{help:"",desc:"The nation name",return_type:"String"},getnation:{help:"",desc:"Nation Name",return_type:"String"},getnation_id:{help:"",desc:"Nation ID",return_type:"int"},getnations:{help:"",desc:"Number of nations",return_type:"int"},getnetdepositsconverted:{help:"",desc:"",return_type:"double",annotations:{role:{value:["ECON_STAFF"]}}},getnextcitycost:{help:"",desc:"Cost of the next city, optionally accounting for cost reduction policies",return_type:"double",arguments:{costReduction:{name:"costReduction",optional:!0,type:"Boolean"}}},getnukes:{help:"",desc:"Number of nuclear weapons (nukes)",return_type:"int"},getnumdefwarssince:{help:"",desc:"Number of defensive wars since date",return_type:"int",arguments:{date:{name:"date",type:"long"}}},getnumoffwarssince:{help:"",desc:"Number of offensive wars since date",return_type:"int",arguments:{date:{name:"date",type:"long"}}},getnumprojects:{help:"",desc:"Number of built projects",return_type:"int"},getnumreports:{help:"",desc:"",return_type:"int"},getnumresearch:{help:"",desc:"The number of research this nation has",return_type:"int"},getnumwars:{help:"",desc:"Number of active offensive and defensive wars",return_type:"int"},getnumwarsagainstactives:{help:"",desc:"All time wars against active nations",return_type:"int"},getnumwarssince:{help:"",desc:"Number of offensive and defensive wars since date",return_type:"int",arguments:{date:{name:"date",type:"long"}}},getoff:{help:"",desc:"Number of active offensive wars",return_type:"int"},getoffspyslots:{help:"",desc:"Total offensive espionage spy slots",return_type:"int"},getonlinestatus:{help:"",desc:"Discord online status",return_type:"OnlineStatus"},getpopulation:{help:"",desc:"Total population in all cities",return_type:"int"},getposition:{help:"",desc:"Raw positional value (0 = remove, 1 = app, 2 = member, 3 = officer 4 = heir, 5 = leader)",return_type:"int"},getpositionenum:{help:"",desc:"Alliance position enum id\n0 = None or Removed\n1 = Applicant\n2 = Member\n3 = Officer\n4 = Heir\n5 = Leader",return_type:"Rank"},getpositionlevel:{help:"",desc:"Alliance unique id of the position level\nAs shown in the position edit page",return_type:"int"},getprojectabsoluteturn:{help:"",desc:"Turn epoch when project timer expires",return_type:"Long"},getprojectbitmask:{help:"",desc:"The projects built as a bitmask",return_type:"long"},getprojectturns:{help:"",desc:"Turns left on the project timer before being able to buy a project",return_type:"long"},getprojects:{help:"",desc:"Set of projects this nation has",return_type:"Set<Project>"},getrads:{help:"",desc:"The radiation level of the nation",return_type:"double"},getrelativestrength:{help:"",desc:"Relative strength compared to enemies its fighting (1 = equal)",return_type:"double"},getremainingunitbuy:{help:"",desc:"",return_type:"int",arguments:{unit:{name:"unit",type:"MilitaryUnit"},timeSince:{name:"timeSince",optional:!0,type:"Long"}}},getresearch:{help:"",desc:"The level this nation has for a specified research",return_type:"int",arguments:{research:{name:"research",type:"Research"}}},getresearchbits:{help:"",desc:"The raw data of all the research levels this nation has",return_type:"int"},getresearchcost:{help:"",desc:"Resource cost of all research this nation has",return_type:"Map<ResourceType, Double>"},getresearchcostfactor:{help:"",desc:"",return_type:"double"},getresearchlevels:{help:"",desc:"The research levels this nation has",return_type:"Map<Research, Integer>"},getresearchvalue:{help:"",desc:"Market value of all the research this nation has",return_type:"double"},getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}},getrevenueconverted:{help:"",desc:"Daily revenue value of nation",return_type:"double"},getrevenuepercityconverted:{help:"",desc:"Daily revenue value of nation per city",return_type:"double"},getscore:{help:"",desc:"Nation Score (ns)",return_type:"double"},getsheeturl:{help:"",desc:"Google sheet named url",return_type:"String"},getshippct:{help:"",desc:"Decimal ratio of ships a nation has out of their maximum (between 0 and 1)",return_type:"double"},getships:{help:"",desc:"Number of navy ships",return_type:"int"},getsoldierpct:{help:"",desc:"Decimal ratio of soldiers a nation has out of their maximum (between 0 and 1)",return_type:"double"},getsoldiers:{help:"",desc:"Number of soldiers",return_type:"int"},getspies:{help:"",desc:"Most recent spy count",return_type:"int"},getspycap:{help:"",desc:"Maximum spies a nation can have",return_type:"int"},getspycapleft:{help:"",desc:"Number of spies this nation can buy before reaching cap",return_type:"int"},getspyreportstoday:{help:"",desc:"How many spy reports they have posted today",return_type:"int"},getstockpile:{help:"",desc:"Get the in-game resources a member nation has",return_type:"Map<ResourceType, Double>",annotations:{role:{value:["ECON","INTERNAL_AFFAIRS","ECON_STAFF","MILCOM"],any:!0}}},getstrength:{help:"",desc:"Military strength (1 plane = 1)",return_type:"double"},getstrengthmmr:{help:"",desc:"Military strength (1 plane = 1)",return_type:"double",arguments:{mmr:{name:"mmr",type:"MMRDouble"}}},getstrongestenemy:{help:"",desc:"Effective strength of the strongest nation this nation is fighting",return_type:"double"},getstrongestenemyofscore:{help:"",desc:"Get the effective military strength of the strongegst nation within the provided score range",return_type:"double",arguments:{minScore:{name:"minScore",type:"double"},maxScore:{name:"maxScore",type:"double"}}},getstrongestenemyrelative:{help:"",desc:"Relative strength of the strongest nation this nation is fighting (1 = equal)",return_type:"double"},getstrongestoffenemyofscore:{help:"",desc:"Effective strength of the strongest nation this nation is attacking (offensive war)",return_type:"double",arguments:{minScore:{name:"minScore",type:"double"},maxScore:{name:"maxScore",type:"double"}}},gettankpct:{help:"",desc:"Decimal ratio of tanks a nation has out of their maximum (between 0 and 1)",return_type:"double"},gettanks:{help:"",desc:"Number of tanks",return_type:"int"},gettax_id:{help:"",desc:"ID of their in-game tax rate bracket",return_type:"int"},gettotal:{help:"",desc:"Sum of city attribute for specific cities this nation has",return_type:"double",arguments:{attribute:{name:"attribute",type:"TypedFunction<DBCity,Double>"},filter:{name:"filter",optional:!0,type:"Predicate<DBCity>"}}},gettotalland:{help:"",desc:"Total land in their cities",return_type:"double"},gettradeavgppu:{help:"",desc:"Get resource quantity for this nation",return_type:"long",arguments:{dateStart:{name:"dateStart",type:"long"},dateEnd:{name:"dateEnd",optional:!0,type:"Long"},types:{name:"types",optional:!0,type:"Set<ResourceType>"},filter:{name:"filter",optional:!0,type:"Predicate<DBTrade>"}}},gettradequantity:{help:"",desc:"Get resource quantity for this nation",return_type:"long",arguments:{dateStart:{name:"dateStart",type:"long"},dateEnd:{name:"dateEnd",optional:!0,type:"Long"},types:{name:"types",optional:!0,type:"Set<ResourceType>"},filter:{name:"filter",optional:!0,type:"Predicate<DBTrade>"},net:{name:"net",optional:!0,flag:"n",type:"boolean"}}},gettradevalue:{help:"",desc:"Get resource quantity for this nation",return_type:"double",arguments:{dateStart:{name:"dateStart",type:"long"},dateEnd:{name:"dateEnd",optional:!0,type:"Long"},types:{name:"types",optional:!0,type:"Set<ResourceType>"},filter:{name:"filter",optional:!0,type:"Predicate<DBTrade>"}}},gettreasurebonuspct:{help:"",desc:"Treasure bonus decimal percent",return_type:"double"},getturnsfromdc:{help:"",desc:"",return_type:"int"},getturnstilldc:{help:"",desc:"Turns remaining until their day change (DC)",return_type:"int"},getunitcap:{help:"",desc:"",return_type:"int",arguments:{unit:{name:"unit",type:"MilitaryUnit"},checkBuildingsAndPop:{name:"checkBuildingsAndPop",optional:!0,flag:"c",type:"boolean"}}},getunits:{help:"",desc:"Get number of a specific military unit",return_type:"int",arguments:{unit:{name:"unit",type:"MilitaryUnit"}}},getunitsat:{help:"",desc:"Get units at a specific date",return_type:"int",annotations:{role:{value:["MILCOM"]}},arguments:{unit:{name:"unit",type:"MilitaryUnit"},date:{name:"date",type:"long[Timestamp]"}}},getupdatetz:{help:"",desc:"Get the update timezone (in hours from UTC)\n-1 = No data available",return_type:"double",annotations:{role:{value:["INTERNAL_AFFAIRS"]}}},geturl:{help:"",desc:"Game url for nation",return_type:"String"},getuseragedays:{help:"",desc:"Age of discord account in days",return_type:"double"},getuseragems:{help:"",desc:"Age of discord account in milliseconds",return_type:"long"},getuserdiscriminator:{help:"",desc:"The registered discord username and user discriminator",return_type:"String"},getuserid:{help:"",desc:"The registered discord user id",return_type:"Long"},getusermention:{help:"",desc:"The registered discord user mention (or null)",return_type:"String"},getvacationturnselapsed:{help:"",desc:"Number of turns since entering Vacation Mode (VM)",return_type:"int"},getvm_turns:{help:"",desc:"Number of turns in Vacation Mode (VM)",return_type:"int"},getwarpolicy:{help:"",desc:"War policy",return_type:"WarPolicy"},getwarpolicyabsoluteturn:{help:"",desc:"The absolute turn the war policy change timer expires",return_type:"long"},getwarpolicyturns:{help:"",desc:"The number of turns until the war policy timer expires",return_type:"long"},getwars_lost:{help:"",desc:"Total wars lost",return_type:"int"},getwars_won:{help:"",desc:"Total wars won",return_type:"int"},getweburl:{help:"",desc:"Markdown url to the bot's web page for the nation (instead of ingame page)",return_type:"String"},hasallpermission:{help:"",desc:"Check if the nation has all permissions",return_type:"boolean",arguments:{permissions:{name:"permissions",type:"Set<AlliancePermission>"}}},hasanypermission:{help:"",desc:"Check if the nation has any permissions",return_type:"boolean",arguments:{permissions:{name:"permissions",type:"Set<AlliancePermission>"}}},hasboughtaircrafttoday:{help:"",desc:"purchased aircraft today",return_type:"boolean"},hasboughtmissiletoday:{help:"",desc:"purchased missiles today",return_type:"boolean"},hasboughtnuketoday:{help:"",desc:"purchased nuclear weapons today",return_type:"boolean"},hasboughtshipstoday:{help:"",desc:"purchased ships today",return_type:"boolean"},hasboughtsoldierstoday:{help:"",desc:"purchased soldiers today",return_type:"boolean"},hasboughtspiestoday:{help:"",desc:"purchased spies today",return_type:"boolean"},hasboughttankstoday:{help:"",desc:"purchased tanks today",return_type:"boolean"},hasbounty:{help:"",desc:"Has any bounties placed on them to defeat them in war or detonate a nuke",return_type:"boolean"},hasnukebounty:{help:"",desc:"Has any bounties placed on them to detonate a nuke",return_type:"boolean"},haspermission:{help:"",desc:"Check if the nation has a permissions",return_type:"boolean",arguments:{permission:{name:"permission",type:"AlliancePermission"}}},haspriorban:{help:"",desc:"If this nation has a previous ban attached to their nation or discord id",return_type:"boolean"},hasproject:{help:"",desc:"If the nation has a project",return_type:"boolean",arguments:{project:{name:"project",type:"Project"}}},hasprojects:{help:"",desc:"If the nation has all of the specified projects",return_type:"boolean",arguments:{projects:{name:"projects",type:"Set<Project>"},any:{name:"any",optional:!0,type:"boolean",def:"false"}}},hasprovidedidentity:{help:"",desc:"If the user has provided IRL identity verification to the game",return_type:"boolean"},hastreasure:{help:"",desc:"If the nation has the treasure",return_type:"boolean"},hasunitbuytoday:{help:"",desc:"If a unit was bought today",return_type:"boolean",arguments:{unit:{name:"unit",type:"MilitaryUnit"}}},hasunsetmil:{help:"",desc:"If they have undefined military values",return_type:"boolean"},haswarbounty:{help:"",desc:"Has any bounties placed on them to defeat them in war",return_type:"boolean"},inactivity_streak:{help:"",desc:"Number of times since this nation's creation that they have been inactive for a specified number of days",return_type:"int",arguments:{daysInactive:{name:"daysInactive",type:"int"},checkPastXDays:{name:"checkPastXDays",type:"long"}}},infraattackmodifier:{help:"",desc:"The modifier for infra damage",return_type:"double",arguments:{type:{name:"type",type:"AttackType"}}},infradefendmodifier:{help:"",desc:"The modifier for infra damage",return_type:"double",arguments:{type:{name:"type",type:"AttackType"}}},infravalue:{help:"",desc:"Value of the infrastructure this nation has\nCost reduction policies are not included",return_type:"double"},isalliancecolor:{help:"",desc:"If nation color matches the alliance color",return_type:"boolean"},isattackingenemyofcities:{help:"",desc:"If this nation has an offensive war against an enemy in the provided city range",return_type:"boolean",arguments:{minCities:{name:"minCities",type:"double"},maxCities:{name:"maxCities",type:"double"}}},isattackingenemyofscore:{help:"",desc:"If this nation has an offensive war against an enemy in the provided score range",return_type:"boolean",arguments:{minScore:{name:"minScore",type:"double"},maxScore:{name:"maxScore",type:"double"}}},isbanevading:{help:"",desc:"If this nation has a ban attached to their nation or discord id that has not expired",return_type:"boolean"},isbeige:{help:"",desc:"If nation color is beige",return_type:"boolean"},isblitzkrieg:{help:"",desc:"Whether their war policy is blitzkrieg and within the first 12 turns of switching to it",return_type:"boolean"},isblockaded:{help:"",desc:"If blockaded by navy ships in-game",return_type:"boolean"},isblockader:{help:"",desc:"If blockading a nation in-game with navy ships",return_type:"boolean"},isdefendingenemyofcities:{help:"",desc:"If this nation has a defensive war from an enemy in the provided city range",return_type:"boolean",arguments:{minCities:{name:"minCities",type:"double"},maxCities:{name:"maxCities",type:"double"}}},isenemy:{help:"",desc:"If this nation is in the enemies coalition",return_type:"boolean"},isespionageavailable:{help:"",desc:"If there are remaining espionage slots",return_type:"boolean"},isespionagefull:{help:"",desc:"If espionage slots are full",return_type:"boolean"},isfightingactive:{help:"",desc:"If fighting a war against another active nation",return_type:"boolean"},isfightingenemyofcities:{help:"",desc:"If this nation has an war with an enemy in the provided city range",return_type:"boolean",arguments:{minCities:{name:"minCities",type:"double"},maxCities:{name:"maxCities",type:"double"}}},isfightingenemyofscore:{help:"",desc:"If this nation has a war with an enemy in the provided score range",return_type:"boolean",arguments:{minScore:{name:"minScore",type:"double"},maxScore:{name:"maxScore",type:"double"}}},isgray:{help:"",desc:"If nation color is gray",return_type:"boolean"},isin:{help:"",desc:"If this nation is in a nation list",return_type:"boolean",arguments:{nations:{name:"nations",type:"Set<DBNation>"}}},isinallianceguild:{help:"",desc:"If in the discord guild for their alliance",return_type:"boolean"},isinmilcomguild:{help:"",desc:"If in the milcom discord guild for their alliance",return_type:"boolean"},isinspyrange:{help:"",desc:"If a specified nation is within this nations espionage range",return_type:"boolean",arguments:{other:{name:"other",type:"DBNation"}}},isinwarrange:{help:"",desc:"If this nation is in war declare range of the current attacking nation",return_type:"boolean"},isonline:{help:"",desc:"If online ingame within 60m or currently online discord\nDiscord activity requires being registered with the bot",return_type:"boolean"},ispowered:{help:"",desc:"Are any cities powered",return_type:"boolean"},isreroll:{help:"",desc:"Returns self nation ID if the nation is a reroll, otherwise 0",return_type:"int"},istaxable:{help:"",desc:"If the nation is taxable",return_type:"boolean"},isverified:{help:"",desc:"If registered with this Bot",return_type:"boolean"},landvalue:{help:"",desc:"Value of the land this nation has\nCost reduction policies are not included",return_type:"double"},lastactivems:{help:"",desc:"The time in epoch milliseconds when this nation was last active",return_type:"long"},lastbankdeposit:{help:"",desc:"Unix timestamp when last deposited in a bank",return_type:"long"},lastselfwithdrawal:{help:"",desc:"Unix timestamp when they last withdrew from their own deposits",return_type:"long"},login_daychange:{help:"",desc:"Decimal pct of times they login during UTC daychange",return_type:"double"},lootmodifier:{help:"",desc:"The modifier for loot given when they are defeated in war",return_type:"double"},loottotal:{help:"",desc:"Estimated loot value including aliance bank loot when defeated in a raid war based on last war loss or espionage",return_type:"double"},lootermodifier:{help:"",desc:"The modifier for loot given when they defeat an enemy in war",return_type:"double",arguments:{isGround:{name:"isGround",type:"boolean"}}},lostinactivewar:{help:"",desc:"If this nation is not daily active and lost their most recent war",return_type:"boolean"},maxbountyvalue:{help:"",desc:"Maximum total bounty placed on them of any type",return_type:"double"},maxcityinfra:{help:"",desc:"The highest infra level in their cities",return_type:"double"},maxcityland:{help:"",desc:"The highest land level in their cities",return_type:"double"},maxwarbountyvalue:{help:"",desc:"Maximum total bounty placed on them of any war type",return_type:"double"},militaryvalue:{help:"",desc:"Total monetary value of military units",return_type:"double"},minwarresistance:{help:"",desc:"Minimum resistance of self in current active wars",return_type:"int"},minwarresistanceplusmap:{help:"",desc:"Minimum resistance of self in current active wars, assuming the enemy translates their MAP into ground/naval with guaranteed IT",return_type:"int"},nukebountyvalue:{help:"",desc:"Sum of all nuke bounties placed on them",return_type:"double"},ordinarybountyvalue:{help:"",desc:"Sum of all ordinary bounties placed on them",return_type:"double"},passesaudit:{help:"",desc:"If the nation passes an audit",return_type:"boolean",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF"]}},arguments:{audit:{name:"audit",type:"AuditType"}}},projectslots:{help:"",desc:"Total project slots (used + unused)",return_type:"int"},projectvalue:{help:"",desc:"Value of the projects this nation has\nCost reduction policies are not included",return_type:"double"},raidbountyvalue:{help:"",desc:"Sum of all raid bounties placed on them",return_type:"double"},revenue:{help:"",desc:"Daily revenue of a nation",return_type:"Map<ResourceType, Double>",arguments:{turns:{name:"turns",optional:!0,type:"Integer"},no_cities:{name:"no_cities",optional:!0,flag:"c",type:"boolean"},no_military:{name:"no_military",optional:!0,flag:"m",type:"boolean"},no_trade_bonus:{name:"no_trade_bonus",optional:!0,flag:"t",type:"boolean"},no_new_bonus:{name:"no_new_bonus",optional:!0,flag:"b",type:"boolean"},no_food:{name:"no_food",optional:!0,flag:"f",type:"boolean"},no_power:{name:"no_power",optional:!0,flag:"p",type:"boolean"},treasure_bonus:{name:"treasure_bonus",optional:!0,flag:"r",type:"Double"}}},totalbountyvalue:{help:"",desc:"Sum of all bounty values placed on them",return_type:"double"},treasuredays:{help:"",desc:"How many days the treasure is in said nation",return_type:"long"},unitvalue:{help:"",desc:"Value of the military units this nation has\nCost reduction policies are not included",return_type:"double"}},create:{help:"",desc:"Nation snapshot settings (optional)",arguments:{timestamp:{name:"timestamp",optional:!0,flag:"t",desc:"The date to use, rounded to the nearest day",type:"Long[Timestamp]"},allow_deleted:{name:"allow_deleted",optional:!0,flag:"d",type:"boolean"},load_snapshot_vm:{name:"load_snapshot_vm",optional:!0,flag:"v",desc:"If VM nations are fetched if a snapshot date is specified",type:"boolean"}}},selectors:[["nation:NATION_NAME","nation:Borg","A qualified nation name"],["leader:NATION_NAME","leader:Danzek","A qualified leader name"],["aa:ALLIANCE_NAME","aa:Rose","A qualified alliance name"],["alliance:ALLIANCE_NAME","alliance:Eclipse","A qualified alliance name"],["nation/id=NATION_ID","nation/id=6","A nation url"],["alliance/id=ALLIANCE_ID","alliance/id=790","An alliance url"],["coalition:COALITION","coalition:allies","A qualified coalition name"],["~COALITION","~enemies","A coalition name"],["NATION_NAME","Borg","An unqualified nation name"],["LEADER_NAME","Danzek","An unqualified leader name"],["NATION_ID","189573","A nation id"],["ALLIANCE_ID","790","An alliance id"],["@ROLE_MENTION","@Member","A discord role mention or name"],["ROLE_ID","123456789012345678","A discord role id"],["@USER_MENTION","@xdnw","A discord user mention or name"],["USER_ID","123456789012345678","A discord user id"],["https://test.politicsandwar.com/index.php?id=15&tax_id=TAX_ID","https://test.politicsandwar.com/index.php?id=15&tax_id=1234","A full tax url"],["TAX_ID","tax_id=1234","A tax bracket id or url"],["*",null,"All nations"],["nation(<timestamp>,<includeVM:bool>):SELECTOR","nation(5d,true):*","As a sheet tab name; a snapshot selector, with optional timestamp and includeVM"]],columns:["nation","leader","{id}","{nation}","{leader}"]},NationColor:{commands:{getname:{help:"",desc:"Get the name of the color.",return_type:"String"},getnumnations:{help:"",desc:"Get the number of nations on this color.",return_type:"int",arguments:{filter:{name:"filter",optional:!0,type:"Predicate<DBNation>"}}},getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}},getturnbonus:{help:"",desc:"Get the bonus turn income for nations on this color.",return_type:"int"},getvotedname:{help:"",desc:"Get the name of the color that was voted by nations.",return_type:"String"},istaxable:{help:"",desc:"If this is a taxable color",return_type:"boolean"}},selectors:[["NATIONCOLOR","`AQUA`, `BEIGE`, `BLACK`, `BLUE`, `BROWN`, `GRAY`, `GREEN`, `LIME`, `MAROON`, `OLIVE`, `ORANGE`, `PINK`, `PURPLE`, `RED`, `WHITE`, `YELLOW`, `MINT`, `LAVENDER`, `TURQUOISE`, `GOLD`","One of the entity values"]],columns:["color"]},NationList:{commands:{getaveragemmr:{help:"",desc:"",return_type:"double[]",arguments:{update:{name:"update",optional:!0,type:"Boolean"}}},getaveragemmrunit:{help:"",desc:"",return_type:"double[]"},getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}}},selectors:[["*",null,"A single list with all nations"],["~",null,"A set of nation lists for each coalition in the server"],["coalition:COALITION_NAME","coalition:allies","A single list with the nations in the coalition"],["NATION","Borg","Nation name, id, leader, url, user id or mention (see nation type)"],["ALLIANCE","AA:Rose","Alliance id, name, url or mention (see alliance type)"],["SELECTOR[FILTER]","`*[#cities>10]`, `AA:Rose[#position>1,#vm_turns=0]`","A single nation list based on a selector with an optional filter"]],columns:["nations"]},NationOrAlliance:{commands:{getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}},isvalid:{help:"",desc:"If this exists in game",return_type:"boolean"}},selectors:[["nation:NATION_NAME","nation:Borg","A qualified nation name"],["leader:NATION_NAME","leader:Danzek","A qualified leader name"],["aa:ALLIANCE_NAME","aa:Rose","A qualified alliance name"],["alliance:ALLIANCE_NAME","alliance:Eclipse","A qualified alliance name"],["nation/id=NATION_ID","nation/id=6","A nation url"],["alliance/id=ALLIANCE_ID","alliance/id=790","An alliance url"],["coalition:COALITION","coalition:allies","A qualified coalition name"],["~COALITION","~enemies","A coalition name"],["NATION_NAME","Borg","An unqualified nation name"],["LEADER_NAME","Danzek","An unqualified leader name"],["NATION_ID","189573","A nation id"],["ALLIANCE_ID","790","An alliance id"],["@ROLE_MENTION","@Member","A discord role mention or name"],["ROLE_ID","123456789012345678","A discord role id"],["@USER_MENTION","@xdnw","A discord user mention or name"],["USER_ID","123456789012345678","A discord user id"],["https://test.politicsandwar.com/index.php?id=15&tax_id=TAX_ID","https://test.politicsandwar.com/index.php?id=15&tax_id=1234","A full tax url"],["TAX_ID","tax_id=1234","A tax bracket id or url"],["*",null,"All nations"],["nation(<timestamp>,<includeVM:bool>):SELECTOR","nation(5d,true):*","As a sheet tab name; a snapshot selector, with optional timestamp and includeVM"]],columns:["nation","alliance"]},Project:{commands:{canbuild:{help:"",desc:"If a nation can build this project",return_type:"boolean",arguments:{nation:{name:"nation",type:"DBNation"}}},cost:{help:"",desc:"Map of resource cost of the project",return_type:"Map<ResourceType, Double>"},getapiname:{help:"",desc:"Api v3 name of project",return_type:"String"},getavg:{help:"",desc:"Get average attribute for nations with this project",return_type:"double",arguments:{attribute:{name:"attribute",type:"TypedFunction<DBNation,Double>"},nations:{name:"nations",optional:!0,type:"Set<DBNation>"}}},getcount:{help:"",desc:"Get number of projects for a set of nations",return_type:"int",arguments:{nations:{name:"nations",optional:!0,type:"Set<DBNation>"}}},getimagename:{help:"",desc:"The name of this project's image",return_type:"String"},getimageurl:{help:"",desc:"The url of this project's image",return_type:"String"},getmarketvalue:{help:"",desc:"Market value of project",return_type:"double"},getoutput:{help:"",desc:"The resource this project boosts, or null",return_type:"ResourceType"},getrequiredproject:{help:"",desc:"Get the nth required project",return_type:"Project",arguments:{index:{name:"index",type:"int"}}},getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcecost:{help:"",desc:"Get cost for a specific resource",return_type:"double",arguments:{type:{name:"type",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}},gettotal:{help:"",desc:"Get total attribute for nations with this project",return_type:"double",arguments:{attribute:{name:"attribute",type:"TypedFunction<DBNation,Double>"},nations:{name:"nations",optional:!0,type:"Set<DBNation>"}}},has:{help:"",desc:"If a nation has a project",return_type:"boolean",arguments:{nation:{name:"nation",type:"DBNation"}}},hasbit:{help:"",desc:"If a bitmask has this project",return_type:"boolean",arguments:{bitMask:{name:"bitMask",type:"long"}}},hasprojectrequirements:{help:"",desc:"If this project has any project requirements",return_type:"boolean"},isrequiredproject:{help:"",desc:"If a project is required for this project",return_type:"boolean",arguments:{project:{name:"project",type:"Project"}}},maxcities:{help:"",desc:"Required maximum cities for project, or Integer.MAX_VALUE if none",return_type:"int"},name:{help:"",desc:"Name of project",return_type:"String"},ordinal:{help:"",desc:"Bot id of project",return_type:"int"},requiredcities:{help:"",desc:"Required minimum cities for project, or 0 if none",return_type:"int"},requiredprojects:{help:"",desc:"The set of required projects (empty if none)",return_type:"Set<Project>"}},selectors:[["PROJECT","`ARMS_STOCKPILE`, `BAUXITEWORKS`, `CENTER_FOR_CIVIL_ENGINEERING`, `EMERGENCY_GASOLINE_RESERVE`, `INTELLIGENCE_AGENCY`, `INTERNATIONAL_TRADE_CENTER`, `IRON_DOME`, `IRON_WORKS`, `MASS_IRRIGATION`, `MISSILE_LAUNCH_PAD`, `MOON_LANDING`, `NUCLEAR_RESEARCH_FACILITY`, `PROPAGANDA_BUREAU`, `SPACE_PROGRAM`, `SPY_SATELLITE`, `URANIUM_ENRICHMENT_PROGRAM`, `VITAL_DEFENSE_SYSTEM`, `RECYCLING_INITIATIVE`, `PIRATE_ECONOMY`, `GREEN_TECHNOLOGIES`, `TELECOMMUNICATIONS_SATELLITE`, `ADVANCED_ENGINEERING_CORPS`, `ARABLE_LAND_AGENCY`, `CLINICAL_RESEARCH_CENTER`, `SPECIALIZED_POLICE_TRAINING_PROGRAM`, `RESEARCH_AND_DEVELOPMENT_CENTER`, `ACTIVITY_CENTER`, `GOVERNMENT_SUPPORT_AGENCY`, `MILITARY_SALVAGE`, `FALLOUT_SHELTER`, `BUREAU_OF_DOMESTIC_AFFAIRS`, `ADVANCED_PIRATE_ECONOMY`, `MARS_LANDING`, `SURVEILLANCE_NETWORK`, `GUIDING_SATELLITE`, `NUCLEAR_LAUNCH_FACILITY`, `MILITARY_RESEARCH_CENTER`, `MILITARY_DOCTRINE`","One of the entity values"]],columns:["project"]},ResourceType:{commands:{canproduceinany:{help:"",desc:"If this resource is on the given continent",return_type:"boolean",arguments:{continents:{name:"continents",type:"Set<Continent>"}}},getaveragemargin:{help:"",desc:"The average margin between buy and sell in the past week for completed trades",return_type:"double"},getbaseinput:{help:"",desc:"The base input for this resource (if manufactured)",return_type:"int"},getboostfactor:{help:"",desc:"The project boost factor for this resource's production (if any)",return_type:"double"},getbuilding:{help:"",desc:"The building corresponding to this resource (if any)",return_type:"Building"},getcap:{help:"",desc:"The building cap for this resource's production",return_type:"int"},getcontinents:{help:"",desc:"Continents of this resource (if any)",return_type:"Set<Continent>"},getgraphid:{help:"",desc:"The id of this resource on the graph",return_type:"int"},gethigh:{help:"",desc:"The current top buy price on the market",return_type:"int"},gethighaverage:{help:"",desc:"The average weekly buy price of this resource",return_type:"double"},getinputlist:{help:"",desc:"The input resources for this resource (if manufactured)",return_type:"List<ResourceType>"},getlow:{help:"",desc:"The current top sell price on the market",return_type:"int"},getlowaverage:{help:"",desc:"The average weekly sell price of this resource",return_type:"double"},getmanufacturingmultiplier:{help:"",desc:"The input output ratio for this resource (if manufactured)",return_type:"double"},getmargin:{help:"",desc:"The margin between the current top buy and sell price on the market",return_type:"int"},getmarketvalue:{help:"",desc:"The market value of this resource (weekly average)",return_type:"double"},getname:{help:"",desc:"The name of this resource",return_type:"String"},getpollution:{help:"",desc:"The pollution modifier for this resource's production",return_type:"int"},getproduction:{help:"",desc:"The total production of resources for nations",return_type:"Map<ResourceType, Double>",arguments:{nations:{name:"nations",type:"Set<DBNation>"},includeNegatives:{name:"includeNegatives",type:"boolean"}}},getproject:{help:"",desc:"The project required to boost this resource's production (if any)",return_type:"Project"},getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}},getupkeep:{help:"",desc:"The upkeep modifier for this resource's production",return_type:"int"},hasbuilding:{help:"",desc:"If this resource has a corresponding building",return_type:"boolean"},ismanufactured:{help:"",desc:"If this is a manufactured resource",return_type:"boolean"},israw:{help:"",desc:"If this is a raw resource",return_type:"boolean"}},selectors:[["RESOURCETYPE","`MONEY`, `CREDITS`, `FOOD`, `COAL`, `OIL`, `URANIUM`, `LEAD`, `IRON`, `BAUXITE`, `GASOLINE`, `MUNITIONS`, `STEEL`, `ALUMINUM`","One of the entity values"]],columns:["resource"]},TaxBracket:{commands:{countnations:{help:"",desc:"Count the number of nations in this tax bracket",return_type:"int",arguments:{filter:{name:"filter",optional:!0,type:"Predicate<DBNation>"}}},getalliance:{help:"",desc:"The alliance object for this bracket",return_type:"DBAlliance"},getalliance_id:{help:"",desc:"The alliance id this bracket belongs to, else 0",return_type:"int"},getid:{help:"",desc:"Id of the tax bracket",return_type:"int"},getmoneyrate:{help:"",desc:"Money tax rate",return_type:"int"},getname:{help:"",desc:"The name of this tax bracket",return_type:"String"},getnationlist:{help:"",desc:"The list of nations currently in this bracket",return_type:"NationList",arguments:{filter:{name:"filter",optional:!0,type:"Predicate<DBNation>"}}},getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}},getrssrate:{help:"",desc:"Resource tax rate",return_type:"int"},geturl:{help:"",desc:"Url of this tax bracket in-game",return_type:"String"}},selectors:[["TAX_ID","tx_id=12345","Tax Bracket ID"],["ALLIANCE","AA:Rose","Alliance id, name, url or mention (see alliance type)"],["*",null,"All tax brackets in this guilds alliances, else all tax brackets"]],columns:["id"]},TaxDeposit:{commands:{getalliance:{help:"",desc:"The alliance class for this tax record",return_type:"DBAlliance"},getallianceid:{help:"",desc:"The alliance id of the tax deposit",return_type:"int"},getallianceinfo:{help:"",desc:"Get an attribute for the alliance of this tax record",return_type:"String",arguments:{allianceFunction:{name:"allianceFunction",type:"TypedFunction<DBAlliance,String>"}}},getamount:{help:"",desc:"Get the amount of a resource for this tax record",return_type:"double",arguments:{type:{name:"type",type:"ResourceType"}}},getdatems:{help:"",desc:"Get the date as unix timestamp in milliseconds",return_type:"long"},getdatestr:{help:"",desc:"Get the date formatted as dd/mm/yyyy hh",return_type:"String"},getid:{help:"",desc:"Get id of the tax record",return_type:"int"},getinternalmoneyrate:{help:"",desc:"Get the internal money rate",return_type:"int"},getinternalresourcerate:{help:"",desc:"Get the internal resource rate",return_type:"int"},getmarketvalue:{help:"",desc:"Get market value of tax record",return_type:"double"},getmoneyrate:{help:"",desc:"Get the money rate",return_type:"int"},getnation:{help:"",desc:"The nation class for this tax record",return_type:"DBNation"},getnationid:{help:"",desc:"Get the nation ID",return_type:"int"},getnationinfo:{help:"",desc:"Get an attribute for the nation of this tax record",return_type:"String",arguments:{nationFunction:{name:"nationFunction",type:"TypedFunction<DBNation,String>"}}},getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcerate:{help:"",desc:"Get the resource rate",return_type:"int"},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}},getresourcesarray:{help:"",desc:"Get the resources array",return_type:"double[]"},getresourcesjson:{help:"",desc:"Get the resources json",return_type:"String"},getresourcesmap:{help:"",desc:"Get the resources map",return_type:"Map<ResourceType, Double>"},gettaxid:{help:"",desc:"Get the tax ID",return_type:"int"},getturnsold:{help:"",desc:"The number of turns ago this tax deposit was made",return_type:"long"}},selectors:[["TAX_ID","12345","Tax record ID"],["TAX_URL","/tax/id=12345","Tax URL"],["NATION","Borg","Nation name, id, leader, url, user id or mention (see nation type) - if in this guild's alliance"],["ALLIANCE","AA:Rose","Alliance id, name, url or mention (see alliance type) - if in this guild"],["*",null,"All tax records with the guild"]],columns:["id","tax_id","nation"]},TextChannelWrapper:{commands:{canbottalk:{help:"",desc:"",return_type:"boolean",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF"]}}},cantalk:{help:"",desc:"",return_type:"boolean",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF"]}},arguments:{user:{name:"user",type:"User"}}},getcategoryposition:{help:"",desc:"",return_type:"int"},getguild:{help:"",desc:"",return_type:"GuildDB"},getid:{help:"",desc:"",return_type:"long"},getjumpurl:{help:"",desc:"",return_type:"String"},getmembers:{help:"",desc:"",return_type:"Set<UserWrapper>",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF"]}}},getmention:{help:"",desc:"",return_type:"String"},getname:{help:"",desc:"",return_type:"String"},getpermission:{help:"",desc:"",return_type:"Boolean",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF"]}},arguments:{user:{name:"user",type:"User"},permission:{name:"permission",type:"Permission"}}},getposition:{help:"",desc:"",return_type:"int"},getrawposition:{help:"",desc:"",return_type:"int"},getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}},gettopic:{help:"",desc:"",return_type:"String",annotations:{role:{value:["INTERNAL_AFFAIRS_STAFF"]}}},isnsfw:{help:"",desc:"",return_type:"boolean"}},selectors:[["#CHANNEL","#general","Discord channel name"],["CHANNEL_ID","123456789012345678","Discord channel id"],["*",null,"All guild channels"]],columns:["channel"]},DBTrade:{commands:{getbuyer:{help:"",desc:"",return_type:"int"},getbuyernation:{help:"",desc:"",return_type:"DBNation"},getdate:{help:"",desc:"",return_type:"long"},getdate_accepted:{help:"",desc:"",return_type:"long"},getparent_id:{help:"",desc:"",return_type:"int"},getppu:{help:"",desc:"",return_type:"int"},getquantity:{help:"",desc:"",return_type:"int"},getresource:{help:"",desc:"",return_type:"ResourceType"},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}},getseller:{help:"",desc:"",return_type:"int"},getsellernation:{help:"",desc:"",return_type:"DBNation"},gettradeid:{help:"",desc:"",return_type:"int"},gettype:{help:"",desc:"",return_type:"TradeType"},isbuy:{help:"",desc:"",return_type:"boolean"}},selectors:[["TRADE_ID","12345","Trade ID"],["NATION","Borg","Nation name, id, leader, url, user id or mention (see nation type)"]],columns:["id"]},Transaction2:{commands:{getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}}},selectors:[["TX_ID","12345","Bank Transaction ID"],["NATION","Borg","Nation name, id, leader, url, user id or mention (see nation type)"]],columns:["id"]},DBTreasure:{commands:{getbonus:{help:"",desc:"Revenue bonus of this treasure (1% = 1)",return_type:"int"},getcolor:{help:"",desc:"Color of this treasure (if any)",return_type:"NationColor"},getcontinent:{help:"",desc:"Continent of this treasure (if any)",return_type:"Continent"},getdaysremaining:{help:"",desc:"Days remaining until this treasure respawns",return_type:"long"},getid:{help:"",desc:"ID of this treasure",return_type:"int"},getname:{help:"",desc:"Name of this treasure",return_type:"String"},getnation:{help:"",desc:"The nation holding this treasure",return_type:"DBNation"},getnation_id:{help:"",desc:"Id of nation holding this treasure",return_type:"int"},getnationsinrange:{help:"",desc:"Get the nations that are in range of this treasure",return_type:"Set<DBNation>",arguments:{maxNationScore:{name:"maxNationScore",type:"double"}}},getnumnationsinrange:{help:"",desc:"Get the number of nations that are in range of this treasure",return_type:"int"},getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}},getspawndate:{help:"",desc:"Date this treasure spawned (epoch milliseconds)",return_type:"long"},gettimeuntilnextspawn:{help:"",desc:"Time in milliseconds until this treasure respawns",return_type:"long"}},selectors:[["TREASURE","`Sutton Hoo Helmet`, `Warren Cup`, `Onyx`, `Amethyst`, `Tourmaline`, `Statue of David`, `Ain Sakhri Lovers`, `Terracotta Army`, `Vergulde Draeck`, `Mona Lisa`, `Mexican Codex`, `Sapphire`, `Smoky Quartz`, `Akan Drum`, `El Dorado`, `Holy Grail`, `Admonitions Scroll`, `Hammurabi's Code`, `Liberty Bell`, `Honjo Masamune`, `James Ossuary`, `Ruby`, `Citrine`, `Pillar of Ashoka`, `Diamond`, `Rosetta Stone`, `Kakiemon Elephants`, `Hoa Hakananai'a`, `Cymophane`, `Emerald`","One of the entity values"],["nation:NATION_NAME","nation:Borg","A qualified nation name"],["leader:NATION_NAME","leader:Danzek","A qualified leader name"],["aa:ALLIANCE_NAME","aa:Rose","A qualified alliance name"],["alliance:ALLIANCE_NAME","alliance:Eclipse","A qualified alliance name"],["nation/id=NATION_ID","nation/id=6","A nation url"],["alliance/id=ALLIANCE_ID","alliance/id=790","An alliance url"],["coalition:COALITION","coalition:allies","A qualified coalition name"],["~COALITION","~enemies","A coalition name"],["NATION_NAME","Borg","An unqualified nation name"],["LEADER_NAME","Danzek","An unqualified leader name"],["NATION_ID","189573","A nation id"],["ALLIANCE_ID","790","An alliance id"],["@ROLE_MENTION","@Member","A discord role mention or name"],["ROLE_ID","123456789012345678","A discord role id"],["@USER_MENTION","@xdnw","A discord user mention or name"],["USER_ID","123456789012345678","A discord user id"],["https://test.politicsandwar.com/index.php?id=15&tax_id=TAX_ID","https://test.politicsandwar.com/index.php?id=15&tax_id=1234","A full tax url"],["TAX_ID","tax_id=1234","A tax bracket id or url"],["*",null,"All nations"],["nation(<timestamp>,<includeVM:bool>):SELECTOR","nation(5d,true):*","As a sheet tab name; a snapshot selector, with optional timestamp and includeVM"]],columns:["treasure"]},Treaty:{commands:{getdate:{help:"",desc:"Date this treaty was signed",return_type:"long"},getendtime:{help:"",desc:"Timestamp the treaty ends",return_type:"long"},getexpiresdiscordstring:{help:"",desc:"",return_type:"String"},getexpiresstring:{help:"",desc:"",return_type:"String"},getfrom:{help:"",desc:"Get the alliance that sent this treaty",return_type:"DBAlliance"},getfromid:{help:"",desc:"id of the alliance that sent this treaty",return_type:"int"},getid:{help:"",desc:"id of this treaty",return_type:"int"},getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}},getto:{help:"",desc:"Get the alliance that received this treaty",return_type:"DBAlliance"},gettoid:{help:"",desc:"id of the alliance that received this treaty",return_type:"int"},getturnends:{help:"",desc:"Absolute turns (since unix epoch) this treaty ends",return_type:"long"},getturnsremaining:{help:"",desc:"Number of turns until this treaty ends",return_type:"int"},gettype:{help:"",desc:"Type of this treaty",return_type:"TreatyType"},isalliance:{help:"",desc:"If this treaty is between the given alliances",return_type:"boolean",arguments:{fromOrTo:{name:"fromOrTo",type:"Set<DBAlliance>"}}},ispending:{help:"",desc:"If this treaty is pending approval",return_type:"boolean"},tolinestring:{help:"",desc:"",return_type:"String"}},selectors:[["ALLIANCES:ALLIANCES","`Rose:Eclipse`, `Rose,Eclipse:~allies`","A treaty between two sets of alliances or coalitions (direction agnostic)"],["ALLIANCES>ALLIANCES","Rose>Eclipse","A treaty from one alliance or coalition to another"],["ALLIANCES<ALLIANCES","Rose<Eclipse","A treaty from one alliance or coalition to another"],["*",null,"All treaties"]],columns:["treaty"]},TreatyType:{commands:{getcolor:{help:"",desc:"Hex Color of treaty",return_type:"String"},getname:{help:"",desc:"Get the name of the treaty.",return_type:"String"},getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}},getstrength:{help:"",desc:"Get the numeric strength of the treaty",return_type:"int"},isdefensive:{help:"",desc:"If this is a defensive treaty",return_type:"boolean"},ismandatorydefensive:{help:"",desc:"If this is a defensive treaty",return_type:"boolean"},isoffensive:{help:"",desc:"If this is an offensive treaty",return_type:"boolean"}},selectors:[["TREATYTYPE","`NONE`, `MDP`, `MDOAP`, `ODP`, `ODOAP`, `PROTECTORATE`, `PIAT`, `NAP`, `NPT`, `EXTENSION`","One of the entity values"]],columns:["treaty_type"]},UserWrapper:{commands:{getagems:{help:"",desc:"Get user age in milliseconds",return_type:"long"},getavatarurl:{help:"",desc:"Get user avatar url",return_type:"String"},getcolor:{help:"",desc:"Get user color",return_type:"int"},getcolorraw:{help:"",desc:"Get user color raw",return_type:"int"},getcreatedms:{help:"",desc:"Get user date ceated in milliseconds",return_type:"long"},geteffectiveavatarurl:{help:"",desc:"Get user effective avatar url",return_type:"String"},geteffectivename:{help:"",desc:"Get user effective name",return_type:"String"},getid:{help:"",desc:"Discord user id",return_type:"long"},getmention:{help:"",desc:"Get user mention",return_type:"String"},getname:{help:"",desc:"Discord user name",return_type:"String"},getnation:{help:"",desc:"Nation class corresponding to this user\nIf no nation is found, returns null",return_type:"DBNation"},getnickname:{help:"",desc:"Get user nickname",return_type:"String"},getonlinestatus:{help:"",desc:"Get user online status",return_type:"OnlineStatus"},getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}},getroles:{help:"",desc:"Roles of this user",return_type:"Set<String>"},getserveragems:{help:"",desc:"Get time since user join in milliseconds",return_type:"long"},gettimejoinedms:{help:"",desc:"Get user time joined in milliseconds",return_type:"long"},geturl:{help:"",desc:"Get user url",return_type:"String"},getuserid:{help:"",desc:"Discord user id",return_type:"long"},getusername:{help:"",desc:"Discord user name",return_type:"String"},hasaccess:{help:"",desc:"If this member has access to a channel",return_type:"boolean",arguments:{channel:{name:"channel",type:"TextChannel"}}},hasallroles:{help:"",desc:"If this member has all roles",return_type:"boolean",arguments:{roles:{name:"roles",type:"Set<Role>"}}},hasanyroles:{help:"",desc:"If this member has any roles",return_type:"boolean",arguments:{roles:{name:"roles",type:"Set<Role>"}}},haspermission:{help:"",desc:"If this member has a permission",return_type:"boolean",arguments:{permission:{name:"permission",type:"Permission"}}},haspermissionchannel:{help:"",desc:"If this member has a permission in a channel",return_type:"boolean",arguments:{channel:{name:"channel",type:"TextChannel"},permission:{name:"permission",type:"Permission"}}},hasrole:{help:"",desc:"If this member has a role",return_type:"boolean",arguments:{role:{name:"role",type:"Role"}}},matches:{help:"",desc:"Matches a nation filter\nIf no nation is found, returns false",return_type:"boolean",arguments:{filter:{name:"filter",type:"Predicate<DBNation>"}}}},selectors:[["USER","Borg","Discord user name"],["USER_ID","123456789012345678","Discord user id"],["@ROLE","@Member","All users with a discord role by a given name or mention"],["ROLE_ID","123456789012345678","All users with the discord role by a given id"],["NATION","Borg","Nation name, id, leader, url, user id or mention (see nation type) - only if registered with Locutus"],["ALLIANCE","AA:Rose","Alliance id, name, url or mention (see alliance type), resolves to the users registered with Locutus"],["*",null,"All shared users"]],columns:["user"]},DBWar:{commands:{getaircontrol:{help:"",desc:"",return_type:"int"},getattcities:{help:"",desc:"",return_type:"int"},getattresearch:{help:"",desc:"",return_type:"int",arguments:{research:{name:"research",type:"Research"}}},getattresearchbits:{help:"",desc:"",return_type:"int"},getattacker_aa:{help:"",desc:"",return_type:"int"},getattacker_id:{help:"",desc:"",return_type:"int"},getblockader:{help:"",desc:"",return_type:"int"},getcostbits:{help:"",desc:"",return_type:"int"},getdate:{help:"",desc:"",return_type:"long"},getdefcities:{help:"",desc:"",return_type:"int"},getdefresearch:{help:"",desc:"",return_type:"int",arguments:{research:{name:"research",type:"Research"}}},getdefresearchbits:{help:"",desc:"",return_type:"int"},getdefender_aa:{help:"",desc:"",return_type:"int"},getdefender_id:{help:"",desc:"",return_type:"int"},getgroundcontrol:{help:"",desc:"",return_type:"int"},getnation:{help:"",desc:"",return_type:"DBNation",arguments:{attacker:{name:"attacker",type:"Boolean"}}},getresearchbits:{help:"",desc:"",return_type:"int"},getresource:{help:"",desc:"Gets a resource amount from a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"},resource:{name:"resource",type:"ResourceType"}}},getresourcevalue:{help:"",desc:"Gets the total resource value for a map of resources",return_type:"double",arguments:{resources:{name:"resources",type:"Map<ResourceType,Double>"}}},getstatus:{help:"",desc:"",return_type:"WarStatus"},getturnsleft:{help:"",desc:"",return_type:"int"},getwarid:{help:"",desc:"",return_type:"int"},getwartype:{help:"",desc:"",return_type:"WarType"},isactive:{help:"",desc:"",return_type:"boolean"},possibleenddate:{help:"",desc:"",return_type:"long"},shouldbeexpired:{help:"",desc:"",return_type:"boolean"},tourl:{help:"",desc:"",return_type:"String"}},selectors:[["WAR_ID","12345","War ID"],["NATION","Borg","Nation name, id, leader, url, user id or mention (see nation type)"],["ALLIANCE","AA:Rose","Alliance id, name, url or mention (see alliance type)"],["*",null,"All wars"]],columns:["id","war_id","nation","leader","alliance"]}},keys:{"Set<Project>":{desc:"A comma separated list of nation projects"},boolean:{desc:"",examples:["true","false"]},"Set<DBNation>":{desc:"A comma separated list of nations, alliances and filters",examples:["borg,AA:Cataclysm,#position>1"]},SpreadSheet:{desc:"A google spreadsheet id or url\nFor shorthand, use a comma when specifying the sheet tab e.g. `sheet:ID,TAB_NAME`For a url, append `#gid=1234` or `#tab=tabName` to specify the id of the tab to use",examples:["sheet:1X2Y3Z4","https://docs.google.com/spreadsheets/d/1X2Y3Z4/edit#gid=0"]},int:{desc:"A whole number",examples:["3","3*4-6/2","50.3m"]},String:{desc:"A single line of text",examples:["hello"]},"String[TextArea]":{desc:"A single line of text",examples:["hello"]},Integer:{desc:"A whole number",examples:["3","3*4-6/2","50.3m"]},Long:{desc:"A whole number",examples:["3","3*4-6/2","50.3k"]},"long[Timestamp]":{desc:"A unix timestamp, a DMY date or a time difference that will resolve to a timestamp from the current date",examples:["5d","1w10h3m25s","dd/MM/yyyy","timestamp:1682013943000"]},DBNation:{desc:"nation id, name or url",examples:["Borg","<@664156861033086987>","Danzek","189573","https://politicsandwar.com/nation/id=189573"]},"Map<Research,Integer>":{desc:"A comma separated list of research and their amounts",examples:["{GROUND_COST=12,AIR_CAPACITY=2}"]},DBAlliance:{desc:"An alliance name id or url",examples:["'Error 404'","7413","https://politicsandwar.com/alliance/id=7413"]},TaxBracket:{desc:"A tax id or url",examples:["tax_id=1234","https://politicsandwar.com/index.php?id=15&tax_id=1234"]},"Long[Timediff]":{desc:"A time difference or unix timestamp which will resolve as a difference relative to the current date",examples:["5d","1w10h3m25s","timestamp:1682013943000"]},EscrowMode:{desc:"The mode for escrowing funds for a transfer, such as when a receiver is blockaded"},Roles:{desc:"A discord role name, mention or id",examples:["@role","672238503119028224","roleName"]},Double:{desc:"A decimal number",examples:["3.0","3*4.5-6/2","50.3m"]},ClearRolesEnum:{desc:"Types of users to clear roles of"},"Set<ResourceType>":{desc:"A comma separated list of resource types",examples:["aluminum","money","`*`","manu","raws","!food"]},"long[Timediff]":{desc:"A time difference or unix timestamp which will resolve as a difference relative to the current date",examples:["5d","1w10h3m25s","timestamp:1682013943000"]},Newsletter:{desc:""},GoogleDoc:{desc:"A google document id or url",examples:["document:1X2Y3Z4","https://docs.google.com/document/d/1X2Y3Z4/edit"]},NationOrAlliance:{desc:"A nation or alliance name, url or id. Prefix with `AA:` or `nation:` to avoid ambiguity if there exists both by the same name or id",examples:["Borg","https://politicsandwar.com/alliance/id=1234","aa:1234"]},"Long[Timestamp]":{desc:"A unix timestamp, a DMY date or a time difference that will resolve to a timestamp from the current date",examples:["5d","1w10h3m25s","dd/MM/yyyy","timestamp:1682013943000"]},Message:{desc:"A discord message url",examples:["https://discord.com/channels/647252780817448972/973848742769885194/975827690877780050"]},"Set<NationOrAlliance>":{desc:"A comma separated list of nations and alliances",examples:["borg,AA:Cataclysm"]},long:{desc:"A whole number",examples:["3","3*4-6/2","50.3k"]},Boolean:{desc:"",examples:["true","false"]},"List<String>[TextArea]":{desc:"Multiple words or text separated by spaces\nUse quotes for multi-word arguments",examples:["a b c"]},Status:{desc:"The status of a nation's loan"},"DBLoan[GuildLoan]":{desc:""},"Map<ResourceType,Double>":{desc:"A comma separated list of resources and their amounts",examples:["{money=1.2,food=6}","food 5,money 3","5f 3$ 10.5c","$53","{food=1}*1.5"]},Category:{desc:"A discord category name or mention",examples:["category-name"]},AppMenu:{desc:"The name of a custom app menu",examples:["user","message"]},"Map<Role,Set<Role>>":{desc:"A map of a discord role to a set of roles (comma separated)",examples:["@Role1=@Role2,@Role3\n@role4=@role5,@role6"]},ResourceType:{desc:"The name of a resource",examples:["money","aluminum"]},"Set<DBAlliance>":{desc:"A comma separated list of alliances",examples:["Cataclysm,790"]},Guild:{desc:"A discord guild id. See: <https://en.wikipedia.org/wiki/Template:Discord_server#Getting_Guild_ID>",examples:["647252780817448972"]},EmbeddingSource:{desc:"The name of an data set"},CityRanges:{desc:"A range of city counts (inclusive)",examples:["c1-10","c11+"]},"Set<BeigeReason>":{desc:"A comma separated list of beige reasons for defeating an enemy in war"},Role:{desc:"A discord role name or mention",examples:["@role","role"]},"String[MenuLabel]":{desc:"A button label for a custom menu"},Rank:{desc:"One of the default in-game position levels"},GuildSetting:{desc:"Bot guild settings"},"Set<WarType>":{desc:"A comma separated list of war declaration types",examples:["ATTRITION,RAID"]},"Set<WarStatus>":{desc:"A comma separated list of war statuses",examples:["ACTIVE,EXPIRED"]},"Set<AttackType>":{desc:"A comma separated list of attack types",examples:["GROUND,VICTORY"]},"Set<SuccessType>":{desc:"A comma separated list of attack success types"},"String[GuildCoalition]":{desc:"A name for a default or custom Bot coalition"},EnemyAlertChannelMode:{desc:"An alert mode for the ENEMY_ALERT_CHANNEL when enemies leave beige"},"Set<Role>":{desc:"A comma separated list of discord role names or mentions",examples:["@role1,@role2"]},"Set<TreatyType>":{desc:"A treaty type"},MMRDouble:{desc:"4 decimal numbers representing barracks, factory, hangar, drydock",examples:["0.0/2.0/5.0/0.0","5553"]},MMRBuyMode:{desc:""},TemplateTypes:{desc:"A category for a grant template"},"Set<MilitaryUnit>":{desc:"A comma separated list of military units",examples:["SOLDIER,TANK,AIRCRAFT,SHIP,MISSILE,NUKE"]},"Set<AllianceMetric>":{desc:"A comma separated list of alliance metrics"},"Set<DBTreasure>":{desc:"A treasure"},"Set<AuditType>":{desc:"A comma separated list of audit types"},"Set<NationColor>":{desc:"A nation color"},"Set<Building>":{desc:"A comma separated list of building types"},"Set<Status>":{desc:"A comma separated list of the status of a nation's loan"},"Set<Category>":{desc:"A comma separated list of discord categories",examples:["interview,warcat,public"]},MessageTrigger:{desc:""},CityBuild:{desc:"City build json or url",examples:["city/id=371923","{city-json}","city/id=1{json-modifiers}"]},"Set<Treaty>":{desc:"A treaty between two alliances"},"Map<NationFilter,TaxRate>":{desc:"A map of nation filters to tax rates\nAll nation filters are supported (e.g. roles)\nPriority is first to last (so put defaults at the bottom)",examples:["#cities<10:100/100\n#cities>=10:25/25"]},"Set<DBBounty>":{desc:"A bounty"},WarCostMode:{desc:"The mode for calculating war costs"},WarCostStat:{desc:"A war attack statistic"},MMRMatcher:{desc:"An string matching for a nation's military buildings (MMR)\nIn the form `505X` where `X` is any military building"},TransferSheet:{desc:"A google spreadsheet id or url. Must have a `nation` or `leader` column as well as the names of each resource",examples:["sheet:1X2Y3Z4","https://docs.google.com/spreadsheets/d/1X2Y3Z4/edit#gid=0"]},"Set<TaxBracket>":{desc:"A tax bracket"},"Set<IAttack>":{desc:"An attack in a war"},"Set<DBWar>":{desc:"A war"},"Set<GuildSetting>":{desc:"A bot setting in a guild"},CommandBehavior:{desc:"The behavior for a command button"},ICommand:{desc:"A discord slash command reference for the bot"},"Set<TaxDeposit>":{desc:"A tax record"},"Set<DBCity>":{desc:"A city"},"Set<UserWrapper>":{desc:"A discord user"},"Set<Research>":{desc:"A comma separated list of military research"},"Set<ProviderType>":{desc:"A comma separated list of provider types"},"Set<Integer>":{desc:"",examples:["1,2,5"]},DepositType:{desc:"A note to use for a bank transfer"},Member:{desc:"A discord user mention, or if a nation name, id or url if they are registered",examples:["@member","borg"]},AGrantTemplate:{desc:"The name of a created grant template"},NationLootType:{desc:"The reason for a nation's loot being known"},double:{desc:"A decimal number",examples:["3.0","3*4.5-6/2","50.3m"]},Project:{desc:"A project name. Replace spaces with `_`. See: <https://politicsandwar.com/nation/projects/>",examples:["ACTIVITY_CENTER"]},SheetTemplate:{desc:"A sheet template name that has been created in this guild\nSheet templates are column formats for a sheet\nTemplates, each with a selection can be used to generate multi-tabbed spreadsheets\nIf the command supports it, you can specify a new template inline"},SelectionAlias:{desc:"A selection alias name that has been created in this guild\nUsed to reference a list of nations or other entities that can be used in commands and sheets\nIf the command supports it, you can specify a new selection alias inline e.g. `nation:*,#cities>10`"},"Set<Conflict>":{desc:"The name of a stored conflict between two coalitions"},GPTProvider:{desc:""},"Map<String,String>":{desc:""},Conflict:{desc:"The name of a stored conflict between two coalitions"},MMRInt:{desc:"4 whole numbers representing barracks,factory,hangar,drydock",examples:["5553","0/2/5/0"]},Color:{desc:"A color name or hex code",examples:["#420420"]},"Set<GuildDB>":{desc:"A discord guild"},"Set<DomesticPolicy>":{desc:"A comma separated list of domestic policies"},"Set<Operation>":{desc:"A comma separated list of spy operation types"},"Map<NationFilter,Integer>":{desc:"A map of nation filters to tax ids\nAll nation filters are supported (e.g. roles)\nPriority is first to last (so put defaults at the bottom)",examples:["#cities<10:1\n#cities>=10:2"]},"Report[ReportPerms]":{desc:""},"TypedFunction<DBNation,Double>":{desc:"`/help find_nation_placeholder`"},AllianceMetricMode:{desc:""},"Predicate<DBNation>":{desc:"`/help find_nation_placeholder`"},User:{desc:"A discord user mention, or if a nation name, id or url if they are registered",examples:["@user","borg"]},DBCity:{desc:"City url",examples:["city/id=371923"]},Continent:{desc:"Continent name"},"Set<OrbisMetric>":{desc:"A comma separated list of beige reasons for defeating an enemy in war"},"Map<NationFilter,Role>":{desc:"Auto assign roles based on conditions\nSee: <https://github.com/xdnw/locutus/wiki/nation_placeholders>\nAccepts a list of filters to a role.\nIn the form:\n```\n#cities<10:@someRole\n#cities>=10:@otherRole\n```\nUse `*` as the filter to match all nations.\nOnly alliance members can be given role"},MilitaryUnit:{desc:"Military unit name"},"Set<NationOrAllianceOrGuild>":{desc:"A comma separated list of nations, alliances and guild ids",examples:["borg,AA:Cataclysm,647252780817448972"]},NationOrAllianceOrGuild:{desc:"A nation or alliance name, url or id, or a guild id",examples:["Borg","alliance/id=7452","647252780817448972"]},BeigeAlertMode:{desc:"A mode for receiving alerts when a nation leaves beige"},JSONObject:{desc:""},MathOperation:{desc:"Math comparison operation"},DBWar:{desc:"A war id or url",examples:["https://politicsandwar.com/nation/war/timeline/war=1234"]},"Class[PlaceholderType]":{desc:"An entity type for a placeholder\nUsed for sheets or formatted messages",examples:["nation","city","alliance","war"]},ConflictCategory:{desc:"The category for a conflict"},TextChannel:{desc:"A discord guild channel name or mention",examples:["#channel"]},Permission:{desc:"A discord role permission"},Safety:{desc:"Spy safety level"},"Map<ResourceType,Double>[AllianceDepositLimit]":{desc:"A comma separated list of resources and their amounts, which will be restricted by an alliance's account balance",examples:["{money=1.2,food=6}","food 5,money 3","5f 3$ 10.5c","$53"]},"Set<NationList>":{desc:"One or more groups of nations"},"Set<DBBan>":{desc:"A game ban"},"Set<Continent>":{desc:"A comma separated list of continents, or `*`"},TaxRate:{desc:"A tax rate in the form of `money/rss`",examples:["25/25"]},FlowType:{desc:"Bank transaction flow type (internal, withdrawal, depost)"},AllianceMetric:{desc:"A Bot metric for alliances"},TreatyType:{desc:"An in-game treaty type"},"TypedFunction<DBAlliance,String>":{desc:"<https://github.com/xdnw/locutus/wiki/alliance_placeholders>"},"Map<NationFilter,MMRMatcher>":{desc:"A map of nation filters to MMR\nUse X for any military building\nAll nation filters are supported (e.g. roles)\nPriority is first to last (so put defaults at the bottom)",examples:["#cities<10:505X\n#cities>=10:0250"]},"Set<Member>":{desc:"A comma separated list of discord user mentions, or if a nation name, id or url if they are registered",examples:["@member1,@member2","`*`"]},Report:{desc:""},"Map<MilitaryUnit,Long>":{desc:"A comma separated list of units and their amounts",examples:["{soldiers=12,tanks=56}"]},GuildOrAlliance:{desc:"A guild or alliance name, url or id. Prefix with `AA:` or `guild:` to avoid ambiguity if there exists both by the same name or id",examples:["guild:216800987002699787","aa:1234"]},AutoRoleOption:{desc:"Mode for automatically giving discord roles"},CustomSheet:{desc:"A custom sheet name that has been created in this guild\nCustom sheets have named tabs comprised of template-selection pairs"},"Set<EmbeddingType>":{desc:"A comma separated list of embedding types"},"Set<String>[WikiCategory]":{desc:"A comma separated list of wiki categories"},"Set<EmbeddingSource>":{desc:"A comma separated list of data sets"},"Map<ResourceType,Double>[NationDepositLimit]":{desc:"A comma separated list of resources and their amounts, which will be restricted by an nations's account balance",examples:["{money=1.2,food=6}","food 5,money 3","5f 3$ 10.5c","$53"]},"TypedFunction<AttackType,String>":{desc:"A war attack type"},"TypedFunction<MilitaryUnit,String>":{desc:"A military unit type"},"TypedFunction<DBBounty,String>":{desc:"A bounty"},"TypedFunction<Project,String>":{desc:"A project"},"TypedFunction<ResourceType,String>":{desc:"A game resource"},"TypedFunction<Treaty,String>":{desc:"A treaty between two alliances"},"TypedFunction<TreatyType,String>":{desc:"A treaty type"},"TypedFunction<NationColor,String>":{desc:"A nation color"},"TypedFunction<Building,String>":{desc:"A city building type"},"TypedFunction<DBTreasure,String>":{desc:"A treasure"},"TypedFunction<AuditType,String>":{desc:"A bot audit type for a nation"},AttackType:{desc:"An attack type"},WarType:{desc:"A war declaration type"},WarPolicy:{desc:"A war policy"},NationOrAllianceOrGuildOrTaxid:{desc:"A nation or alliance name, url or id, or a guild id, or a tax id or url",examples:["Borg","alliance/id=7452","647252780817448972","tax_id=1234"]},NationMeta:{desc:""},BeigeAlertRequiredStatus:{desc:"A discord status for receiving alerts when a nation leaves beige"},"TypedFunction<TaxDeposit,String>":{desc:"A tax record"},"TypedFunction<UserWrapper,String>":{desc:"A discord user"},GrantRequest:{desc:"A grant request id"},"TypedFunction<DBCity,String>":{desc:"A city"},"TypedFunction<TaxBracket,String>":{desc:"A tax bracket"},"TypedFunction<GuildSetting,String>":{desc:"A bot setting in a guild"},"TypedFunction<DBWar,String>":{desc:"A war"},"TypedFunction<IAttack,String>":{desc:"An attack in a war"},"Set<AutoAuditType>":{desc:"A comma separated list of auto audit types"},AutoNickOption:{desc:"Mode for automatically giving discord nicknames"},RssConvertMode:{desc:"The mode for calculating resource conversion"},Parser:{desc:"",examples:["boolean","String","Set<Integer>"]},"Set<SpreadSheet>":{desc:"A comma separated list of spreadsheets"},Coalition:{desc:"One of the default Bot coalition names"},"TypedFunction<DBNation,String>":{desc:"`/help find_nation_placeholder`"},ReportType:{desc:""},DBAlliancePosition:{desc:"An in-game position\nWhen there is overlap from multiple alliances registered to the guild, the alliance id must be specified\nIn the form: `<alliance>:<position>` such as `1234:Member`"},WarCostByDayMode:{desc:""},"Predicate<Treaty>":{desc:"A treaty between two alliances"},Font:{desc:"A font name",examples:["Arial"]},"List<Integer>":{desc:"A list of whole numbers (comma separated)"},"TypedFunction<Continent,String>":{desc:"One of the game continents"},"TypedFunction<NationOrAlliance,String>":{desc:"A nation or alliance"},"TypedFunction<DBBan,String>":{desc:"A game ban"},"TypedFunction<GuildDB,String>":{desc:"A discord guild"},"TypedFunction<NationList,String>":{desc:"One or more groups of nations"},UUID:{desc:"Universally Unique IDentifier",examples:["8-4-4-4-12"]},"Set<NationOrAllianceOrGuildOrTaxid>":{desc:"A comma separated list of nations, alliances, guild ids and tax ids or urls",examples:["borg,AA:Cataclysm,647252780817448972"]},"Set<Roles>":{desc:"A comma separated list of bot Roles"},MenuState:{desc:"The context state of a custom app menu"},"TypedFunction<DBAlliance,Double>":{desc:"<https://github.com/xdnw/locutus/wiki/alliance_placeholders>"},SheetKey:{desc:"The name of a premade sheet\nPremade sheet commands assign a google sheet to a key, so subsequent commands use the same sheet"},"Map<CityRanges,Set<BeigeReason>>":{desc:"A map of city ranges to a list of beige reasons for defeating an enemy in war\nPriority is first to last (so put defaults at the bottom)",examples:["c1-9:*\nc10+:INACTIVE,VACATION_MODE,APPLICANT"]}},options:{Project:{options:["ARMS_STOCKPILE","BAUXITEWORKS","CENTER_FOR_CIVIL_ENGINEERING","EMERGENCY_GASOLINE_RESERVE","INTELLIGENCE_AGENCY","INTERNATIONAL_TRADE_CENTER","IRON_DOME","IRON_WORKS","MASS_IRRIGATION","MISSILE_LAUNCH_PAD","MOON_LANDING","NUCLEAR_RESEARCH_FACILITY","PROPAGANDA_BUREAU","SPACE_PROGRAM","SPY_SATELLITE","URANIUM_ENRICHMENT_PROGRAM","VITAL_DEFENSE_SYSTEM","RECYCLING_INITIATIVE","PIRATE_ECONOMY","GREEN_TECHNOLOGIES","TELECOMMUNICATIONS_SATELLITE","ADVANCED_ENGINEERING_CORPS","ARABLE_LAND_AGENCY","CLINICAL_RESEARCH_CENTER","SPECIALIZED_POLICE_TRAINING_PROGRAM","RESEARCH_AND_DEVELOPMENT_CENTER","ACTIVITY_CENTER","GOVERNMENT_SUPPORT_AGENCY","MILITARY_SALVAGE","FALLOUT_SHELTER","BUREAU_OF_DOMESTIC_AFFAIRS","ADVANCED_PIRATE_ECONOMY","MARS_LANDING","SURVEILLANCE_NETWORK","GUIDING_SATELLITE","NUCLEAR_LAUNCH_FACILITY","MILITARY_RESEARCH_CENTER","MILITARY_DOCTRINE"]},DBNation:{query:!0},Research:{options:["GROUND_COST","AIR_COST","NAVAL_COST","GROUND_CAPACITY","AIR_CAPACITY","NAVAL_CAPACITY"]},DBAlliance:{query:!0},TaxBracket:{query:!0,guild:!0},EscrowMode:{options:["NEVER","WHEN_BLOCKADED","ALWAYS"]},Roles:{options:["REGISTERED","MEMBER","ADMIN","MILCOM","MILCOM_NO_PINGS","ECON","ECON_STAFF","ECON_GRANT_ALERTS","ECON_DEPOSIT_ALERTS","ECON_WITHDRAW_ALERTS","ECON_WITHDRAW_SELF","ECON_GRANT_SELF","FOREIGN_AFFAIRS","FOREIGN_AFFAIRS_STAFF","INTERNAL_AFFAIRS","INTERNAL_AFFAIRS_STAFF","APPLICANT","INTERVIEWER","MENTOR","GRADUATED","RECRUITER","TRADE_ALERT","BEIGE_ALERT","BEIGE_ALERT_OPT_OUT","BOUNTY_ALERT","BOUNTY_ALERT_OPT_OUT","WAR_ALERT_OPT_OUT","AUDIT_ALERT_OPT_OUT","BLITZ_PARTICIPANT","BLITZ_PARTICIPANT_OPT_OUT","TEMP","MAIL","BLOCKADED_ALERT","UNBLOCKADED_ALERT","UNBLOCKADED_GOV_ROLE_ALERT","ESCROW_GOV_ALERT","TREASURE_ALERT","TREASURE_ALERT_OPT_OUT","ENEMY_BEIGE_ALERT_AUDITOR","GROUND_MILITARIZE_ALERT","AI_COMMAND_ACCESS","ESPIONAGE_ALERTS","ENEMY_ALERT_OFFLINE","RESOURCE_CONVERSION","WITHDRAW_ALERT_NO_NOTE"]},ClearRolesEnum:{options:["UNUSED","ALLIANCE","DELETED_ALLIANCES","INACTIVE_ALLIANCES","NOT_ALLOW_LISTED","NON_MEMBERS","NON_ALLIES"]},ResourceType:{options:["MONEY","CREDITS","FOOD","COAL","OIL","URANIUM","LEAD","IRON","BAUXITE","GASOLINE","MUNITIONS","STEEL","ALUMINUM"]},Newsletter:{query:!0,guild:!0},NationOrAlliance:"DBNation",Status:{options:["OPEN","CLOSED","EXTENDED","MISSED_PAYMENT","DEFAULTED"]},DBLoan:{query:!0},Category:{query:!0,guild:!0},AppMenu:{query:!0,guild:!0},Role:{query:!0,guild:!0},Guild:{query:!0},EmbeddingSource:{query:!0,guild:!0},BeigeReason:{options:["VACATION_MODE","NOT_AN_ENEMY","INACTIVE","APPLICANT","UNDER_C10_SLOG","OFFENSIVE_WAR","ALREADY_BEIGE_STACKED","NO_ENEMY_OFFENSIVE_WARS","MISSILE_TURRET","NUKE_TURRET","NO_RECENT_WARS","NO_RECENT_3_CONSECUTIVE_LOGINS","NO_RECENT_5_CONSECUTIVE_LOGINS","INCORRECT_ENEMY_MMR","USELESS","BEIGE_CYCLE","BEIGE_CYCLE_4D","BEIGE_CYCLE_1","BLOCKADED","LOW_RESISTANCE","LOW_RESISTANCE_OFFENSIVE","DO_NOT_RAID","NO_REASON"]},Rank:{options:["LEADER","HEIR","OFFICER","MEMBER","APPLICANT","REMOVE","BAN","UNBAN","INVITE","UNINVITE"]},GuildSetting:{options:["AUTOROLE_ALLY_ROLES","ALLOWED_BEIGE_REASONS","RECRUIT_MESSAGE_SUBJECT","REQUIRED_MMR","VM_ALERT_CHANNEL","BEIGE_VIOLATION_MAIL","ALLOW_NEGATIVE_RESOURCES","SHOW_ALLY_OFFENSIVE_WARS","DELETION_ALERT_CHANNEL","ADDBALANCE_ALERT_CHANNEL","AUTOROLE_ALLIANCES","DISPLAY_CONDENSED_DEPOSITS","WAR_ALERT_FOR_OFFSHORES","DELEGATE_SERVER","AUTOROLE_ALLY_GOV","OFFSHORE_KEEP_AMOUNT","ORBIS_ALLIANCE_EXODUS_ALERTS","MEMBER_LEAVE_ALERT_CHANNEL","GRANT_REQUEST_TAX_ACCOUNT","ENABLE_WAR_ROOMS","MAIL_DEMOTED_MEMBERS","DISABLED_MEMBER_AUDITS","ESPIONAGE_ALERT_CHANNEL","BEIGE_ALERT_CHANNEL","OPENAI_MODEL","MEMBER_CAN_WITHDRAW","REQUIRED_TAX_BRACKET","RECRUIT_MESSAGE_CONTENT","WITHDRAW_ALERT_CHANNEL","FORCE_RSS_CONVERSION","RESOURCE_REQUEST_CHANNEL","REQUIRED_INTERNAL_TAXRATE","ENEMY_ALERT_CHANNEL_MODE","TIMED_MESSAGES","API_KEY","ACTIVITY_ALERTS","LOST_WAR_CHANNEL","AUTOROLE_MEMBER_APPS","DEPOSIT_ALERT_CHANNEL","LARGE_TRANSFERS_CHANNEL","ALLOWED_TAX_BRACKETS","REWARD_MENTOR","MEMBER_CAN_OFFSHORE","CONDITIONAL_ROLES","HIDE_LEGACY_NOTICE","MEMBER_REBUY_INFRA_ALERT","ORBIS_OFFICER_LEAVE_ALERTS","GRANT_REQUEST_CHANNEL","ARCHIVE_CATEGORY","RESOURCE_CONVERSION","INTERVIEW_PENDING_ALERTS","ORBIS_LEADER_CHANGE_ALERT","OFFENSIVE_WAR_CHANNEL","INTERVIEW_INFO_SPAM","MENTION_MILCOM_COUNTERS","MENTION_MILCOM_FILTER","BANKER_WITHDRAW_LIMIT","GRANT_REQUEST_EXPIRE","ALLIANCE_CREATE_ALERTS","OPENAI_KEY","NON_AA_MEMBERS_CAN_BANK","MEMBER_AUDIT_ALERTS","GRANT_REQUEST_NOTE","ENEMY_ALERT_FILTER","ENEMY_BEIGED_ALERT","BAN_ALERT_CHANNEL","HIDE_APPLICANT_WARS","WAR_ROOM_LOG","AUTOROLE_ALLIANCE_RANK","FA_SERVER","TREATY_ALERTS","INTERVIEW_CATEGORY","MEMBER_CAN_SET_BRACKET","WON_WAR_CHANNEL","GRANT_REQUEST_DECAY","ALLIANCE_EXODUS_TOP_X","PUBLIC_OFFSHORING","AUTOROLE_TOP_X","NO_DISCORD_CAN_BANK","DEFAULT_OFFSHORE_ACCOUNT","ESCALATION_ALERTS","BOUNTY_ALERT_CHANNEL","UNBLOCKADED_ALERTS","GRANT_TEMPLATE_LIMITS","WAR_PEACE_ALERTS","DISPLAY_ITEMIZED_DEPOSITS","REROLL_ALERT_CHANNEL","GRANT_TEMPLATE_BLACKLIST","BANKER_WITHDRAW_LIMIT_INTERVAL","REWARD_REFERRAL","MAIL_NEW_APPLICANTS_TEXT","DO_NOT_RAID_TOP_X","MEMBER_CAN_ESCROW","REPORT_ALERT_CHANNEL","RECRUIT_MESSAGE_OUTPUT","DEFENSE_WAR_CHANNEL","SHOW_ALLY_DEFENSIVE_WARS","RSS_CONVERSION_RATES","ENABLE_GITHUB_COPILOT","GRANT_LIMIT_DELAY","ROUTE_ALLIANCE_BANK","UNBLOCKADE_REQUESTS","ENEMY_MMR_CHANGE_ALERTS","MEMBER_CAN_WITHDRAW_IGNORES_GRANTS","TRADE_ALERT_CHANNEL","TAX_BASE","MEMBER_CAN_WITHDRAW_WARTIME","AUTONICK","WAR_SERVER","BLOCKADED_ALERTS","ALLIANCE_ID","AA_GROUND_TOP_X","AA_GROUND_UNIT_ALERTS","GPT_USAGE_LIMITS","ENEMY_ALERT_CHANNEL","MAIL_NEW_APPLICANTS","WAR_ROOM_FILTER","TREASURE_ALERT_CHANNEL","ORBIS_OFFICER_MMR_CHANGE_ALERTS","WARCHEST_PER_CITY","ALLOW_UNVERIFIED_BANKING","ENEMY_BEIGED_ALERT_VIOLATIONS","EMBASSY_CATEGORY","ASSIGNABLE_ROLES","RECRUIT_MESSAGE_DELAY"],guild:!0},WarType:{options:["RAID","ORD","ATT","NUCLEAR"]},WarStatus:{options:["ACTIVE","DEFENDER_VICTORY","ATTACKER_VICTORY","PEACE","DEFENDER_OFFERED_PEACE","ATTACKER_OFFERED_PEACE","EXPIRED"]},AttackType:{options:["GROUND","VICTORY","FORTIFY","A_LOOT","AIRSTRIKE_INFRA","AIRSTRIKE_SOLDIER","AIRSTRIKE_TANK","AIRSTRIKE_MONEY","AIRSTRIKE_SHIP","AIRSTRIKE_AIRCRAFT","NAVAL","PEACE","MISSILE","NUKE","NAVAL_INFRA","NAVAL_AIR","NAVAL_GROUND"]},SuccessType:{options:["UTTER_FAILURE","PYRRHIC_VICTORY","MODERATE_SUCCESS","IMMENSE_TRIUMPH"]},EnemyAlertChannelMode:{options:["PING_USERS_IN_RANGE","PING_ROLE_IN_RANGE","PING_ROLE_ALL"]},TreatyType:{options:["NONE","MDP","MDOAP","ODP","ODOAP","PROTECTORATE","PIAT","NAP","NPT","EXTENSION"]},MMRBuyMode:{options:["DAILY_BUY","FULL"]},TemplateTypes:{options:["CITY","PROJECT","INFRA","LAND","BUILD","WARCHEST","RAWS","RESEARCH"]},MilitaryUnit:{options:["SOLDIER","TANK","AIRCRAFT","SHIP","MONEY","MISSILE","NUKE","SPIES","INFRASTRUCTURE"]},AllianceMetric:{options:["SOLDIER","SOLDIER_PCT","TANK","TANK_PCT","AIRCRAFT","AIRCRAFT_PCT","SHIP","SHIP_PCT","INFRA","INFRA_AVG","LAND","LAND_AVG","SCORE","SCORE_AVG","CITY","CITY_AVG","MEMBERS","MEMBERS_ACTIVE_1W","VM","INACTIVE_1W","VM_PCT","INACTIVE_PCT","WARCOST_DAILY","REVENUE","OFFENSIVE_WARS","OFFENSIVE_WARS_AVG","DEFENSIVE_WARS","DEFENSIVE_WARS_AVG","REVENUE_MONEY","REVENUE_FOOD","REVENUE_COAL","REVENUE_OIL","REVENUE_URANIUM","REVENUE_LEAD","REVENUE_IRON","REVENUE_BAUXITE","REVENUE_GASOLINE","REVENUE_MUNITIONS","REVENUE_STEEL","REVENUE_ALUMINUM","BARRACKS_PCT","FACTORY_PCT","HANGAR_PCT","DRYDOCK_PCT","INFRA_VALUE","LAND_VALUE","PROJECT_VALUE","CITY_VALUE","NUKE","NUKE_AVG","MISSILE","MISSILE_AVG","GROUND_PCT","PROJECTS","CITY_BUY_VALUE_10D","CITY_BUY_10D","PROJECT_BUY_10D","PROJECT_VALUE_10D","RESEARCH_VALUE","RESEARCH_VALUE_AVG","RESEARCH_COUNT","RESEARCH_AVG","GROUND_COST_AVG","AIR_COST_AVG","NAVAL_COST_AVG","GROUND_CAPACITY_AVG","AIR_CAPACITY_AVG","NAVAL_CAPACITY_AVG","SPIES","SPIES_AVG","TREASURE"]},DBTreasure:{options:["sutton hoo helmet","warren cup","onyx","amethyst","tourmaline","statue of david","ain sakhri lovers","terracotta army","vergulde draeck","mona lisa","mexican codex","sapphire","smoky quartz","akan drum","el dorado","holy grail","admonitions scroll","hammurabi's code","liberty bell","honjo masamune","james ossuary","ruby","citrine","pillar of ashoka","diamond","rosetta stone","kakiemon elephants","hoa hakananai'a","cymophane","emerald"]},AuditType:{options:["CHECK_RANK","INACTIVE","FINISH_OBJECTIVES","FIX_COLOR","CHANGE_CONTINENT","FIX_WAR_POLICY","RAID","UNUSED_MAP","BARRACKS","INCORRECT_MMR","BUY_SOLDIERS","BUY_HANGARS","BUY_PLANES","BUY_SHIPS","BEIGE_LOOT","RAID_TURN_CHANGE","BUY_SPIES","GATHER_INTEL","SPY_COMMAND","LOOT_COMMAND","DAILY_SPYOPS","DEPOSIT_RESOURCES","CHECK_DEPOSITS","WITHDRAW_DEPOSITS","OBTAIN_RESOURCES","SAFEKEEP","OBTAIN_WARCHEST","BUY_CITY","BUY_PROJECT","ACTIVITY_CENTER","BUY_INFRA","BUY_LAND","UNPOWERED","OVERPOWERED","NOT_NUCLEAR","FREE_SLOTS","NEGATIVE_REVENUE","MISSING_PRODUCTION_BONUS","EXCESS_HOSPITAL","EXCESS_POLICE","EXCESS_RECYCLING","GENERATE_CITY_BUILDS","BLOCKADED"]},NationColor:{options:["AQUA","BEIGE","BLACK","BLUE","BROWN","GRAY","GREEN","LIME","MAROON","OLIVE","ORANGE","PINK","PURPLE","RED","WHITE","YELLOW","MINT","LAVENDER","TURQUOISE","GOLD"]},Building:{options:["impCoalpower","impOilpower","impNuclearpower","impWindpower","impCoalmine","impOilwell","impBauxitemine","impIronmine","impLeadmine","impUramine","impFarm","impGasrefinery","impSteelmill","impAluminumrefinery","impMunitionsfactory","impSubway","impMall","impStadium","impBank","impSupermarket","impPolicestation","impHospital","impRecyclingcenter","impBarracks","impFactory","impHangars","impDrydock"]},MessageTrigger:{options:["CREATION","MEMBER_DEPARTURE","GRAVEYARD_ACTIVE"]},Treaty:{query:!0},DBBounty:{query:!0},WarCostMode:{options:["DEALT","DEALT_NO_SUBTRACT_LOOT","NET_DEALT","PROFIT","LOSSES","NET_LOSSES","ATTACKER_DEALT","DEFENDER_DEALT","ATTACKER_LOSSES","DEFENDER_LOSSES","ATTACKER_NET_DEALT","DEFENDER_NET_DEALT","ATTACKER_NET_LOSSES","DEFENDER_NET_LOSSES","ATTACKER_PROFIT","DEFENDER_PROFIT"]},WarCostStat:{options:["WAR_VALUE","SOLDIER","TANK","AIRCRAFT","SHIP","MISSILE","NUKE","GROUND","VICTORY","FORTIFY","A_LOOT","AIRSTRIKE_INFRA","AIRSTRIKE_SOLDIER","AIRSTRIKE_TANK","AIRSTRIKE_MONEY","AIRSTRIKE_SHIP","AIRSTRIKE_AIRCRAFT","NAVAL_SHIP","NAVAL_AIR","NAVAL_GROUND","NAVAL_INFRA","PEACE","MISSILE_ATTACK","NUKE_ATTACK","MONEY","FOOD","COAL","OIL","URANIUM","IRON","BAUXITE","LEAD","GASOLINE","MUNITIONS","STEEL","ALUMINUM"]},CommandBehavior:{options:["DELETE_MESSAGE","UNPRESS","DELETE_BUTTONS","DELETE_PRESSED_BUTTON","EPHEMERAL"]},ICommand:{options:["project cost","war card","newsletter create","announcement create","stats_war warStatusRankingByAA","trade average","chat unban","grant research","war find enemy","announcement find_invite","spy sheet convertTKR","role clearAllianceRoles","admin command sudo_nations","alerts trade mistrade","newsletter send","treaty gw_nap","help nation_placeholder","admin sync treaties","alliance departures","settings_recruit MAIL_NEW_APPLICANTS","invite","embed description","alerts bank subscribe","settings_bank_access removeResourceChannel","role clearNicks","war info","unit buy_sheet","announcement find","report loan add","offshore add","settings_foreign_affairs EMBASSY_CATEGORY","admin sync2 militarization_alerts","menu open","settings_war_alerts DEFENSE_WAR_CHANNEL","research cost","settings_reward REWARD_REFERRAL","settings_role ASSIGNABLE_ROLES","trade value","spy sheet copyForAlliance","alliance stats loot_ranking","baseball baseballChallengeEarningsRanking","admin debug api_usage","bank import_transfers","chat dataset view","spy sheet validate","settings_beige_alerts addBeigeReasons","role setAlias","menu button rename","settings_orbis_alerts VM_ALERT_CHANNEL","settings_orbis_alerts ORBIS_ALLIANCE_EXODUS_ALERTS","settings_war_alerts BLOCKADED_ALERTS","settings_role AUTOROLE_ALLIANCE_RANK","settings delete","stats_war attack_breakdown versus","sheets_ia ActivitySheet","report loan upload","mail command","embed template spy_sheets","stats_war attack_breakdown sheet","bank stats inflows","coalition sheet","tax set_from_sheet","coalition generate","settings_beige_alerts ENEMY_ALERT_CHANNEL_MODE","credentials addApiKey","role mask_sheet","selection_alias add treatytype","grant mmr","conflict featured list_rules","trade findProducer","grant_template list","escrow add","stats_tier nth_loot_by_score","alliance stats metrics_by_turn","selection_alias add treasure","selection_alias add audittype","selection_alias add nationcolor","selection_alias add building","report loan update_all","channel rename bulk","settings_recruit remove_timed_message","building cost","stats_war myloot","selection_alias add attacktype","selection_alias add militaryunit","trade accept","selection_alias add treaty","selection_alias add project","embed template deposits","selection_alias add resourcetype","report upload legacy_reports","settings_recruit RECRUIT_MESSAGE_CONTENT","settings_tax REQUIRED_INTERNAL_TAXRATE","selection_alias add bounty","stats_war warCostRanking","war blockade request","admin bot profile","settings_audit addRequiredMMR","escrow set_sheet","settings_role AUTOROLE_ALLY_GOV","selection_alias add taxbracket","settings_bank_access addGrantTemplateLimit","settings_war_alerts MENTION_MILCOM_COUNTERS","selection_alias add iattack","selection_alias add war","selection_alias add guildsetting","coalition list","alerts trade margin","chat conversion add_document","embed add modal","nation score","admin sync syncBanks","help moderation_check","grant_template create raws","selection_alias add taxdeposit","settings_foreign_affairs ALLIANCE_CREATE_ALERTS","selection_alias add city","nation reroll","conflict purge user_generated","selection_alias add user","research table","chat providers set","war find raid","embed template raid","settings_recruit RECRUIT_MESSAGE_DELAY","channel delete current","settings_war_alerts SHOW_ALLY_DEFENSIVE_WARS","admin list multis","project costsheet","deposits sheet","alerts trade unsubscribe","war find bounty","self remove","sheet_custom from_file","grant_template disable","menu button remove","deposits addSheet","sheets_econ taxRevenue","research view_nation","nation set loot","grant_template create project","admin bot import_settings","sheet_template view","interview questions view","embed info","selection_alias rename","trade offer info","trade offer buy_list","build add","admin sync saveMetrics","settings_bank_info GRANT_REQUEST_TAX_ACCOUNT","war room setCategory","conflict sync multiple_sources","settings_role AUTOROLE_TOP_X","chat providers configure","conflict edit end","settings_audit MEMBER_REBUY_INFRA_ALERT","grant_template create build","admin dm","conflict featured add_rule","trade trending","conflict alliance add","war sheet raid","admin sync forum_profiles","settings_recruit RECRUIT_MESSAGE_SUBJECT","trade totalByDay","interview questions set","grant_template create research","embed update","war find damage","settings sheets","admin settings unset","settings_trade TRADE_ALERT_CHANNEL","settings_war_alerts UNBLOCKADED_ALERTS","sheets_econ IngameNationTransfersBySender","self list","alliance sheets sheet","alliance revenue","simulate ground","grant cost","settings_beige_alerts ENEMY_BEIGED_ALERT_VIOLATIONS","spy counter","chat dataset import_sheet","settings info","report loan update","settings_tax REQUIRED_TAX_BRACKET","sheets_milcom lootValueSheet","admin sync multi_bans","settings_tax ALLOWED_TAX_BRACKETS","conflict edit status","embed remove button","simulate naval","report approve","stats_other data_csv AlliancesDataByDay","settings_bank_access ALLOW_NEGATIVE_RESOURCES","tax bracketsheet","mail recruit","admin list expired_guilds","interview setReferrer","sheets_milcom DeserterSheet","alerts bank unsubscribe","selection_alias add nation","sheets_ia activity_date","interview unassignMentee","interview sheet","infra roi","audit sheet","report analyze","nation list multi","land roi","settings_bank_info LARGE_TRANSFERS_CHANNEL","admin sync2 taxes","channel move Down","settings_bank_access MEMBER_CAN_WITHDRAW","grant infra","admin bot rename","tax setNationBracketAuto","newsletter delete","role autorole","admin sync syncLootFromAttacks","stats_other global_metrics by_time","sheets_milcom WarCostByAllianceSheet","settings_default registerApiKey","admin sync syncforum","conflict edit add_forum_post","war sheet ReimburseByNation","alliance sheets warchestSheet","alliance stats militarization","mail targets","settings_war_alerts ESPIONAGE_ALERT_CHANNEL","baseball baseballChallengeRanking","who","alerts trade no_offers","settings_role CONDITIONAL_ROLES","unit history","spy tierGraph","grant warchest","trade marginByDay","admin leaveServer","settings_orbis_alerts REPORT_ALERT_CHANNEL","role addRoleToAllMembers","war blockade cancelRequest","fun borg","admin sync wars","infra cost","settings_sheet list","report purge","chat providers pause","coalition add","alliance stockpile","conflict sync website","spy sheet intel","offshore unlockTransfers","war sheet costSheet","research sheet","sheets_econ getNationsInternalTransfers","admin sync2 uid","alerts beige beigeAlertMode","settings_tax addRequiredBracket","modal create","conflict list","stats_other nationRanking","settings_bank_access toggleGrants","report sheet generate","war find blitztargets","offshore find for_enemies","report loan remove","help find_command","admin debug new_offshore","grant request create","admin sync syncNations","nation TurnTimer","interview channel auto_rename","admin sync pojos","newsletter info","embed template war_contested_range","settings_recruit MAIL_NEW_APPLICANTS_TEXT","audit hasNotBoughtSpies","settings_bounty TREASURE_ALERT_CHANNEL","interview setreferrerid","war counter url","stats_tier scoreTierGraph","settings_bank_access PUBLIC_OFFSHORING","conflict edit add_none_war","selection_alias list","embed template ally_enemy_sheets","admin list multis_land","simulate air","settings_bank_access BANKER_WITHDRAW_LIMIT","conflict create","settings_bank_info GRANT_REQUEST_EXPIRE","settings_default DELEGATE_SERVER","war find unblockade","sheets_ia NationSheet","admin sync discord","admin bot import_emojis","channel permissions","alerts beige test_auto","nation spies","interview mymentees","transfer resources","alerts beige beigeAlertRequiredLoot","admin list login_times","settings_war_alerts UNBLOCKADE_REQUESTS","help find_argument","selection_alias add nationlist","selection_alias add guild","chat providers resume","settings_orbis_alerts DELETION_ALERT_CHANNEL","selection_alias add ban","announcement ocr","embassy","sheets_ia deposits_date","admin sync2 alliances","alerts beige removeBeigeReminder","settings_orbis_alerts AA_GROUND_TOP_X","announcement read","stats_war warsCost","channel close current","war sheet costByResource","selection_alias add continent","treaty cancel","selection_alias add nationoralliance","announcement invite","conflict info","alerts trade price","settings_war_alerts WAR_ROOM_FILTER","menu cancel","conflict create_temp","settings_interview INTERVIEW_CATEGORY","settings_tax TAX_BASE","channel setCategory","test dummy","continent radiation","offshore markAsOffshore","sheet_custom list","channel move Up","settings_bank_access OFFSHORE_KEEP_AMOUNT","treaty approve","sheets_milcom MMRSheet","embed template guerilla","deposits shift","admin bot update_commands","stats_war warattacksbyday","admin sync syncMetrics","stats_tier mmrTierGraph","unregister","deposits shiftFlow","settings_artificial_intelligence GPT_USAGE_LIMITS","city revenue","web","admin sync2 active_conflicts","report search","war sheet validate","settings_orbis_alerts BAN_ALERT_CHANNEL","war room list","nation set taxinternalAuto","alliance stats metricsByTurn","spy find intel","treaty send","trade ranking","war room from_sheet","admin sync bounties","menu list","audit run","admin sync syncReferrals","announcement document","city optimalBuild","self create","newsletter channel add","conflict edit start","trade offer sell_list","sheet_template add alliance","settings_beige_alerts BEIGE_VIOLATION_MAIL","baseball baseballEarningsRanking","settings_audit REQUIRED_MMR","sheets_ia ActivitySheetFromId","alerts bank list","role mask","menu delete","selection_alias remove","alerts enemy optout","settings_bank_access addResourceChannel","alerts beige beigeAlert","nation history vm","war find unprotected","simulate fastBeige","self add","settings_bank_info GRANT_REQUEST_DECAY","offshore list all","war canIBeige","report comment add","war dnr","tax records","build delete","settings_war_alerts OFFENSIVE_WAR_CHANNEL","conflict sync wiki_page","settings_orbis_alerts ORBIS_OFFICER_MMR_CHANGE_ALERTS","bank deposit","report comment delete","settings_bank_access DEFAULT_OFFSHORE_ACCOUNT","settings_bank_info GRANT_REQUEST_NOTE","conflict alliance remove","sheets_ia daychange","alerts trade undercut","continent info","sheets_econ getIngameNationTransfers","settings_role AUTOROLE_ALLIANCES","report show","sheet_custom view","transfer warchest","chat dataset select","settings_bounty BOUNTY_ALERT_CHANNEL","settings_bank_access FORCE_RSS_CONVERSION","trade offer update","settings_bank_access MEMBER_CAN_ESCROW","project roi","settings_bank_access ALLOW_UNVERIFIED_BANKING","settings_bank_access BANKER_WITHDRAW_LIMIT_INTERVAL","settings_beige_alerts ENEMY_ALERT_FILTER","escrow view_sheet","settings_bank_access WITHDRAW_IGNORES_EXPIRE","deposits flows","war room purge","transfer self","help find_setting","newsletter subscribe","conflict purge featured","project sheet","admin sync treasures","chat conversion list","settings_war_alerts SHOW_ALLY_OFFENSIVE_WARS","admin sync offshore","grant_template create land","embed template spy_enemy","sheet_template add attacktype","sheet_template add militaryunit","sheet_template add bounty","sheet_template add project","sheet_template add resourcetype","sheet_template add treaty","me","sheet_template add treatytype","fun joke","sheet_template add nationcolor","sheet_template add building","sheet_template add treasure","sheet_template add audittype","trade offer buy","grant_template info","copyPasta","channel sort category_filter","embed template econ_gov","unit cost","conflict sync db_file","admin debug trade_id","sheet_custom add_tab","admin sync attacks","admin settings subscribe","settings_orbis_alerts REROLL_ALERT_CHANNEL","escrow set","admin debug msg_info","settings_tax addRequiredInternalTaxrate","trade offer delete","settings_bank_access ADD_RSS_CONVERSION_RATE","offshore accountSheet","settings_bank_access NON_AA_MEMBERS_CAN_BANK","settings_foreign_affairs TREATY_ALERTS","trade offer sell","menu description","credentials login","chat dataset list","settings_orbis_alerts ALLIANCE_EXODUS_TOP_X","alerts bounty opt_out","grant_template create city","settings_bank_info WITHDRAW_ALERT_CHANNEL","escrow withdraw","stats_war warStatusRankingByNation","admin sync syncBlockades","admin bot stop","settings_war_alerts LOST_WAR_CHANNEL","simulate casualties","build assign","deposits check","spy sheet convertHidude","settings_bank_access MEMBER_CAN_OFFSHORE","settings_audit MEMBER_AUDIT_ALERTS","settings_war_alerts WAR_PEACE_ALERTS","conflict edit casus_belli","announcement view","grant project","embed template member_econ","menu button add","chat conversion pause","nation list rebuy","channel open","admin debug nation_meta","stats_other allianceMetricAB","settings_bank_access GRANT_LIMIT_DELAY","alerts beige beigeAlertRequiredStatus","alliance stats rankingTime","menu button swap","sheet_template remove","sheet_template add taxdeposit","admin sync warrooms","sheet_custom auto","settings_bank_access ROUTE_ALLIANCE_BANK","sheet_template add user","grant request cancel","admin settings info_servers","sheet_template add city","interview iacat","settings_interview INTERVIEW_INFO_SPAM","alliance stats tier_by_coalition","war counter auto","embed create","embed template unblockade_requests","settings_bank_access RESOURCE_CONVERSION","settings_orbis_alerts ESCALATION_ALERTS","channel count","spy find target","settings_recruit RECRUIT_MESSAGE_OUTPUT","embed add raw","sheet_template add taxbracket","embed commands","sheet_template add guildsetting","sheet_template list","tax deposits","sheet_template add war","sheet_template add iattack","grant_template enable","announcement archive","settings_artificial_intelligence ENABLE_GITHUB_COPILOT","trade offer my_offers","channel sort sheet","chat providers list","coalition create","menu create","channel close inactive","help command","settings_audit DISABLED_MEMBER_AUDITS","war sheet warSheet","fun stealborgscity","admin sync syncCities","help find_nation_placeholder","fun say","stats_other metric_compare_by_turn","trade volumebyday","bank records","stats_war attack_ranking","settings_default registerAlliance","admin sync2 city_refund","alliance stats merges","settings_role AUTONICK","embed template ia_gov","war room delete_for_enemies","chat conversion resume","war counter sheet","settings_orbis_alerts ORBIS_OFFICER_LEAVE_ALERTS","interview interviewMessage","conflict sync wiki_all","admin set_v2","deposits convert","conflict sync ctowned","city cost","admin queue file","grant_template create infra","war room sort","settings_role addConditionalRole","mail search","settings_audit MEMBER_LEAVE_ALERT_CHANNEL","grant consumption","admin sync2 config","role hasRole","settings_war_alerts WON_WAR_CHANNEL","transfer raws","spy sheet convertdtc","conflict edit category","help argument","baseball baseballRanking","alerts audit optout","conflict sync recalculate_tables","role autoassign","settings_default HIDE_LEGACY_NOTICE","admin queue custom_messages","spy sheet free_ops","admin sync bans","war counter nation","tax listBracketAuto","settings_beige_alerts BEIGE_ALERT_CHANNEL","nation list inactive","spy sheet generate","offshore send","alliance cost","admin list guild_owners","land cost","mail sheet","embed title","register","war room create","admin bot remove_deleted_offshores","sheet_template add nation","channel channelMembers","settings_artificial_intelligence register_openai_key","settings_audit WARCHEST_PER_CITY","alliance edit","settings_recruit add_timed_message","stats_war warCost","interview listMentors","research sync","report loan purge","chat conversion delete","settings_role AUTOROLE_MEMBER_APPS","fun reset_borgs_cities","trade margin","sheets_econ getIngameTransactions","sheets_ia declares_date","embed template war_winning","nation set taxinternal","conflict delete","stats_war counterStats","settings_beige_alerts removeBeigeReasons","admin sync trade","nation list bans","menu edit","report unban","conflict edit wiki","interview mentee","build get","report comment purge","settings_bank_access MEMBER_CAN_WITHDRAW_WARTIME","grant build","project slots","channel delete inaccessible","chat dataset delete","settings_foreign_affairs FA_SERVER","report add","settings_interview ARCHIVE_CATEGORY","settings_bank_info GRANT_REQUEST_CHANNEL","interview iachannels","grant unit","mail send","settings_default unregisterAlliance","admin sync cities","report remove","role removeAssignableRole","deposits reset","alliance sheets stockpileSheet","stats_other recruitmentRankings","war find treasure","settings_bank_info DISPLAY_ITEMIZED_DEPOSITS","alliance stats coalition_metric_by_turn","stats_war warRanking","sheets_econ IngameNationTransfersByReceiver","trade findTrader","settings_reward REWARD_MENTOR","bank limits setTransferLimit","alerts beige setBeigeAlertScoreLeeway","embed add command","nation set rank","stats_war by_day warcost_versus","conflict edit rename","trade moneyTrades","conflict featured remove_rule","grant city","sheets_milcom combatantSheet","treaty list","alerts beige beigeReminders","tax info","stats_tier metric_by_group","settings_audit MAIL_DEMOTED_MEMBERS","alerts trade list","announcement watermark","settings_orbis_alerts ACTIVITY_ALERTS","report ban","interview sortInterviews","settings_foreign_affairs DO_NOT_RAID_TOP_X","alliance stats militarization_time","admin sync syncinterviews","settings_war_alerts HIDE_APPLICANT_WARS","channel delete inactive","settings_bank_info DEPOSIT_ALERT_CHANNEL","settings_war_alerts ENEMY_MMR_CHANGE_ALERTS","sheet_template remove_column","channel members","settings_war_room ENABLE_WAR_ROOMS","settings_beige_alerts ENEMY_ALERT_CHANNEL","sheet_template add continent","war room delete_planning","sheet_template add nationoralliance","stats_tier strengthTierGraph","fun borgmas","trade price","mail read","settings_war_alerts MENTION_MILCOM_FILTER","embed rename button","role unregister","baseball baseBallChallengeInflow","color revenue","sheet_template add ban","role optOut","sheet_template add guild","transfer internal from_offshore_account","sheet_template add nationlist","transfer bulk","stats_tier cityTierGraph","admin command multiple","newsletter list","interview mentor","coalition remove","grant_template create warchest","deposits add","settings_role AUTOROLE_ALLY_ROLES","channel sort category_rule_sheet","transfer internal from_nation_account","build listall","settings_role addAssignableRole","admin list authenticated","channel create","settings_bank_info ADDBALANCE_ALERT_CHANNEL","conflict sync recalculate_graphs","interview create","menu context","settings_orbis_alerts AA_GROUND_UNIT_ALERTS","credentials logout","grant land","alerts login","war sheet blitzSheet","nation beigeTurns","alliance stats attribute_ranking","trade profit","nation revenueSheet","alliance stats ranking","conflict sync alliance_names","settings_bank_info DISPLAY_CONDENSED_DEPOSITS","trade priceByDay","stats_tier attributeTierGraph","admin sync2 export_wiki","admin command sudo","mail web_login","grant_template delete","build matches_sheet","coalition delete","newsletter unsubscribe","selection_alias add alliance","settings_beige_alerts ENEMY_BEIGED_ALERT","admin sync2 city_avg","grant request approve","admin list expired_offshores","nation history gray_streak","admin sync2 mail","trade compareStockpileValueByDay","sheet_custom remove_tab","nation loot","alerts bank min_value","offshore find for_coalition","settings_interview INTERVIEW_PENDING_ALERTS","admin debug guild","alerts beige beigeAlertOptOut","offshore list prolific","mail reply","menu title","trade volume","settings_sheet set","settings_war_alerts WAR_ALERT_FOR_OFFSHORES","channel memberChannels","nation set taxbracket","settings_orbis_alerts ORBIS_LEADER_CHANGE_ALERT","stats_war by_day warcost_global","sheet_template rename","grant_template send","war room pin","report loan sheet","admin command format_for_nations","settings_beige_alerts setBeigeReasons","settings_war_room WAR_SERVER","sheet_custom update","newsletter channel remove","stats_other radiationByTurn","newsletter auto","settings_tax MEMBER_CAN_SET_BRACKET","menu info","bank stats weeklyInterest","deposits interest","stats_other allianceNationsSheet","settings_war_room WAR_ROOM_LOG","interview incentiveRanking","alliance listAllianceMembers"]},ProviderType:{options:["PROCESS","OPENAI","COPILOT"]},DepositType:{options:["DEPOSIT","TAX","LOAN","GRANT","IGNORE","TRADE","CITY","PROJECT","INFRA","LAND","BUILD","WARCHEST","RESEARCH","RAWS","EXPIRE","DECAY","AMOUNT","INCENTIVE","GUILD","ALLIANCE","NATION","ACCOUNT","CASH","RSS","BANKER"]},Member:{query:!0,guild:!0},AGrantTemplate:{query:!0,guild:!0},NationLootType:{options:["ESPIONAGE","WAR_LOSS","ESTIMATE"]},SheetTemplate:{query:!0,guild:!0},SelectionAlias:{query:!0,guild:!0},Conflict:{query:!0},GPTProvider:{query:!0,guild:!0},GuildDB:{query:!0,user:!0},DomesticPolicy:{options:["MANIFEST_DESTINY","OPEN_MARKETS","TECHNOLOGICAL_ADVANCEMENT","IMPERIALISM","URBANIZATION","RAPID_EXPANSION"]},Operation:{options:["INTEL","NUKE","MISSILE","SHIPS","AIRCRAFT","TANKS","SPIES","SOLDIER"]},Report:{query:!0},AllianceMetricMode:{options:["TOTAL","PER_NATION","PER_CITY"]},User:{query:!0},Continent:{options:["NORTH_AMERICA","SOUTH_AMERICA","EUROPE","AFRICA","ASIA","AUSTRALIA","ANTARCTICA"]},OrbisMetric:{options:["TOTAL_NATIONS","NATIONS_CREATED","ACTIVE_1_DAY","ACTIVE_2_DAYS","ACTIVE_3_DAYS","ACTIVE_1_WEEK","ACTIVE_1_MONTH","MONEY_ON_NATIONS","FOOD_ON_NATIONS","STEEL_ON_NATIONS","ALUMINUM_ON_NATIONS","GASOLINE_ON_NATIONS","MUNITIONS_ON_NATIONS","URANIUM_ON_NATIONS","COAL_ON_NATIONS","OIL_ON_NATIONS","IRON_ON_NATIONS","BAUXITE_ON_NATIONS","LEAD_ON_NATIONS","MONEY","FOOD","STEEL","ALUMINUM","GASOLINE","MUNITIONS","URANIUM","COAL","OIL","IRON","BAUXITE","LEAD"]},NationOrAllianceOrGuild:"DBNation",BeigeAlertMode:{options:["NO_ALERTS","INACTIVE_NONES","NONES","NONES_INACTIVE_APPS","ANYONE_NOT_BLACKLISTED"]},MathOperation:{options:["LESSER_EQUAL","GREATER_EQUAL","NOT_EQUAL","EQUAL","GREATER","LESSER"]},ConflictCategory:{options:["GENERATED","UNVERIFIED","MICRO","NON_MICRO","GREAT","MAJOR","SKIRMISH"]},TextChannel:{query:!0,guild:!0},Permission:{options:["MANAGE_CHANNEL","MANAGE_SERVER","VIEW_AUDIT_LOGS","VIEW_CHANNEL","VIEW_GUILD_INSIGHTS","MANAGE_ROLES","MANAGE_PERMISSIONS","MANAGE_WEBHOOKS","MANAGE_GUILD_EXPRESSIONS","MANAGE_EVENTS","USE_EMBEDDED_ACTIVITIES","VIEW_CREATOR_MONETIZATION_ANALYTICS","CREATE_GUILD_EXPRESSIONS","CREATE_SCHEDULED_EVENTS","CREATE_INSTANT_INVITE","KICK_MEMBERS","BAN_MEMBERS","NICKNAME_CHANGE","NICKNAME_MANAGE","MODERATE_MEMBERS","MESSAGE_ADD_REACTION","MESSAGE_SEND","MESSAGE_TTS","MESSAGE_MANAGE","MESSAGE_EMBED_LINKS","MESSAGE_ATTACH_FILES","MESSAGE_HISTORY","MESSAGE_MENTION_EVERYONE","MESSAGE_EXT_EMOJI","USE_APPLICATION_COMMANDS","MESSAGE_EXT_STICKER","MESSAGE_ATTACH_VOICE_MESSAGE","MESSAGE_SEND_POLLS","USE_EXTERNAL_APPLICATIONS","MANAGE_THREADS","CREATE_PUBLIC_THREADS","CREATE_PRIVATE_THREADS","MESSAGE_SEND_IN_THREADS","PRIORITY_SPEAKER","VOICE_STREAM","VOICE_CONNECT","VOICE_SPEAK","VOICE_MUTE_OTHERS","VOICE_DEAF_OTHERS","VOICE_MOVE_OTHERS","VOICE_USE_VAD","VOICE_USE_SOUNDBOARD","VOICE_USE_EXTERNAL_SOUNDS","VOICE_SET_STATUS","REQUEST_TO_SPEAK","ADMINISTRATOR","UNKNOWN"]},Safety:{options:["QUICK","NORMAL","COVERT"]},DBBan:{query:!0},FlowType:{options:["INTERNAL","WITHDRAWAL","DEPOSIT"]},GuildOrAlliance:{composite:["GuildDB","DBAlliance"]},AutoRoleOption:{options:["FALSE","ALL","ALLIES"]},CustomSheet:{query:!0,guild:!0},EmbeddingType:{options:["Command","Configuration","Argument","Nation_Statistic","Formula","User_Input","Game_Wiki_Page"]},WarPolicy:{options:["ATTRITION","TURTLE","BLITZKRIEG","FORTRESS","MONEYBAGS","PIRATE","TACTICIAN","GUARDIAN","COVERT","ARCANE"]},NationMeta:{options:["INTERVIEW_DEPOSITS","INTERVIEW_SPYOP","INTERVIEW_LOOT","INTERVIEW_SPIES","UPDATE_SPIES","UPDATE_UUID","UPDATE_GRANT","INTERVIEW_OPTIMALBUILD","INTERVIEW_RAID_BEIGE","INTERVIEW_COUNTER","INTERVIEW_WAR_ROOM","INTERVIEW_CHECKUP","DEPRECATED_LAST_BANK_UPDATE","INTERVIEW_INDEX","LAST_PROJECT_GRANT","LAST_WARCHEST","UPDATE_GRANT_TURN","TEST_SCORE","SPY_OPS_DAY","SPY_OPS_AMOUNT_DAY","SPY_OPS_AMOUNT_TOTAL","LAST_CITY_GRANT","DISCORD_APPLICANT","COUNTER_CARD","INTERVIEW_ROI","BORGMAS","CHECKUPS_PASSED","RECRUIT_INVITE_SENT","RECRUIT_MAIL_SENT","INTERVIEW_TRANSFER_SELF","INTERVIEW_INTEL","TAX_RATE","UPDATE_GRANT_CITY","UPDATE_GRANT_PROJECT","BANKER_WITHDRAW_LIMIT","REFERRER","INCENTIVE_REFERRER","INCENTIVE_INTERVIEWER","IA_CATEGORY_MAX_STAGE","INCENTIVE_MENTOR","CURRENT_MENTOR","BLOCKADED","ESCROWED","BEIGE_ALERT_MODE","BEIGE_ALERT_REQUIRED_STATUS","BEIGE_ALERT_REQUIRED_LOOT","BEIGE_ALERT_SCORE_LEEWAY","ALLOWANCE_UP_TO","ALLOWANCE_DISBURSE_DAYS","LAST_CHECKED_AUDITS","UNBLOCKADE_REASON","LAST_LOGIN_DAY","LAST_LOGIN_COUNT","RECRUIT_AD_COUNT","RECRUIT_GOV_MESSAGE","LOGIN_NOTIFY","GPT_PROVIDER","GPT_OPTIONS","REPORT_BAN","GPT_MODERATED","GPT_SOURCES","BANK_TRANSFER_REQUIRED_AMOUNT","LAST_SENT_CREATION","LAST_SENT_LEAVE","LAST_SENT_ACTIVE"]},BeigeAlertRequiredStatus:{options:["ONLINE","ONLINE_AWAY","ONLINE_AWAY_DND","ANY"]},AutoAuditType:{options:["GRAY","HIGH_INFRA","UNPROFITABLE_FARMS","UNEVEN_INFRA","WIND_POWER","WAR_TYPE_NOT_RAID","WAR_POLICY","INACTIVE","WRONG_COLOR"]},AutoNickOption:{options:["FALSE","LEADER","NATION","DISCORD","NICKNAME"]},RssConvertMode:{options:["ALL","NEGATIVE"]},Parser:{options:["long[Timestamp]","long","long[Timediff]","Long[Timestamp]","Long","Long[Timediff]","Color","Color[Autocomplete]","Parser","Parser[Autocomplete]","List<String>[TextArea]","boolean","Boolean","int","Integer","double","Double","UUID","Font","Font[Autocomplete]","String","String[TextArea]","String[MenuLabel]","String[GuildCoalition]","String[Autoparse]","String[Autocomplete,MenuLabel]","String[Autocomplete,GuildCoalition]","Set<Integer>","Number","Set<Member>","Permission","Permission[Autocomplete]","Message","JSONObject","Member","CommandCallable","CommandCallable[Autocomplete]","MessageChannel","User","Category","Category[Autocomplete]","Set<Category>","CommandBehavior","Guild","Guild[Autocomplete]","AppMenu","AppMenu[Autocomplete]","OnlineStatus","OnlineStatus[Autocomplete]","TextChannel","Role","Role[Autocomplete]","Set<Role>","MenuState","MenuState[Autocomplete]","Map<Role,Set<Role>>","ImageType","Set<Roles>","ICategorizableChannel","MessageTrigger","DBAlliancePosition","DBAlliancePosition[Autocomplete]","Map<ResourceType,Double>","Map<ResourceType,Double>[NationDepositLimit]","Map<ResourceType,Double>[AllianceDepositLimit]","GuildSetting","GuildSetting[Autocomplete]","WarStatus","MathOperation","MilitaryUnit","ResourceType","Map<MilitaryUnit,Long>","Set<AllianceMetric>","Set<AllianceMetric>[Autocomplete]","Rank","Set<DBAlliance>","Set<DBNation>","DBWar","DBLoan[GuildLoan]","DBLoan[Autocomplete,GuildLoan]","TaxBracket","TaxBracket[Autocomplete]","GuildDB","DBNation","DBNation[Autocomplete]","NationMeta","NationMeta[Autocomplete]","Continent","Set<Project>","Map<Research,Integer>","DBAlliance","DBAlliance[Autocomplete]","CityBuild","Treaty","Project","Project[Autocomplete]","DBTreasure","WarPolicy","DBBan","DepositType","Building","Predicate<IAttack>","Set<NationOrAllianceOrGuildOrTaxid>","NationOrAllianceOrGuildOrTaxid","NationOrAllianceOrGuildOrTaxid[Autocomplete]","Set<NationOrAlliance>","NationOrAlliance","NationOrAlliance[Autocomplete]","Predicate<DBWar>","GrantRequest","GrantRequest[Autocomplete,ReportPerms]","Conflict","Roles","Roles[Autocomplete]","AlliancePermission","AlliancePermission[Autocomplete]","DBCity","Safety","NationList","Set<Operation>","Coalition","Coalition[Autocomplete]","BeigeAlertRequiredStatus","Set<Building>","BeigeAlertMode","DepositTypeInfo","DepositTypeInfo[Autocomplete]","EscrowMode","NationOrAllianceOrGuild","NationOrAllianceOrGuild[Autocomplete]","Set<NationOrAllianceOrGuild>","Set<WarType>","Set<ResourceType>","Set<ResourceType>[Autocomplete]","Set<AttackType>","Set<SuccessType>","Set<SuccessType>[Autocomplete]","Set<WarStatus>","MMRInt","MMRMatcher","MMRMatcher[Autocomplete]","CityRanges","CityRanges[Autocomplete]","Status","Status[Autocomplete]","Set<Conflict>","Set<Conflict>[Autocomplete]","MMRDouble","MMRDouble[Autocomplete]","AuditType","Research","Research[Autocomplete]","Report[ReportPerms]","Report","Report[Autocomplete,ReportPerms]","Report[Autocomplete]","Map<NationFilter,TaxRate>","Map<NationFilter,Integer>","Set<AuditType>","AutoRoleOption","WarType","AttackType","AutoNickOption","TaxRate","Set<MilitaryUnit>","AllianceMetric","AllianceMetric[Autocomplete]","Newsletter[ReportPerms]","Newsletter","Newsletter[Autocomplete]","WarCostStat","WarCostStat[Autocomplete]","WarCostMode","WarCostMode[Autocomplete]","RssConvertMode","RssConvertMode[Autocomplete]","AllianceMetricMode","WarCostByDayMode","WarCostByDayMode[Autocomplete]","ClearRolesEnum","ClearRolesEnum[Autocomplete]","TreatyType","NationLootType","MMRBuyMode","MMRBuyMode[Autocomplete]","FlowType","FlowType[Autocomplete]","ReportType","Set<MembershipChangeReason>","Set<AlliancePermission>","GuildSettingCategory","EnemyAlertChannelMode","MembershipChangeReason","Set<NationAttributeDouble>","Set<NationAttribute>","TemplateTypes","Map<NationFilter,Role>","Set<Status>","NationAttribute","Set<Research>","ICommand","ICommand[Autocomplete]","Map<CityRanges,Set<BeigeReason>>","NationColor","Set<AutoAuditType>","NationFilter","ParametricCallable[NationAttributeCallable]","ParametricCallable[Autocomplete,NationAttributeCallable]","Set<DepositType>","Set<Continent>","BeigeReason","GrowthAsset","NationAttributeDouble","NationAttributeDouble[Autocomplete]","Set<OrbisMetric>","ConflictCategory","AGrantTemplate","AGrantTemplate[Autocomplete]","Map<NationFilter,MMRMatcher>","SuccessType","Set<DomesticPolicy>","Set<DomesticPolicy>[Autocomplete]","GuildOrAlliance","GuildOrAlliance[Autocomplete]","Set<GrowthAsset>","Set<BeigeReason>","Map<String,String>","GPTProvider","GPTProvider[Autocomplete]","Set<EmbeddingSource>","Set<ProviderType>","Set<EmbeddingType>","EmbeddingSource","EmbeddingSource[Autocomplete]","ChatModel","Set<String>[WikiCategory]","Class[PlaceholderType]","Class[Autocomplete,PlaceholderType]","Class[Autocomplete]","SheetKey","SheetKey[Autocomplete]","List<Integer>","SpreadSheet","GoogleDoc","Set<SpreadSheet>","SheetTemplate","SheetTemplate[Autocomplete]","TransferSheet","SelectionAlias","SelectionAlias[Autocomplete]","CustomSheet","CustomSheet[Autocomplete]","Predicate<DBNation>","TypedFunction<DBNation,String>","TypedFunction<DBNation,Double>","Predicate<Conflict>","TypedFunction<Conflict,String>","TypedFunction<Conflict,Double>","Set<TaxDeposit>","Predicate<TaxDeposit>","TypedFunction<TaxDeposit,String>","TypedFunction<TaxDeposit,Double>","Predicate<AuditType>","TypedFunction<AuditType,String>","TypedFunction<AuditType,Double>","Predicate<ResourceType>","TypedFunction<ResourceType,String>","TypedFunction<ResourceType,Double>","Set<Transaction2>","Predicate<Transaction2>","TypedFunction<Transaction2,String>","TypedFunction<Transaction2,Double>","Predicate<MilitaryUnit>","TypedFunction<MilitaryUnit,String>","TypedFunction<MilitaryUnit,Double>","Set<DBCity>","Predicate<DBCity>","TypedFunction<DBCity,String>","TypedFunction<DBCity,Double>","Set<IAttack>","TypedFunction<IAttack,String>","TypedFunction<IAttack,Double>","Set<GuildSetting>","Set<GuildSetting>[Autocomplete]","Predicate<GuildSetting>","TypedFunction<GuildSetting,String>","TypedFunction<GuildSetting,Double>","Predicate<DBAlliance>","TypedFunction<DBAlliance,String>","TypedFunction<DBAlliance,Double>","Set<TextChannelWrapper>","Predicate<TextChannelWrapper>","TypedFunction<TextChannelWrapper,String>","TypedFunction<TextChannelWrapper,Double>","Set<DBTrade>","Predicate<DBTrade>","TypedFunction<DBTrade,String>","TypedFunction<DBTrade,Double>","Predicate<NationOrAlliance>","TypedFunction<NationOrAlliance,String>","TypedFunction<NationOrAlliance,Double>","Set<TaxBracket>","Predicate<TaxBracket>","TypedFunction<TaxBracket,String>","TypedFunction<TaxBracket,Double>","Set<NationColor>","Set<NationColor>[Autocomplete]","Predicate<NationColor>","TypedFunction<NationColor,String>","TypedFunction<NationColor,Double>","Predicate<Project>","TypedFunction<Project,String>","TypedFunction<Project,Double>","Set<GuildDB>","Set<GuildDB>[Autocomplete]","Predicate<GuildDB>","TypedFunction<GuildDB,String>","TypedFunction<GuildDB,Double>","Set<UserWrapper>","Predicate<UserWrapper>","TypedFunction<UserWrapper,String>","TypedFunction<UserWrapper,Double>","Set<NationList>","Predicate<NationList>","TypedFunction<NationList,String>","TypedFunction<NationList,Double>","Set<DBWar>","TypedFunction<DBWar,String>","TypedFunction<DBWar,Double>","Set<Treaty>","Predicate<Treaty>","TypedFunction<Treaty,String>","TypedFunction<Treaty,Double>","Predicate<AttackType>","TypedFunction<AttackType,String>","TypedFunction<AttackType,Double>","Predicate<Building>","TypedFunction<Building,String>","TypedFunction<Building,Double>","Set<TreatyType>","Set<TreatyType>[Autocomplete]","Predicate<TreatyType>","TypedFunction<TreatyType,String>","TypedFunction<TreatyType,Double>","Set<DBBan>","Predicate<DBBan>","TypedFunction<DBBan,String>","TypedFunction<DBBan,Double>","Set<DBTreasure>","Predicate<DBTreasure>","TypedFunction<DBTreasure,String>","TypedFunction<DBTreasure,Double>","Set<DBBounty>","Predicate<DBBounty>","TypedFunction<DBBounty,String>","TypedFunction<DBBounty,Double>","Predicate<Continent>","TypedFunction<Continent,String>","TypedFunction<Continent,Double>","AutoAuditType[Autocomplete]","PlaceholderType[Autocomplete]","ModelType[Autocomplete]"]},Coalition:{options:["DNR","DNR_MEMBER","CAN_RAID","FA_FIRST","CAN_RAID_INACTIVE","COUNTER","IGNORE_FA","ENEMIES","ALLIES","MASKEDALLIANCES","TRADE","OFFSHORE","OFFSHORING","TRACK_DEPOSITS","UNTRACKED","WHITELISTED","WHITELISTED_AUTO","RAIDPERMS","FROZEN_FUNDS","GROUND_ALERTS","MANAGE_CONFLICTS","EXTENSION"]},ReportType:{options:["MULTI","REROLL","FRAUD","BANK_DEFAULT","COUPING","THREATS_COERCION","LEAKING","DEFAMATION","SPAMMING","IMPERSONATING","PHISHING","BEHAVIOR_OOC"]},DBAlliancePosition:{query:!0,guild:!0},WarCostByDayMode:{options:["COST","LOOT","BUILDING","CONSUMPTION","MUNITIONS","GASOLINE","UNIT","NUKE","MISSILE","SHIP","AIRCRAFT","TANK","SOLDIER","INFRASTRUCTURE","GROUND","AIRSTRIKE_INFRA","AIRSTRIKE_SOLDIER","AIRSTRIKE_TANK","AIRSTRIKE_MONEY","AIRSTRIKE_SHIP","AIRSTRIKE_AIRCRAFT","AIRSTRIKE","NAVAL_SHIP","NAVAL_AIR","NAVAL_GROUND","NAVAL_INFRA","MISSILE_SUCCESS","NUKE_SUCCESS","IT_ATTACKS","NUM_ATTACKS"]},Font:{options:["Agency FB","Algerian","Ancient G Written","Arial","Arial Black","Arial Narrow","Arial Rounded MT Bold","Bahnschrift","Baskerville Old Face","Bauhaus 93","Bell MT","Berlin Sans FB","Berlin Sans FB Demi","Bernard MT Condensed","Blackadder ITC","Bodoni MT","Bodoni MT Black","Bodoni MT Condensed","Bodoni MT Poster Compressed","Book Antiqua","Bookman Old Style","Bookshelf Symbol 7","Bradley Hand ITC","Britannic Bold","Broadway","Brush Script MT","Calibri","Calibri Light","Californian FB","Calisto MT","Cambria","Cambria Math","Candara","Candara Light","Cascadia Code","Cascadia Mono","Castellar","Centaur","Century","Century Gothic","Century Schoolbook","Chiller","Colonna MT","Comic Sans MS","Consolas","Constantia","Cooper Black","Copperplate Gothic Bold","Copperplate Gothic Light","Corbel","Corbel Light","Courier New","Curlz MT","Dialog","DialogInput","Dubai","Dubai Light","Dubai Medium","Ebrima","Edwardian Script ITC","Elephant","Engravers MT","Eras Bold ITC","Eras Demi ITC","Eras Light ITC","Eras Medium ITC","Felix Titling","Footlight MT Light","Forte","Franklin Gothic Book","Franklin Gothic Demi","Franklin Gothic Demi Cond","Franklin Gothic Heavy","Franklin Gothic Medium","Franklin Gothic Medium Cond","Freestyle Script","French Script MT","Gabriola","Gadugi","Garamond","Georgia","Gigi","Gill Sans MT","Gill Sans MT Condensed","Gill Sans MT Ext Condensed Bold","Gill Sans Ultra Bold","Gill Sans Ultra Bold Condensed","Gloucester MT Extra Condensed","Goudy Old Style","Goudy Stout","Haettenschweiler","Harlow Solid Italic","Harrington","High Tower Text","Impact","Imprint MT Shadow","Informal Roman","Ink Free","Javanese Text","JetBrains Mono","Jokerman","Juice ITC","Kristen ITC","Kunstler Script","Leelawadee UI","Leelawadee UI Semilight","Lucida Bright","Lucida Calligraphy","Lucida Console","Lucida Fax","Lucida Handwriting","Lucida Sans","Lucida Sans Typewriter","Lucida Sans Unicode","Magneto","Maiandra GD","Malgun Gothic","Malgun Gothic Semilight","Marlett","Matura MT Script Capitals","Microsoft Himalaya","Microsoft JhengHei","Microsoft JhengHei Light","Microsoft JhengHei UI","Microsoft JhengHei UI Light","Microsoft New Tai Lue","Microsoft PhagsPa","Microsoft Sans Serif","Microsoft Tai Le","Microsoft YaHei","Microsoft YaHei Light","Microsoft YaHei UI","Microsoft YaHei UI Light","Microsoft Yi Baiti","MingLiU-ExtB","MingLiU_HKSCS-ExtB","MingLiU_MSCS-ExtB","Mistral","Modern No. 20","Mongolian Baiti","Monospaced","Monotype Corsiva","MS Gothic","MS Outlook","MS PGothic","MS Reference Sans Serif","MS Reference Specialty","MS UI Gothic","MT Extra","MV Boli","Myanmar Text","Niagara Engraved","Niagara Solid","Nirmala Text","Nirmala Text Semilight","Nirmala UI","Nirmala UI Semilight","NSimSun","OCR A Extended","Old English Text MT","Onyx","Palace Script MT","Palatino Linotype","Papyrus","Parchment","Perpetua","Perpetua Titling MT","Playbill","PMingLiU-ExtB","Poor Richard","Pristina","Rage Italic","Ravie","Rockwell","Rockwell Condensed","Rockwell Extra Bold","Sans Serif Collection","SansSerif","Script MT Bold","Segoe Fluent Icons","Segoe MDL2 Assets","Segoe Print","Segoe Script","Segoe UI","Segoe UI Black","Segoe UI Emoji","Segoe UI Historic","Segoe UI Light","Segoe UI Semibold","Segoe UI Semilight","Segoe UI Symbol","Segoe UI Variable","Serif","Showcard Gothic","SimSun","SimSun-ExtB","SimSun-ExtG","Sitka Text","Snap ITC","Stargate","Stargate Atlantis Glyphs","Stencil","Sylfaen","Symbol","Tahoma","Tempus Sans ITC","Times New Roman","Trebuchet MS","Tw Cen MT","Tw Cen MT Condensed","Tw Cen MT Condensed Extra Bold","Verdana","Viner Hand ITC","Vivaldi","Vladimir Script","Webdings","Wide Latin","Wingdings","Wingdings 2","Wingdings 3","Yu Gothic","Yu Gothic Light","Yu Gothic Medium","Yu Gothic UI","Yu Gothic UI Light","Yu Gothic UI Semibold","Yu Gothic UI Semilight"]},NationOrAllianceOrGuildOrTaxid:"DBNation",MenuState:{options:["NONE","REORDER","REMOVE_BUTTON","RENAME_BUTTON","ADD_BUTTON"]},SheetKey:{options:["FA_CONTACT_SHEET","TRANSFER_SHEET","BANK_TRANSACTION_SHEET","NOTE_SHEET","IA_SHEET","WAR_BUILDUP_SHEET","GRANT_SHEET","COALITION_SHEET","NATION_SHEET","DESERTER_SHEET","MAIL_RESPONSES_SHEET","ALLIANCES_SHEET","ROI_SHEET","TAX_SHEET","TAX_RECORD_SHEET","TAX_GRAPH_SHEET","WAR_SHEET","ACTIVE_COMBATANT_SHEET","COUNTER_SHEET","MMR_SHEET","SPYOP_SHEET","TAX_BRACKET_SHEET","STOCKPILE_SHEET","WAR_COST_SHEET","CURRENT_LOOT_SHEET","WAR_COST_BY_ALLIANCE_SHEET","WAR_COST_BY_RESOURCE_SHEET","ACTIVITY_SHEET","CITY_GRAPH_SHEET","WAR_COST_BY_CITY_SHEET","MILITARY_GRAPH_SHEET","REVENUE_SHEET","PROJECT_SHEET","INTERVIEW_SHEET","NATION_META_SHEET","TRADE_PROFIT_SHEET","TRADE_VOLUME_SHEET","MMR_BY_SCORE_SHEET","WARCHEST_SHEET","ENEMY_SHEET","PRIORITY_ENEMY_SHEET","ALLY_SHEET","UNDERUTILIZED_ALLY_SHEET","DEPOSIT_SHEET","ANSWER_SHEET","ESCROW_SHEET","REPORTS_SHEET","LOANS_SHEET","RENAME_CHANNELS","OFFSHORE_DEPOSITS","NEWSLETTER","CONTINENT_SHEET","RAID_SHEET","ATTACK_BREAKDOWN_SHEET","MERGES_SHEET","MILITARY_RANKING","FORUM_PROFILES","INACTIVITY_STREAK","SETTINGS_SERVERS","PURCHASE_BULK","ACTIVITY_SHEET_DAY","ACTIVITY_SHEET_TURN","SPY_FREE","DEPARTURES","VM_HISTORY","MULTI_BULK","ALLIANCE_METRIC_TURN","MILITARIZATION_TIME","ALLIANCE_METRIC_AB","RADIATION_BY_TURN","ALLIANCE_METRICS_TURN","METRIC_BY_GROUP","ALLIANCE_METRIC_DAY","STRENGTH_TIER","SPY_TIER","SCORE_TIER","CITY_TIER","ORBIS_STAT_BY_DAY","WAR_COST_DAY","WAR_COST_RANKING_DAY","STOCKPILE_VALUE_DAY","TRADE_PRICE_DAY","TRADE_MARGIN_DAY","TRADE_TOTAL_DAY","TRADE_VOLUME_DAY","NTH_LOOT_SCORE_RANGE","RESEARCH_SHEET","RESEARCH_CITY","EXPIRE_RECORD_SHEET","BUILD_SHEET"]}}};var Ce=Object.defineProperty,Me=(e,t,a)=>((e,t,a)=>t in e?Ce(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a)(e,"symbol"!=typeof t?t+"":t,a);class Le{constructor(e,t){Me(this,"name"),Me(this,"arg"),Me(this,"breakdown",null),this.name=e,this.arg=t}clone(){const e=Object.assign(Object.create(Object.getPrototypeOf(this.arg)),this.arg);return new Le(this.name,e)}getKeyData(){return Xe.data.keys[this.arg.type]??{desc:"",examples:null}}getTypeDesc(){return this.getKeyData().desc}getExamples(){return this.getKeyData().examples||[]}getOptionData(){const e=this.getTypeBreakdown();let t=null,a=!1;return"Set"!==e.element&&"TypedFunction"!==e.element&&"Predicate"!==e.element||null===e.child?t=e.getOptionData():(t=e.child[0].getOptionData(),a=!0),null!=t?new ke(Xe,t,a):new ke(Xe,{options:null,query:!1,completions:!1,guild:!1,nation:!1,user:!1},!1)}getTypeBreakdown(){return null!=this.breakdown?this.breakdown:this.breakdown=Be(Xe,this.arg.type)}}class ke{constructor(e,t,a){Me(this,"options"),Me(this,"query"),Me(this,"completions"),Me(this,"guild"),Me(this,"nation"),Me(this,"user"),Me(this,"multi"),Me(this,"map"),Me(this,"composite"),this.map=e,this.options=t.options||void 0,this.query=t.query||!1,this.completions=t.completions||!1,this.guild=t.guild||!1,this.nation=t.nation||!1,this.user=t.user||!1,this.multi=a,this.composite=t.composite||[]}}function Be(e,t){let a=null;if(t.endsWith("]")){const e=t.indexOf("[");a=t.substring(e+1,t.length-1),t=t.substring(0,e)}if(t.endsWith(">")){const n=t.indexOf("<"),o=Se(t.substring(n+1,t.length-1),","),i=t.substring(0,n).trim(),s=o.map((t=>Be(e,t.trim())));return new Ye(e,i,a,s)}return new Ye(e,t,a,null)}class xe{constructor(e,t){Me(this,"command"),Me(this,"name"),Me(this,"path"),Me(this,"arguments",null),Me(this,"charFreq",null),Me(this,"descWordFreq",null),Me(this,"descShort",null),this.command=t,this.name=e[e.length-1],this.path=e}hasRequiredArgument(){if(this.command.arguments)for(const e of Object.values(this.command.arguments))if(!0!==e.optional)return!0;return!1}getDescShort(){var e;return null==this.descShort&&(this.descShort=(null==(e=this.command.desc)?void 0:e.split("\n")[0])??""),this.descShort}getCharFrequency(){return null==this.charFreq&&(this.charFreq=we(this.name)),this.charFreq}getWordFrequency(){if(null==this.descWordFreq){this.descWordFreq=new Set,this.command.desc&&this.command.desc.split(" ").forEach((e=>{this.descWordFreq.add(e.toLowerCase())}));for(const e of this.getArguments()){for(const t of e.getTypeBreakdown().getAllChildren())this.descWordFreq.add(t.toLowerCase());e.arg.desc&&e.arg.desc.split(/[\s_]+/).forEach((e=>{this.descWordFreq.add(e.toLowerCase())})),this.descWordFreq.add(e.name.toLowerCase())}}return this.descWordFreq}getFullText(){return`${this.name} ${this.command.desc??""}`}getArguments(){return null==this.arguments&&(this.command.arguments?this.arguments=Object.entries(this.command.arguments).map((([e,t])=>new Le(e,t))):this.arguments=[]),this.arguments}}class Ge extends xe{constructor(e,t){super(e,t),Me(this,"path"),Me(this,"data"),this.path=e,this.data=t}fullPath(){return this.path.join(" ")}}class Pe extends xe{constructor(e,t,a){super(t,a),Me(this,"type"),Me(this,"path"),Me(this,"data"),this.path=t,this.data=a,this.type=e}}const Ue=["get","is","can","has"];class We{constructor(e){Me(this,"name"),Me(this,"data"),Me(this,"create"),Me(this,"ph_cache",new Map),this.name=e,this.data=Oe.placeholders[this.name]}get(e){const t=e.join(" "),a=this.ph_cache.get(t);if(a)return a;let n=this.data.commands;const o=[...e];for(;o.length>0;)n=n[o[0]],o.shift();const i=n,s=new Pe(this.name,e,i);return this.ph_cache.set(t,s),s}getCommands(){return this.getPlaceholderPaths().map((e=>this.get(e)))}getPlaceholderPaths(){const e=[],t=(a,n)=>{Object.keys(a).forEach((o=>{const i=a[o],s=[...n,o];He(i)?e.push(s):"object"==typeof i&&null!==i&&t(i,s)}))};return t(this.data.commands,[]),e}searchPlaceholders(e){const t=this.data.commands,a={},n={},o=e.toLowerCase();for(const[i,s]of Object.entries(t))if(i===o)n[i]=s;else if(i.startsWith(o))a[i]=s;else for(const e of Ue){const t=e+o;i===t?n[i]=s:i.startsWith(t)&&(a[i]=s)}return{completeMatch:n,startsWith:a}}getCommandsData(){return this.data.commands}getCreate(){if(!this.create){const e=this.data.create;e&&(this.create=new xe([this.name],e))}return this.create}array(){return new Ve(this.name)}aliased(){return new je(this.name)}}class je{constructor(e){Me(this,"type"),Me(this,"placeholders",[]),Me(this,"indexes",new Map),Me(this,"indexToAlias",new Map),this.type=e}addRaw(e,t){return this.indexes.set(t,this.placeholders.length),this.indexToAlias.set(this.placeholders.length,t),this.placeholders.push(e),this}add({cmd:e,args:t,alias:a}){let n;return n=t?"{"+e+"("+Object.entries(t).map((([e,t])=>e+": "+t)).join(" ")+")}":"{"+e+"}",this.indexes.set(a,this.placeholders.length),this.indexToAlias.set(this.placeholders.length,a),this.placeholders.push(n),this}shorten(){for(let e=0;e<this.placeholders.length;e++){const t=this.placeholders[e],a=t.replace(/^\{(get|is|can|has)/,"{");this.placeholders[e]=a,this.indexes.delete(t),this.indexes.set(a,e),this.indexToAlias.set(e,a)}return this}array(){return[...this.placeholders]}aliasedArray(){return this.placeholders.map(((e,t)=>{const a=this.indexToAlias.get(t);return a?[e,a]:e}))}createRowAdapter(e){return new Proxy({},{get:(t,a,n)=>{if("string"==typeof a){const t=this.indexes.get(a);if(void 0!==t)return e[t]}}})}}class Ve{constructor(e){Me(this,"type"),Me(this,"data"),this.type=e,this.data=[]}addRaw(e,t){return t?this.data.push([e,t]):this.data.push(e),this}addMultipleRaw(e){return this.data.push(...e),this}add({cmd:e,args:t,alias:a}){let n;return n=t?"{"+e+"("+Object.entries(t).map((([e,t])=>e+": "+t)).join(" ")+")}":"{"+e+"}",a?this.data.push([n,a]):this.data.push(n),this}shorten(){for(let e=0;e<this.data.length;e++){const t=this.data[e];Array.isArray(t)||(this.data[e]=t.replace(/^\{(get|is|can|has)/,""))}return this}build2d(){return this.data}build(){return this.data.map((e=>Array.isArray(e)?e.join(";"):e))}}class qe{constructor(e,t){Me(this,"command"),Me(this,"name"),Me(this,"parent"),this.command={help:"",desc:"",groups:[],group_descs:[],annotations:{},arguments:{}},this.name=e,this.parent=t}help(e){return this.command.help=e,this}desc(e){return this.command.desc=e,this}argument(e,t=!1,a,n,o,i,s){const r={name:e,optional:t,flag:void 0,desc:a,group:void 0,type:n,def:o,choices:i,min:void 0,max:void 0,filter:s};return this.command.arguments||(this.command.arguments={}),this.command.arguments[e]=r,this}build(){return new xe(this.name,this.command)}}function He(e){return void 0!==e.help&&void 0!==e.desc}class Ye{constructor(e,t,a,n){Me(this,"map"),Me(this,"element"),Me(this,"annotations"),Me(this,"child"),this.map=e,this.element=t,this.annotations=a,this.child=n}getAllChildren(){return null==this.child?[this.element]:this.child.flatMap((e=>e.getAllChildren()))}getPlaceholderTypeName(){return null!=this.child&&1==this.child.length?this.child[0].getPlaceholderTypeName():ze(this.element)}toJSON(){return{element:this.element,annotations:this.annotations,child:this.child}}getPlaceholder(){return null==this.child||"Map"===this.element?null:this.map.data.placeholders[this.child[0].element]}getOptionData(){let e=null,t=!1;return"Set"!==this.element&&"TypedFunction"!==this.element&&"Predicate"!==this.element||null===this.child?e=Ke(this.element):(e=Ke(this.child[0].element),t=!0),e?new ke(this.map,e,t):new ke(this.map,{options:null,query:!1,completions:!1,guild:!1,nation:!1,user:!1},!1)}}function Ke(e){const t=Xe.data.options[e];return"string"==typeof t?Ke(t):t}function ze(e){return e.replace("DB","").replace("Wrapper","").replace(/[0-9]/g,"")}const Xe=new class{constructor(e){Me(this,"data"),Me(this,"cmd_paths",[]),Me(this,"cmd_cache",new Map),Me(this,"ph_cache",new Map),this.data=e}placeholders(e){const t=this.ph_cache.get(e);if(t)return t;const a=new We(e);return this.ph_cache.set(e,a),a}get(e){const t=e.join(" "),a=this.cmd_cache.get(t);if(a)return a;let n=this.data.commands;const o=[...e];for(;o.length>0;)n=n[o[0]],o.shift();const i=new Ge(e,n);return this.cmd_cache.set(t,i),i}getCommandPaths(){if(this.cmd_paths.length>0)return this.cmd_paths;const e=(t,a)=>{Object.keys(t).forEach((n=>{const o=t[n],i=[...a,n];He(o)?this.cmd_paths.push(i):e(o,i)}))};return e(this.data.commands,[]),this.cmd_paths}getCommands(){return this.getCommandPaths().map((e=>this.get(e)))}getPlaceholderTypes(e){const t=Object.keys(this.data.placeholders);return e?t.map((e=>ze(e))):t}builder(e){return new qe(e,this)}buildTest(){const e={};for(const a of this.getCommandPaths()){const t=this.get(a);t.command.arguments&&Object.values(t.command.arguments).forEach((t=>{e[t.type]||(e[t.type]=t)}))}const t=this.builder("test");return t.help("This is a test command").desc("This is a test description"),Object.entries(e).forEach((([e,a])=>{t.argument(e,null!=a.optional&&a.optional,a.desc??"",a.type,a.def,a.choices,a.filter)})),t.build()}}(Oe),Je={"":"DELETE_MESSAGE","~":"UNPRESS",_:"DELETE_BUTTONS",".":"DELETE_PRESSED_BUTTON","=":"EPHEMERAL"};function Qe(e){let t=e.charAt(0);"{"===t&&(t="");const a=JSON.parse(e.substring(t.length)),n=a[""],o=a;return delete o[""],{behavior:Je[t],command:n,args:o}}var Ze=Object.defineProperty,$e=(e,t,a)=>((e,t,a)=>t in e?Ze(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a)(e,"symbol"!=typeof t?t+"":t,a);class et{constructor({endpoint:e,query:t,update_ms:a,cache:n,data:o,error:i}){$e(this,"endpoint"),$e(this,"query"),$e(this,"update_ms"),$e(this,"cache"),$e(this,"data"),$e(this,"error"),this.endpoint=e,this.query=t,this.update_ms=a,this.cache=n,this.data=o??null,this.error=i??null}clone(){return new et({endpoint:this.endpoint,query:this.query,update_ms:this.update_ms,cache:this.cache,data:this.data,error:this.error})}}const tt=new Map,at=new WeakMap;function nt(e){let t=tt.get(e);return t||(t={},tt.set(e,t)),t}function ot({cache:e}){if(e)if("Cookie"===e.cache_type){const t=X.get(e.cookie_id);if(t)return JSON.parse(t)}else if("LocalStorage"===e.cache_type){const t=localStorage.getItem(e.cookie_id);if(t){const a=JSON.parse(t);if(!(a.expirationTime&&Date.now()>a.expirationTime))return a.data;localStorage.removeItem(e.cookie_id)}}else if("SessionStorage"===e.cache_type){const t=sessionStorage.getItem(e.cookie_id);if(t){const a=JSON.parse(t);if(!(a.expirationTime&&Date.now()>a.expirationTime))return a.data;sessionStorage.removeItem(e.cookie_id)}}else if("Memory"===e.cache_type){const t=nt(e.cookie_id);if(t){const e=at.get(t);if(e){if(!(e.expirationTime&&Date.now()>e.expirationTime))return e.data;at.delete(t)}}}return null}function it({cache:e,val:t}){const a=e.duration??5e3,n={data:t,expirationTime:Date.now()+1e3*a};if("Cookie"===e.cache_type)X.set(e.cookie_id,JSON.stringify(t),{expires:a});else if("LocalStorage"===e.cache_type)localStorage.setItem(e.cookie_id,JSON.stringify(n));else if("SessionStorage"===e.cache_type)sessionStorage.setItem(e.cookie_id,JSON.stringify(n));else if("Memory"===e.cache_type){const t=nt(e.cookie_id);at.set(t,n)}}const st=[];let rt=null;function lt(){for(let n=st.length-1;n>=0;n--){const e=st[n];if(e.cache){const t=ot({cache:e.cache});if(null!=t){const a=new et({endpoint:e.endpoint,query:e.query,update_ms:Date.now(),cache:e.cache,data:t,error:null});e.resolve(a),st.splice(n,1)}}}if(0===st.length)return void(rt=null);const e=st.splice(0,st.length);if(rt=null,0===e.length){const t=e[0];return void ct(t.endpoint,t.query,t.cache).then((e=>{const a=e;if(a.error){const e=new et({endpoint:t.endpoint,query:t.query,update_ms:Date.now(),cache:t.cache,data:null,error:a.error});return void t.resolve(e)}const n=new et({endpoint:t.endpoint,query:t.query,update_ms:Date.now(),cache:t.cache,data:e,error:null});t.resolve(n)})).catch((e=>{t.reject(e)}))}const t=e.map((e=>[e.endpoint,e.query])),a=new URLSearchParams({queries:JSON.stringify(t)}).toString();fetch("https://api.locutus.link/api/query",{method:"POST",headers:{"Content-Type":"application/msgpack"},body:a,credentials:"include"}).then((async e=>{if(e.ok){const t=await e.arrayBuffer(),a=new Uint8Array(t);return J.unpack(a)}throw new Error("Network response was not ok.")})).then((t=>{const a=t.results;if(Array.isArray(a))for(let n=0;n<a.length;n++){let t=a[n];const o=e[n];let i=!1===t.success?t.error??t.message??"Unknown Error (1)":null;if(t&&!i){const e=o.cache;e&&it({cache:e,val:t})}else t=null,i=i??"Unknown Error (2)";const s=e[n],r=new et({endpoint:s.endpoint,query:s.query,update_ms:Date.now(),cache:s.cache,data:t,error:i});s.resolve(r)}else e.forEach((e=>e.resolve(new et({endpoint:e.endpoint,query:e.query,update_ms:Date.now(),cache:e.cache,data:null,error:"Invalid response format\n"+(t.message??JSON.stringify(t)).replace("\\n","\n")}))))})).catch((t=>{e.forEach((e=>e.reject(t)))}))}function ct(e,t,a){const n=a&&a.cache_type&&a.cookie_id?ot({cache:a}):null;if(null!=n)return Promise.resolve(n);const o=`https://api.locutus.link/api/${e}`,i=new URLSearchParams;for(const[s,r]of Object.entries(t))if(Array.isArray(r))for(const e of r)i.append(s,e);else i.append(s,r);return fetch(o,{method:"POST",headers:{"Content-Type":"application/msgpack"},body:i.toString(),credentials:"include"}).then((e=>{if(!e.ok)throw new Error(`Failed to fetch data: ${e.status} ${e.statusText}`);return e.arrayBuffer()})).then((e=>J.unpack(new Uint8Array(e)))).catch((e=>{throw e instanceof Error?e:new Error("Fetch error: "+JSON.stringify(e))}))}function pt({endpoint:e,query:t,cache:a,batch_wait_ms:n}){return new Promise(((o,i)=>{st.push({endpoint:e,query:t,cache:a,resolve:o,reject:i});const s=n??50;rt&&clearTimeout(rt),rt=setTimeout(lt,s)}))}class dt{constructor(e,t,a,n,o,i,s,r,l){$e(this,"name"),$e(this,"url"),$e(this,"args"),$e(this,"cast"),$e(this,"cache_duration"),$e(this,"cache_type"),$e(this,"typeName"),$e(this,"desc"),$e(this,"argsLower"),$e(this,"isPost"),this.name=e,this.url=t,this.args={};for(const[c,p]of Object.entries(a))this.args[c]=new Le(c,p);this.argsLower=Object.fromEntries(Object.entries(a).map((([e,t])=>[e.toLowerCase(),e]))),this.cast=n,this.cache_duration=o??5e3,this.cache_type=i,this.typeName=s,this.desc=r,this.isPost=l}async call(e){return ct(this.url,e,void 0)}}function ut(e,t,a,n,o){return mt(e,t,a,n,o)}function mt(e,t,a,n,o){const i=a??e.isPost;return{queryKey:[e.name,t],queryFn:async e=>{const t=e.queryKey,a=await pt({endpoint:t[0],query:t[1],cache:void 0,batch_wait_ms:o??200});if(a.error)throw new gt(a.error);return a},refetchOnReconnect:!i,refetchOnWindowFocus:!i,refetchOnMount:!i,staleTime:n??e.cache_duration??5e3,retry:(e,t)=>!i&&!(t instanceof gt)&&e<3||e<1}}function yt(e,t,a,n){return{queryKey:[e.name,t],queryFn:async e=>{const t=e.queryKey;await new Promise((e=>setTimeout(e,2e3)));const a=await pt({endpoint:t[0],query:t[1],cache:void 0,batch_wait_ms:n??200});if(a.error)throw new gt(a.error);return a},refetchOnReconnect:!1,refetchOnWindowFocus:!1,refetchOnMount:!1,staleTime:a??e.cache_duration??5e3,retry:(e,t)=>!1}}class gt extends Error{constructor(e){super(e),this.name="BackendError"}}const ht={endpoint:new dt("warscostrankingbyday","warsCostRankingByDay",{type:{name:"type",type:"WarCostByDayMode"},mode:{name:"mode",type:"WarCostMode"},time_start:{name:"time_start",type:"long[Timestamp]"},time_end:{name:"time_end",optional:!0,type:"Long[Timestamp]"},coalition1:{name:"coalition1",optional:!0,flag:"c1",type:"Set<NationOrAlliance>"},coalition2:{name:"coalition2",optional:!0,flag:"c2",type:"Set<NationOrAlliance>"},coalition3:{name:"coalition3",optional:!0,flag:"c3",type:"Set<NationOrAlliance>"},coalition4:{name:"coalition4",optional:!0,flag:"c4",type:"Set<NationOrAlliance>"},coalition5:{name:"coalition5",optional:!0,flag:"c5",type:"Set<NationOrAlliance>"},coalition6:{name:"coalition6",optional:!0,flag:"c6",type:"Set<NationOrAlliance>"},coalition7:{name:"coalition7",optional:!0,flag:"c7",type:"Set<NationOrAlliance>"},coalition8:{name:"coalition8",optional:!0,flag:"c8",type:"Set<NationOrAlliance>"},coalition9:{name:"coalition9",optional:!0,flag:"c9",type:"Set<NationOrAlliance>"},coalition10:{name:"coalition10",optional:!0,flag:"c10",type:"Set<NationOrAlliance>"},running_total:{name:"running_total",optional:!0,flag:"o",type:"boolean"},allowedWarStatus:{name:"allowedWarStatus",optional:!0,flag:"s",type:"Set<WarStatus>"},allowedWarTypes:{name:"allowedWarTypes",optional:!0,flag:"w",type:"Set<WarType>"},allowedAttackTypes:{name:"allowedAttackTypes",optional:!0,flag:"a",type:"Set<AttackType>"},allowedVictoryTypes:{name:"allowedVictoryTypes",optional:!0,flag:"v",type:"Set<SuccessType>"}},(e=>e),2592e3,"None","WebGraph","Graph of cost by day of each coalitions wars vs everyone",!1)},ft={endpoint:new dt("globalstats","globalStats",{metrics:{name:"metrics",type:"Set<AllianceMetric>"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",type:"long[Timestamp]"},topX:{name:"topX",type:"int"}},(e=>e),2592e3,"None","CoalitionGraphs","",!1)},_t={endpoint:new dt("table","table",{type:{name:"type",type:"Class[PlaceholderType]"},selection_str:{name:"selection_str",type:"String"},columns:{name:"columns",type:"List<String>[TextArea]"}},(e=>e),2592e3,"None","WebTable","",!1)},At={endpoint:new dt("comparestats","compareStats",{metric:{name:"metric",type:"AllianceMetric"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",type:"long[Timestamp]"},coalition1:{name:"coalition1",type:"Set<DBAlliance>"},coalition2:{name:"coalition2",type:"Set<DBAlliance>"},coalition3:{name:"coalition3",optional:!0,type:"Set<DBAlliance>"},coalition4:{name:"coalition4",optional:!0,type:"Set<DBAlliance>"},coalition5:{name:"coalition5",optional:!0,type:"Set<DBAlliance>"},coalition6:{name:"coalition6",optional:!0,type:"Set<DBAlliance>"},coalition7:{name:"coalition7",optional:!0,type:"Set<DBAlliance>"},coalition8:{name:"coalition8",optional:!0,type:"Set<DBAlliance>"},coalition9:{name:"coalition9",optional:!0,type:"Set<DBAlliance>"},coalition10:{name:"coalition10",optional:!0,type:"Set<DBAlliance>"}},(e=>e),2592e3,"None","WebGraph","Compare the stats of up to 10 alliances/coalitions on a single time graph",!1)},bt={endpoint:new dt("alliancemetricab","allianceMetricAB",{metric:{name:"metric",type:"AllianceMetric"},coalition1:{name:"coalition1",type:"Set<DBAlliance>"},coalition2:{name:"coalition2",type:"Set<DBAlliance>"},start:{name:"start",desc:"Date to start from",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"}},(e=>e),2592e3,"None","WebGraph","Graph an alliance metric over time for two coalitions",!1)},Tt={endpoint:new dt("alliancemetricbyturn","allianceMetricByTurn",{metric:{name:"metric",type:"AllianceMetric"},coalition:{name:"coalition",type:"Set<DBAlliance>"},start:{name:"start",desc:"Date to start from",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"}},(e=>e),2592e3,"None","WebGraph","Graph the metric over time for a coalition",!1)},St={endpoint:new dt("nthbeigelootbyscorerange","NthBeigeLootByScoreRange",{nations:{name:"nations",optional:!0,type:"Set<DBNation>"},n:{name:"n",optional:!0,type:"int",def:"5"},snapshotDate:{name:"snapshotDate",optional:!0,type:"Long[Timestamp]"}},(e=>e),2592e3,"None","WebGraph","Get nth loot beige graph by score range",!1)},Et={endpoint:new dt("alliancesdatabyday","AlliancesDataByDay",{metric:{name:"metric",type:"TypedFunction<DBNation,Double>"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",type:"long[Timestamp]"},mode:{name:"mode",type:"AllianceMetricMode"},alliances:{name:"alliances",optional:!0,desc:"The alliances to include. Defaults to top 15",type:"Set<DBAlliance>"},filter:{name:"filter",optional:!0,type:"Predicate<DBNation>"},includeApps:{name:"includeApps",optional:!0,flag:"a",type:"boolean"}},(e=>e),2592e3,"None","WebGraph","Get alliance attributes by day\nIf your metric does not relate to cities, set `skipCityData` to true to speed up the process.",!1)},Nt={endpoint:new dt("mark_all_read","mark_all_read",{},(e=>e),2592e3,"None","WebSuccess","",!0)},It={endpoint:new dt("warcostsbyday","warCostsByDay",{coalition1:{name:"coalition1",type:"Set<NationOrAlliance>"},coalition2:{name:"coalition2",type:"Set<NationOrAlliance>"},type:{name:"type",type:"WarCostByDayMode"},time_start:{name:"time_start",type:"long[Timestamp]"},time_end:{name:"time_end",optional:!0,type:"Long[Timestamp]"},running_total:{name:"running_total",optional:!0,flag:"o",type:"boolean"},allowedWarStatus:{name:"allowedWarStatus",optional:!0,flag:"s",type:"Set<WarStatus>"},allowedWarTypes:{name:"allowedWarTypes",optional:!0,flag:"w",type:"Set<WarType>"},allowedAttackTypes:{name:"allowedAttackTypes",optional:!0,flag:"a",type:"Set<AttackType>"},allowedVictoryTypes:{name:"allowedVictoryTypes",optional:!0,flag:"v",type:"Set<SuccessType>"}},(e=>e),2592e3,"None","WebGraph","Get a line graph by day of the war stats between two coalitions",!1)},Rt={endpoint:new dt("alliancestats","allianceStats",{metrics:{name:"metrics",type:"Set<AllianceMetric>"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",type:"long[Timestamp]"},coalition:{name:"coalition",type:"Set<DBAlliance>"}},(e=>e),2592e3,"None","WebGraph","",!1)},vt={endpoint:new dt("set_token","set_token",{token:{name:"token",type:"UUID"}},(e=>e),2592e3,"None","WebSuccess","",!0)},Dt={endpoint:new dt("session","session",{},(e=>e),2592e3,"LocalStorage","WebSession","",!1)},wt={endpoint:new dt("balance","balance",{nation:{name:"nation",optional:!0,type:"DBNation"}},(e=>e),2592e3,"None","WebBalance","",!1)},Ft={endpoint:new dt("orbisstatbyday","orbisStatByDay",{metrics:{name:"metrics",type:"Set<OrbisMetric>"},start:{name:"start",optional:!0,type:"Long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"}},(e=>e),2592e3,"None","WebGraph","Get a game graph by day",!1)},Ot={endpoint:new dt("unread_announcement","unread_announcement",{ann_id:{name:"ann_id",type:"int"}},(e=>e),2592e3,"None","WebSuccess","",!0)},Ct={endpoint:new dt("register","register",{confirm:{name:"confirm",type:"boolean"}},(e=>e),2592e3,"None","WebSuccess","",!0)},Mt={endpoint:new dt("comparetierstats","compareTierStats",{metric:{name:"metric",type:"TypedFunction<DBNation,Double>"},groupBy:{name:"groupBy",type:"TypedFunction<DBNation,Double>"},coalition1:{name:"coalition1",type:"Set<DBNation>"},coalition2:{name:"coalition2",optional:!0,type:"Set<DBNation>"},coalition3:{name:"coalition3",optional:!0,type:"Set<DBNation>"},coalition4:{name:"coalition4",optional:!0,type:"Set<DBNation>"},coalition5:{name:"coalition5",optional:!0,type:"Set<DBNation>"},coalition6:{name:"coalition6",optional:!0,type:"Set<DBNation>"},coalition7:{name:"coalition7",optional:!0,type:"Set<DBNation>"},coalition8:{name:"coalition8",optional:!0,type:"Set<DBNation>"},coalition9:{name:"coalition9",optional:!0,type:"Set<DBNation>"},coalition10:{name:"coalition10",optional:!0,type:"Set<DBNation>"},total:{name:"total",optional:!0,flag:"t",type:"boolean"},includeApps:{name:"includeApps",optional:!0,flag:"a",type:"boolean"},includeVm:{name:"includeVm",optional:!0,flag:"v",type:"boolean"},includeInactive:{name:"includeInactive",optional:!0,flag:"i",type:"boolean"},snapshotDate:{name:"snapshotDate",optional:!0,flag:"s",type:"Long[Timestamp]"}},(e=>e),2592e3,"None","WebGraph","Compare the tier stats of up to 10 alliances/nations on a single graph",!1)},Lt={endpoint:new dt("radiationbyturn","radiationByTurn",{continents:{name:"continents",type:"Set<Continent>"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"}},(e=>e),2592e3,"None","WebGraph","Graph global and per continent radiation by turn over a specified time period",!1)},kt={endpoint:new dt("globaltierstats","globalTierStats",{metrics:{name:"metrics",type:"Set<TypedFunction<DBNation,Double>>"},topX:{name:"topX",type:"int"},groupBy:{name:"groupBy",optional:!0,type:"TypedFunction<DBNation,Double>",def:"getCities"},total:{name:"total",optional:!0,flag:"t",type:"boolean"}},(e=>e),2592e3,"None","CoalitionGraphs","",!1)},Bt={endpoint:new dt("bank_access","bank_access",{},(e=>e),2592e3,"None","WebBankAccess","",!1)},xt={endpoint:new dt("command","command",{data:{name:"data",type:"Map<String,Object>"}},(e=>e),2592e3,"None","WebViewCommand","",!0)},Gt={endpoint:new dt("tradevolumebyday","tradeVolumeByDay",{resource:{name:"resource",type:"ResourceType"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"}},(e=>e),2592e3,"None","WebGraph","Generate a graph of average trade buy and sell volume by day",!1)},Pt={endpoint:new dt("announcements","announcements",{},(e=>e),30,"SessionStorage","WebAnnouncements","",!1)},Ut={endpoint:new dt("unregister","unregister",{confirm:{name:"confirm",type:"boolean"}},(e=>e),2592e3,"None","WebValue","",!0)},Wt={endpoint:new dt("raid","raid",{nation:{name:"nation",optional:!0,type:"DBNation"},nations:{name:"nations",optional:!0,type:"Set<DBNation>",def:"*,#position<=1"},weak_ground:{name:"weak_ground",optional:!0,type:"boolean",def:"false"},vm_turns:{name:"vm_turns",optional:!0,type:"int",def:"0"},beige_turns:{name:"beige_turns",optional:!0,type:"int",def:"0"},ignore_dnr:{name:"ignore_dnr",optional:!0,type:"boolean",def:"false"},time_inactive:{name:"time_inactive",optional:!0,type:"long[Timediff]",def:"7d"},min_loot:{name:"min_loot",optional:!0,type:"double",def:"-1"},num_results:{name:"num_results",optional:!0,type:"int",def:"8"}},(e=>e),2592e3,"None","WebTargets","",!1)},jt={endpoint:new dt("read_announcement","read_announcement",{ann_id:{name:"ann_id",type:"int"}},(e=>e),2592e3,"None","WebSuccess","",!0)},Vt={endpoint:new dt("tax_expense","tax_expense",{start:{name:"start",type:"long[Timestamp]"},end:{name:"end",type:"long[Timestamp]"},nationList:{name:"nationList",optional:!0,flag:"n",type:"Set<DBNation>"},dontRequireGrant:{name:"dontRequireGrant",optional:!0,flag:"g",type:"boolean"},dontRequireTagged:{name:"dontRequireTagged",optional:!0,flag:"t",type:"boolean"},dontRequireExpiry:{name:"dontRequireExpiry",optional:!0,flag:"e",type:"boolean"},includeDeposits:{name:"includeDeposits",optional:!0,flag:"d",type:"boolean"}},(e=>e),2592e3,"None","TaxExpenses","Show cumulative tax expenses over a period by nation/bracket",!1)},qt={endpoint:new dt("permission","permission",{command:{name:"command",type:"ICommand"}},(e=>e),2592e3,"None","WebPermission","",!0)},Ht={endpoint:new dt("comparestockpilevaluebyday","compareStockpileValueByDay",{stockpile1:{name:"stockpile1",type:"Map<ResourceType,Double>"},stockpile2:{name:"stockpile2",type:"Map<ResourceType,Double>"},numDays:{name:"numDays",type:"int",min:1,max:3e3}},(e=>e),2592e3,"None","WebGraph","Generate a graph comparing market values of two resource amounts by day",!1)},Yt={endpoint:new dt("militarizationtime","militarizationTime",{alliance:{name:"alliance",type:"DBAlliance"},start_time:{name:"start_time",optional:!0,type:"long[Timestamp]",def:"7d"},end_time:{name:"end_time",optional:!0,flag:"e",type:"Long[Timestamp]"}},(e=>e),2592e3,"None","WebGraph","Graph militarization (soldier, tank, aircraft, ship) over time of an alliance",!1)},Kt={endpoint:new dt("input_options","input_options",{type:{name:"type",type:"String"}},(e=>e),30,"LocalStorage","WebOptions","",!1)},zt={endpoint:new dt("tradepricebyday","tradePriceByDay",{resources:{name:"resources",type:"Set<ResourceType>"},numDays:{name:"numDays",type:"int"}},(e=>e),2592e3,"None","WebGraph","Generate a graph of average buy and sell trade price by day",!1)},Xt={endpoint:new dt("login_mail","login_mail",{nation:{name:"nation",type:"DBNation"}},(e=>e),2592e3,"None","WebUrl","",!0)},Jt={endpoint:new dt("trademarginbyday","tradeMarginByDay",{resources:{name:"resources",type:"Set<ResourceType>"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"},percent:{name:"percent",optional:!0,desc:"Use the margin percent instead of absolute difference",type:"boolean",def:"true"}},(e=>e),2592e3,"None","WebGraph","Generate a graph of average trade buy and sell margin by day",!1)},Qt={endpoint:new dt("my_wars","my_wars",{},(e=>e),2592e3,"None","WebMyWars","",!1)},Zt={endpoint:new dt("my_audits","my_audits",{},(e=>e),30,"SessionStorage","WebAudits","",!1)},$t={endpoint:new dt("records","records",{nation:{name:"nation",optional:!0,type:"DBNation"}},(e=>e),2592e3,"None","WebTable","",!1)},ea={endpoint:new dt("logout","logout",{},(e=>e),2592e3,"None","WebSuccess","",!0)},ta={endpoint:new dt("scoretiergraph","scoreTierGraph",{coalition1:{name:"coalition1",type:"Set<DBNation>"},coalition2:{name:"coalition2",type:"Set<DBNation>"},includeInactives:{name:"includeInactives",optional:!0,flag:"i",type:"boolean"},includeApplicants:{name:"includeApplicants",optional:!0,flag:"a",type:"boolean"},snapshotDate:{name:"snapshotDate",optional:!0,flag:"s",type:"Long[Timestamp]"}},(e=>e),2592e3,"None","WebGraph","Generate a graph of nation counts by score between two coalitions",!1)},aa={endpoint:new dt("spytiergraph","spyTierGraph",{coalition1:{name:"coalition1",type:"Set<DBNation>"},coalition2:{name:"coalition2",type:"Set<DBNation>"},includeInactives:{name:"includeInactives",optional:!0,flag:"i",type:"boolean"},includeApplicants:{name:"includeApplicants",optional:!0,flag:"a",type:"boolean"},total:{name:"total",optional:!0,flag:"t",desc:"Graph the total spies instead of average per nation",type:"boolean"},barGraph:{name:"barGraph",optional:!0,flag:"b",type:"boolean"}},(e=>e),2592e3,"None","WebGraph","Generate a graph of spy counts by city count between two coalitions\nNations which are applicants, in vacation mode or inactive (2 days) are excluded",!1)},na={endpoint:new dt("strengthtiergraph","strengthTierGraph",{coalition1:{name:"coalition1",type:"Set<DBNation>"},coalition2:{name:"coalition2",type:"Set<DBNation>"},includeInactives:{name:"includeInactives",optional:!0,flag:"i",type:"boolean"},includeApplicants:{name:"includeApplicants",optional:!0,flag:"n",type:"boolean"},col1MMR:{name:"col1MMR",optional:!0,flag:"a",desc:"Use the score/strength of coalition 1 nations at specific military unit levels",type:"MMRDouble"},col2MMR:{name:"col2MMR",optional:!0,flag:"b",desc:"Use the score/strength of coalition 2 nations at specific military unit levels",type:"MMRDouble"},col1Infra:{name:"col1Infra",optional:!0,flag:"c",desc:"Use the score of coalition 1 nations at specific average infrastructure levels",type:"Double"},col2Infra:{name:"col2Infra",optional:!0,flag:"d",desc:"Use the score of coalition 2 nations at specific average infrastructure levels",type:"Double"},snapshotDate:{name:"snapshotDate",optional:!0,flag:"s",type:"Long[Timestamp]"}},(e=>e),2592e3,"None","WebGraph","Generate a graph of nation military strength by score between two coalitions\n1 tank = 1/32 aircraft for strength calculations\nEffective score range is limited to 1.75x with a linear reduction of strength up to 40% to account for up-declares",!1)},oa={endpoint:new dt("unread_count","unread_count",{},(e=>e),2592e3,"None","WebInt","",!1)},ia={endpoint:new dt("set_oauth_code","set_oauth_code",{code:{name:"code",type:"String"}},(e=>e),2592e3,"None","WebSuccess","",!0)},sa={endpoint:new dt("announcement_titles","announcement_titles",{read:{name:"read",optional:!0,flag:"r",type:"boolean"}},(e=>e),2592e3,"None","WebAnnouncements","",!1)},ra={endpoint:new dt("warattacksbyday","warAttacksByDay",{nations:{name:"nations",optional:!0,type:"Set<DBNation>"},cutoff:{name:"cutoff",optional:!0,desc:"Period of time to graph",type:"Long[Timestamp]"},allowedTypes:{name:"allowedTypes",optional:!0,desc:"Restrict to a list of attack types",type:"Set<AttackType>"}},(e=>e),2592e3,"None","WebGraph","Display a graph of the number of attacks by the specified nations per day over a time period",!1)},la={endpoint:new dt("metric_compare_by_turn","metric_compare_by_turn",{metric:{name:"metric",type:"AllianceMetric"},alliances:{name:"alliances",type:"Set<DBAlliance>"},start:{name:"start",desc:"Date to start from",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"}},(e=>e),2592e3,"None","WebGraph","Compare the metric over time between multiple alliances",!1)},ca={endpoint:new dt("multi_buster","multi_buster",{nation:{name:"nation",type:"DBNation"},forceUpdate:{name:"forceUpdate",optional:!0,type:"Boolean"}},(e=>e),2592e3,"None","MultiResult","",!1)},pa={endpoint:new dt("view_announcement","view_announcement",{ann_id:{name:"ann_id",type:"int"}},(e=>e),2592e3,"SessionStorage","WebAnnouncement","",!1)},da={endpoint:new dt("set_guild","set_guild",{guild:{name:"guild",type:"Guild"}},(e=>e),2592e3,"None","SetGuild","",!0)},ua={endpoint:new dt("metricbygroup","metricByGroup",{metrics:{name:"metrics",type:"Set<TypedFunction<DBNation,Double>>"},nations:{name:"nations",type:"Set<DBNation>"},groupBy:{name:"groupBy",optional:!0,type:"TypedFunction<DBNation,Double>",def:"getCities"},includeInactives:{name:"includeInactives",optional:!0,flag:"i",type:"boolean"},includeApplicants:{name:"includeApplicants",optional:!0,flag:"a",type:"boolean"},total:{name:"total",optional:!0,flag:"t",type:"boolean"},snapshotDate:{name:"snapshotDate",optional:!0,flag:"s",type:"Long[Timestamp]"}},(e=>e),2592e3,"None","WebGraph","Graph a set of nation metrics for the specified nations over a period of time based on daily nation and city snapshots",!1)},ma={endpoint:new dt("multi_v2","multi_v2",{nation:{name:"nation",type:"DBNation"},forceUpdate:{name:"forceUpdate",optional:!0,type:"Boolean"}},(e=>e),2592e3,"None","AdvMultiReport","",!1)},ya={endpoint:new dt("citytiergraph","cityTierGraph",{coalition1:{name:"coalition1",type:"Set<DBNation>"},coalition2:{name:"coalition2",type:"Set<DBNation>"},includeInactives:{name:"includeInactives",optional:!0,flag:"i",type:"boolean"},barGraph:{name:"barGraph",optional:!0,flag:"b",type:"boolean"},includeApplicants:{name:"includeApplicants",optional:!0,flag:"a",type:"boolean"},snapshotDate:{name:"snapshotDate",optional:!0,flag:"s",type:"Long[Timestamp]"}},(e=>e),2592e3,"None","WebGraph","Generate a bar char comparing the nation at each city count (tiering) between two coalitions",!1)},ga={endpoint:new dt("unprotected","unprotected",{nation:{name:"nation",optional:!0,type:"DBNation"},nations:{name:"nations",optional:!0,type:"Set<DBNation>",def:"*"},includeAllies:{name:"includeAllies",optional:!0,flag:"a",type:"boolean"},ignoreODP:{name:"ignoreODP",optional:!0,flag:"o",type:"boolean"},ignore_dnr:{name:"ignore_dnr",optional:!0,type:"boolean",def:"false"},maxRelativeTargetStrength:{name:"maxRelativeTargetStrength",optional:!0,flag:"s",desc:"The maximum allowed military strength of the target nation relative to you",type:"Double",def:"1.2"},maxRelativeCounterStrength:{name:"maxRelativeCounterStrength",optional:!0,flag:"c",desc:"The maximum allowed military strength of counters relative to you",type:"Double",def:"1.2"},num_results:{name:"num_results",optional:!0,desc:"Only list targets within range of ALL attackers",type:"int",def:"8"}},(e=>e),2592e3,"None","WebTargets","",!1)},ha={endpoint:new dt("tradepricebydayjson","tradePriceByDayJson",{resources:{name:"resources",type:"Set<ResourceType>"},days:{name:"days",type:"int",min:1}},(e=>e),2592e3,"None","WebGraph","",!1)},fa={endpoint:new dt("withdraw","withdraw",{receiver:{name:"receiver",type:"NationOrAlliance"},amount:{name:"amount",type:"Map<ResourceType,Double>"},note:{name:"note",type:"DepositType"}},(e=>e),2592e3,"None","WebTransferResult","",!0)},_a={endpoint:new dt("tradetotalbyday","tradeTotalByDay",{resource:{name:"resource",type:"ResourceType"},start:{name:"start",type:"long[Timestamp]"},end:{name:"end",optional:!0,type:"Long[Timestamp]"}},(e=>e),2592e3,"None","WebGraph","Generate a graph of average trade buy and sell total by day",!1)},Aa={endpoint:new dt("query","query",{queries:{name:"queries",type:"List<Entry<String,Map<String,Object>>>"}},(e=>e),2592e3,"None","WebBulkQuery","",!0)},ba={endpoint:new dt("unset_guild","unset_guild",{},(e=>e),2592e3,"None","WebSuccess","",!0)},Ta=[ht,ft,_t,At,bt,Tt,St,Et,Nt,It,Rt,vt,Dt,wt,Ft,Ot,Ct,Mt,Lt,kt,Bt,xt,Gt,Pt,Ut,Wt,jt,Vt,qt,Ht,Yt,Kt,zt,Xt,Jt,Qt,Zt,$t,ea,ta,aa,na,oa,ia,sa,ra,la,ca,pa,da,ua,ma,ya,ga,ha,fa,_a,Aa,ba];export{ye as $,sa as A,Bt as B,Oe as C,we as D,Ta as E,Fe as F,ft as G,Qe as H,Kt as I,ma as J,ca as K,de as L,Zt as M,Ie as N,ut as O,qt as P,ue as Q,jt as R,Dt as S,_t as T,oa as U,pa as V,fa as W,Se as X,me as Y,Ue as Z,he as _,Qt as a,fe as a0,ge as a1,_e as a2,re as a3,Q as a4,ie as a5,ce as a6,Nt as b,ve as c,Ut as d,mt as e,Re as f,da as g,ba as h,Ot as i,Xe as j,wt as k,Ee as l,$t as m,ga as n,Wt as o,vt as p,ia as q,ea as r,Xt as s,ze as t,kt as u,la as v,Rt as w,Mt as x,yt as y,xt as z};
